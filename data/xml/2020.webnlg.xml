<?xml version='1.0' encoding='UTF-8'?>
<collection id="2020.webnlg">
  <volume id="1" ingest-date="2021-01-18">
    <meta>
      <booktitle>Proceedings of the 3rd International Workshop on Natural Language Generation from the Semantic Web (WebNLG+)</booktitle>
      <editor><first>Thiago</first><last>Castro Ferreira</last></editor>
      <editor><first>Claire</first><last>Gardent</last></editor>
      <editor><first>Nikolai</first><last>Ilinykh</last></editor>
      <editor><first>Chris</first><last>van der Lee</last></editor>
      <editor><first>Simon</first><last>Mille</last></editor>
      <editor><first>Diego</first><last>Moussallem</last></editor>
      <editor><first>Anastasia</first><last>Shimorina</last></editor>
      <publisher>Association for Computational Linguistics</publisher>
      <address>Dublin, Ireland (Virtual)</address>
      <month>12</month>
      <year>2020</year>
      <venue>webnlg</venue>
    </meta>
    <frontmatter>
      <url hash="b43295c2">2020.webnlg-1.0</url>
      <bibkey>webnlg-2020-international</bibkey>
    </frontmatter>
    <paper id="1">
      <title>A Case Study of <fixed-case>NLG</fixed-case> from Multimedia Data Sources: Generating Architectural Landmark Descriptions</title>
      <author><first>Simon</first><last>Mille</last></author>
      <author><first>Spyridon</first><last>Symeonidis</last></author>
      <author><first>Maria</first><last>Rousi</last></author>
      <author><first>Montserrat</first><last>Marimon Felipe</last></author>
      <author><first>Klearchos</first><last>Stavrothanasopoulos</last></author>
      <author><first>Petros</first><last>Alvanitopoulos</last></author>
      <author><first>Roberto</first><last>Carlini Salguero</last></author>
      <author><first>Jens</first><last>Grivolla</last></author>
      <author><first>Georgios</first><last>Meditskos</last></author>
      <author><first>Stefanos</first><last>Vrochidis</last></author>
      <author><first>Leo</first><last>Wanner</last></author>
      <pages>2–14</pages>
      <abstract>In this paper, we present a pipeline system that generates architectural landmark descriptions using textual, visual and structured data. The pipeline comprises five main components:(i) a textual analysis component, which extracts information from Wikipedia pages; (ii)a visual analysis component, which extracts information from copyright-free images; (iii) a retrieval component, which gathers relevant (property, subject, object) triples from DBpedia; (iv) a fusion component, which stores the contents from the different modalities in a Knowledge Base (KB) and resolves the conflicts that stem from using different sources of information; (v) an NLG component, which verbalises the resulting contents of the KB. We show that thanks to the addition of other modalities, we can make the verbalisation of DBpedia triples more relevant and/or inspirational.</abstract>
      <url hash="199889fe">2020.webnlg-1.1</url>
      <bibkey>mille-etal-2020-case</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/places">Places</pwcdataset>
    </paper>
    <paper id="2">
      <title><fixed-case>OWLSIZ</fixed-case>: An isi<fixed-case>Z</fixed-case>ulu <fixed-case>CNL</fixed-case> for structured knowledge validation</title>
      <author><first>Zola</first><last>Mahlaza</last></author>
      <author><first>C. Maria</first><last>Keet</last></author>
      <pages>15–25</pages>
      <abstract>In iterative knowledge elicitation, engineers are expected to be directly involved in validating the already captured knowledge and obtaining new knowledge increments, thus making the process time consuming. Languages such as English have controlled natural languages than can be repurposed to generate natural language questions from an ontology in order to allow a domain expert to independently validate the contents of an ontology without understanding a ontology authoring language such as OWL. IsiZulu, South Africa’s main L1 language by number speakers, does not have such a resource, hence, it is not possible to build a verbaliser to generate such questions. Therefore, we propose an isiZulu controlled natural language, called OWL Simplified isiZulu (OWLSIZ), for producing grammatical and fluent questions from an ontology. Human evaluation of the generated questions showed that participants’ judgements agree that most (83%) questions are positive for grammaticality or understandability.</abstract>
      <url hash="24192741">2020.webnlg-1.2</url>
      <bibkey>mahlaza-keet-2020-owlsiz</bibkey>
    </paper>
    <paper id="3">
      <title>A General Benchmarking Framework for Text Generation</title>
      <author><first>Diego</first><last>Moussallem</last></author>
      <author><first>Paramjot</first><last>Kaur</last></author>
      <author><first>Thiago</first><last>Ferreira</last></author>
      <author><first>Chris</first><last>van der Lee</last></author>
      <author><first>Anastasia</first><last>Shimorina</last></author>
      <author><first>Felix</first><last>Conrads</last></author>
      <author><first>Michael</first><last>Röder</last></author>
      <author><first>René</first><last>Speck</last></author>
      <author><first>Claire</first><last>Gardent</last></author>
      <author><first>Simon</first><last>Mille</last></author>
      <author><first>Nikolai</first><last>Ilinykh</last></author>
      <author><first>Axel-Cyrille</first><last>Ngonga Ngomo</last></author>
      <pages>27–33</pages>
      <abstract>The RDF-to-text task has recently gained substantial attention due to the continuous growth of RDF knowledge graphs in number and size. Recent studies have focused on systematically comparing RDF-to-text approaches on benchmarking datasets such as WebNLG. Although some evaluation tools have already been proposed for text generation, none of the existing solutions abides by the Findability, Accessibility, Interoperability, and Reusability (FAIR) principles and involves RDF data for the knowledge extraction task. In this paper, we present BENG, a FAIR benchmarking platform for Natural Language Generation (NLG) and Knowledge Extraction systems with focus on RDF data. BENG builds upon the successful benchmarking platform GERBIL, is opensource and is publicly available along with the data it contains.</abstract>
      <url hash="7f61d4bf">2020.webnlg-1.3</url>
      <bibkey>moussallem-etal-2020-general</bibkey>
      <pwccode url="https://github.com/dice-group/beng" additional="false">dice-group/beng</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/webnlg">WebNLG</pwcdataset>
    </paper>
    <paper id="4">
      <title>Controllable Neural Natural Language Generation: comparison of state-of-the-art control strategies</title>
      <author><first>Yuanmin</first><last>Leng</last></author>
      <author><first>François</first><last>Portet</last></author>
      <author><first>Cyril</first><last>Labbé</last></author>
      <author><first>Raheel</first><last>Qader</last></author>
      <pages>34–39</pages>
      <abstract>Most NLG systems target text fluency and grammatical correctness, disregarding control over text structure and length. However, control over the output plays an important part in industrial NLG applications. In this paper, we study different strategies of control in triple-totext generation systems particularly from the aspects of text structure and text length. Regarding text structure, we present an approach that relies on aligning the input entities with the facts in the target side. It makes sure that the order and the distribution of entities in both the input and the text are the same. As for control over text length, we show two different approaches. One is to supply length constraint as input while the other is to force the end-ofsentence tag to be included at each step when using top-k decoding strategy. Finally, we propose four metrics to assess the degree to which these methods will affect a NLG system’s ability to control text structure and length. Our analyses demonstrate that all the methods enhance the system’s ability with a slight decrease in text fluency. In addition, constraining length at the input level performs much better than control at decoding level.</abstract>
      <url hash="5b6c2367">2020.webnlg-1.4</url>
      <bibkey>leng-etal-2020-controllable</bibkey>
    </paper>
    <paper id="5">
      <title>Enhancing Sequence-to-Sequence Modelling for <fixed-case>RDF</fixed-case> triples to Natural Text</title>
      <author><first>Oriol</first><last>Domingo</last></author>
      <author><first>David</first><last>Bergés</last></author>
      <author><first>Roser</first><last>Cantenys</last></author>
      <author><first>Roger</first><last>Creus</last></author>
      <author><first>José A. R.</first><last>Fonollosa</last></author>
      <pages>40–47</pages>
      <abstract>establishes key guidelines on how, which and when Machine Translation (MT) techniques are worth applying to RDF-to-Text task. Not only do we apply and compare the most prominent MT architecture, the Transformer, but we also analyze state-of-the-art techniques such as Byte Pair Encoding or Back Translation to demonstrate an improvement in generalization. In addition, we empirically show how to tailor these techniques to enhance models relying on learned embeddings rather than using pretrained ones. Automatic metrics suggest that Back Translation can significantly improve model performance up to 7 BLEU points, hence, opening a window for surpassing state-of-the-art results with appropriate architectures.</abstract>
      <url hash="03ebb663">2020.webnlg-1.5</url>
      <bibkey>domingo-etal-2020-enhancing</bibkey>
      <pwccode url="https://github.com/uridr/rdf-textgeneration" additional="false">uridr/rdf-textgeneration</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/webnlg">WebNLG</pwcdataset>
    </paper>
    <paper id="6">
      <title>Utilising Knowledge Graph Embeddings for Data-to-Text Generation</title>
      <author><first>Nivranshu</first><last>Pasricha</last></author>
      <author><first>Mihael</first><last>Arcan</last></author>
      <author><first>Paul</first><last>Buitelaar</last></author>
      <pages>48–53</pages>
      <abstract>Data-to-text generation has recently seen a move away from modular and pipeline architectures towards end-to-end architectures based on neural networks. In this work, we employ knowledge graph embeddings and explore their utility for end-to-end approaches in a data-to-text generation task. Our experiments show that using knowledge graph embeddings can yield an improvement of up to 2 – 3 BLEU points for seen categories on the WebNLG corpus without modifying the underlying neural network architecture.</abstract>
      <url hash="b00d8644">2020.webnlg-1.6</url>
      <bibkey>pasricha-etal-2020-utilising</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/dbpedia">DBpedia</pwcdataset>
    </paper>
    <paper id="7">
      <title>The 2020 Bilingual, Bi-Directional <fixed-case>W</fixed-case>eb<fixed-case>NLG</fixed-case>+ Shared Task: Overview and Evaluation Results (<fixed-case>W</fixed-case>eb<fixed-case>NLG</fixed-case>+ 2020)</title>
      <author><first>Thiago</first><last>Castro Ferreira</last></author>
      <author><first>Claire</first><last>Gardent</last></author>
      <author><first>Nikolai</first><last>Ilinykh</last></author>
      <author><first>Chris</first><last>van der Lee</last></author>
      <author><first>Simon</first><last>Mille</last></author>
      <author><first>Diego</first><last>Moussallem</last></author>
      <author><first>Anastasia</first><last>Shimorina</last></author>
      <pages>55–76</pages>
      <abstract>WebNLG+ offers two challenges: (i) mapping sets of RDF triples to English or Russian text (generation) and (ii) converting English or Russian text to sets of RDF triples (semantic parsing). Compared to the eponymous WebNLG challenge, WebNLG+ provides an extended dataset that enable the training, evaluation, and comparison of microplanners and semantic parsers. In this paper, we present the results of the generation and semantic parsing task for both English and Russian and provide a brief description of the participating systems.</abstract>
      <url hash="748fb5f0">2020.webnlg-1.7</url>
      <bibkey>castro-ferreira-etal-2020-2020</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/webnlg">WebNLG</pwcdataset>
    </paper>
    <paper id="8">
      <title><fixed-case>C</fixed-case>ycle<fixed-case>GT</fixed-case>: Unsupervised Graph-to-Text and Text-to-Graph Generation via Cycle Training</title>
      <author><first>Qipeng</first><last>Guo</last></author>
      <author><first>Zhijing</first><last>Jin</last></author>
      <author><first>Xipeng</first><last>Qiu</last></author>
      <author><first>Weinan</first><last>Zhang</last></author>
      <author><first>David</first><last>Wipf</last></author>
      <author><first>Zheng</first><last>Zhang</last></author>
      <pages>77–88</pages>
      <abstract>Two important tasks at the intersection of knowledge graphs and natural language processing are graph-to-text (G2T) and text-tograph (T2G) conversion. Due to the difficulty and high cost of data collection, the supervised data available in the two fields are usually on the magnitude of tens of thousands, for example, 18K in the WebNLG 2017 dataset after preprocessing, which is far fewer than the millions of data for other tasks such as machine translation. Consequently, deep learning models for G2T and T2G suffer largely from scarce training data. We present CycleGT, an unsupervised training method that can bootstrap from fully non-parallel graph and text data, and iteratively back translate between the two forms. Experiments on WebNLG datasets show that our unsupervised model trained on the same number of data achieves performance on par with several fully supervised models. Further experiments on the non-parallel GenWiki dataset verify that our method performs the best among unsupervised baselines. This validates our framework as an effective approach to overcome the data scarcity problem in the fields of G2T and T2G.</abstract>
      <url hash="2008cf2a">2020.webnlg-1.8</url>
      <bibkey>guo-etal-2020-cyclegt</bibkey>
      <pwccode url="https://github.com/QipengGuo/CycleGT" additional="true">QipengGuo/CycleGT</pwccode>
    </paper>
    <paper id="9">
      <title>Denoising Pre-Training and Data Augmentation Strategies for Enhanced <fixed-case>RDF</fixed-case> Verbalization with Transformers</title>
      <author><first>Sebastien</first><last>Montella</last></author>
      <author><first>Betty</first><last>Fabre</last></author>
      <author><first>Tanguy</first><last>Urvoy</last></author>
      <author><first>Johannes</first><last>Heinecke</last></author>
      <author><first>Lina</first><last>Rojas-Barahona</last></author>
      <pages>89–99</pages>
      <abstract>The task of verbalization of RDF triples has known a growth in popularity due to the rising ubiquity of Knowledge Bases (KBs). The formalism of RDF triples is a simple and efficient way to store facts at a large scale. However, its abstract representation makes it difficult for humans to interpret. For this purpose, the WebNLG challenge aims at promoting automated RDF-to-text generation. We propose to leverage pre-trainings from augmented data with the Transformer model using a data augmentation strategy. Our experiment results show a minimum relative increases of 3.73%, 126.05% and 88.16% in BLEU score for seen categories, unseen entities and unseen categories respectively over the standard training.</abstract>
      <url hash="5b59d320">2020.webnlg-1.9</url>
      <bibkey>montella-etal-2020-denoising</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/webnlg">WebNLG</pwcdataset>
    </paper>
    <paper id="10">
      <title><tex-math>{\mathcal{P}^2}</tex-math>: A Plan-and-Pretrain Approach for Knowledge Graph-to-Text Generation</title>
      <author><first>Qipeng</first><last>Guo</last></author>
      <author><first>Zhijing</first><last>Jin</last></author>
      <author><first>Ning</first><last>Dai</last></author>
      <author><first>Xipeng</first><last>Qiu</last></author>
      <author><first>Xiangyang</first><last>Xue</last></author>
      <author><first>David</first><last>Wipf</last></author>
      <author><first>Zheng</first><last>Zhang</last></author>
      <pages>100–106</pages>
      <abstract>Text verbalization of knowledge graphs is an important problem with wide application to natural language generation (NLG) systems. It is challenging because the generated text not only needs to be grammatically correct (fluency), but also has to contain the given structured knowledge input (relevance) and meet some other criteria. We develop a plan-and-pretrain approach, <tex-math>\mathcal{P}^2</tex-math>, which consists of a relational graph convolutional network (RGCN) planner and the pretrained sequence-tosequence (Seq2Seq) model T5. Specifically, the R-GCN planner first generates an order of the knowledge graph triplets, corresponding to the order that they will be mentioned in text, and then T5 produces the surface realization of the given plan. In the WebNLG+ 2020 Challenge, our submission ranked in 1st place on all automatic and human evaluation criteria of the English RDF-to-text generation task.</abstract>
      <url hash="dd2fe6f9">2020.webnlg-1.10</url>
      <bibkey>guo-etal-2020-2</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/webnlg">WebNLG</pwcdataset>
    </paper>
    <paper id="11">
      <title>Improving Text-to-Text Pre-trained Models for the Graph-to-Text Task</title>
      <author><first>Zixiaofan</first><last>Yang</last></author>
      <author><first>Arash</first><last>Einolghozati</last></author>
      <author><first>Hakan</first><last>Inan</last></author>
      <author><first>Keith</first><last>Diedrick</last></author>
      <author><first>Angela</first><last>Fan</last></author>
      <author><first>Pinar</first><last>Donmez</last></author>
      <author><first>Sonal</first><last>Gupta</last></author>
      <pages>107–116</pages>
      <abstract>Converting a knowledge graph or sub-graph to natural text is useful when answering questions based on a knowledge base. High-capacity language models pre-trained on large-scale text corpora have recently been shown to be powerful when fine-tuned for the knowledge-graph-to-text (KG-to-text) task. In this paper, we propose two classes of methods to improve such pre-trained models for this task. First, we improve the structure awareness of the model by organizing the input as well as learning optimal ordering via multitask learning. Second, we bridge the domain gap between text-to-text and KG-to-text tasks via a second-phase KG-to-text pre-training on similar datasets and extra lexicalization supervision to make the input more similar to natural text. We demonstrate the efficacy of our methods on the popular WebNLG dataset. Our best model achieves an almost 3 point BLEU improvement on a strong baseline while lowering the relative slot-error-rate by around 35%. We also validate our results via human evaluation.</abstract>
      <url hash="05a2e44c">2020.webnlg-1.11</url>
      <bibkey>yang-etal-2020-improving-text</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/docred">DocRED</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/webnlg">WebNLG</pwcdataset>
    </paper>
    <paper id="12">
      <title>Leveraging Large Pretrained Models for <fixed-case>W</fixed-case>eb<fixed-case>NLG</fixed-case> 2020</title>
      <author><first>Xintong</first><last>Li</last></author>
      <author><first>Aleksandre</first><last>Maskharashvili</last></author>
      <author><first>Symon</first><last>Jory Stevens-Guille</last></author>
      <author><first>Michael</first><last>White</last></author>
      <pages>117–124</pages>
      <abstract>In this paper, we report experiments on finetuning large pretrained models to realize resource description framework (RDF) triples to natural language. We provide the details of how to build one of the top-ranked English generation models in WebNLG Challenge 2020. We also show that there appears to be considerable potential for reranking to improve the current state of the art both in terms of statistical metrics and model-based metrics. Our human analyses of the generated texts show that for Russian, pretrained models showed some success, both in terms of lexical and morpho-syntactic choices for generation, as well as for content aggregation. Nevertheless, in a number of cases, the model can be unpredictable, both in terms of failure or success. Omissions of the content and hallucinations, which in many cases occurred at the same time, were major problems. By contrast, the models for English showed near perfect performance on the validation set.</abstract>
      <url hash="45676bd5">2020.webnlg-1.12</url>
      <bibkey>li-etal-2020-leveraging</bibkey>
      <pwccode url="https://github.com/znculee/webnlg2020" additional="false">znculee/webnlg2020</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/dbpedia">DBpedia</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/webnlg">WebNLG</pwcdataset>
    </paper>
    <paper id="13">
      <title>Machine Translation Aided Bilingual Data-to-Text Generation and Semantic Parsing</title>
      <author><first>Oshin</first><last>Agarwal</last></author>
      <author><first>Mihir</first><last>Kale</last></author>
      <author><first>Heming</first><last>Ge</last></author>
      <author><first>Siamak</first><last>Shakeri</last></author>
      <author><first>Rami</first><last>Al-Rfou</last></author>
      <pages>125–130</pages>
      <abstract>We present a system for bilingual Data-ToText Generation and Semantic Parsing. We use a text-to-text generator to learn a single model that works for both languages on each of the tasks. The model is aided by machine translation during both pre-training and fine-tuning. We evaluate the system on WebNLG 2020 data 1 , which consists of RDF triples in English and natural language sentences in English and Russian for both the tasks. We achieve considerable gains over monolingual models, especially on unseen relations and Russian.</abstract>
      <url hash="d7ee4d8f">2020.webnlg-1.13</url>
      <bibkey>agarwal-etal-2020-machine</bibkey>
    </paper>
    <paper id="14">
      <title><fixed-case>NILC</fixed-case> at <fixed-case>W</fixed-case>eb<fixed-case>NLG</fixed-case>+: Pretrained Sequence-to-Sequence Models on <fixed-case>RDF</fixed-case>-to-Text Generation</title>
      <author><first>Marco Antonio</first><last>Sobrevilla Cabezudo</last></author>
      <author><first>Thiago A. S.</first><last>Pardo</last></author>
      <pages>131–136</pages>
      <abstract>This paper describes the submission by the NILC Computational Linguistics research group of the University of São Paulo/Brazil to the RDF-to-Text task for English at the WebNLG+ challenge. The success of the current pretrained models like BERT or GPT-2 in text-to-text generation tasks is well-known, however, its application/success on data-totext generation has not been well-studied and proven. This way, we explore how good a pretrained model, in particular BART, performs on the data-to-text generation task. The results obtained were worse than the baseline and other systems in almost all automatic measures. However, the human evaluation shows better results for our system. Besides, results suggest that BART may generate paraphrases of reference texts.</abstract>
      <url hash="13d875f9">2020.webnlg-1.14</url>
      <bibkey>sobrevilla-cabezudo-pardo-2020-nilc-webnlg</bibkey>
    </paper>
    <paper id="15">
      <title><fixed-case>NUIG</fixed-case>-<fixed-case>DSI</fixed-case> at the <fixed-case>W</fixed-case>eb<fixed-case>NLG</fixed-case>+ challenge: Leveraging Transfer Learning for <fixed-case>RDF</fixed-case>-to-text generation</title>
      <author><first>Nivranshu</first><last>Pasricha</last></author>
      <author><first>Mihael</first><last>Arcan</last></author>
      <author><first>Paul</first><last>Buitelaar</last></author>
      <pages>137–143</pages>
      <abstract>This paper describes the system submitted by NUIG-DSI to the WebNLG+ challenge 2020 in the RDF-to-text generation task for the English language. For this challenge, we leverage transfer learning by adopting the T5 model architecture for our submission and fine-tune the model on the WebNLG+ corpus. Our submission ranks among the top five systems for most of the automatic evaluation metrics achieving a BLEU score of 51.74 over all categories with scores of 58.23 and 45.57 across seen and unseen categories respectively.</abstract>
      <url hash="308e99a7">2020.webnlg-1.15</url>
      <bibkey>pasricha-etal-2020-nuig</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/dbpedia">DBpedia</pwcdataset>
    </paper>
    <paper id="16">
      <title><fixed-case>RDF</fixed-case>js<fixed-case>R</fixed-case>eal<fixed-case>B</fixed-case>: a Symbolic Approach for Generating Text from <fixed-case>RDF</fixed-case> Triples</title>
      <author><first>Guy</first><last>Lapalme</last></author>
      <pages>144–153</pages>
      <abstract>This paper describes the Resource Description Framework (RDF) triples verbalizer developed for the WEB NLG CHALLENGE 2020 shared task. After reviewing representative works in Natural Language Generation in the context of the Semantic Web, the task is then described. We then sketch the symbolic approach we used for verbalizing RDF triples: once the triples are grouped by subject, each group is realized as one or more sentences using templates written in Python whose output is feed to an English realizer written in Javascript. The system was developed using the test data of the previous edition of the task and the train and development data of this year’s task. The automatic scores for this year’s test data are quite competitive. We conclude with a critical review of the data and discuss the suitability of this competition results in a wider Natural Language Generation setting.</abstract>
      <url hash="5a411a69">2020.webnlg-1.16</url>
      <bibkey>lapalme-2020-rdfjsrealb</bibkey>
    </paper>
    <paper id="17">
      <title>Semantic Triples Verbalization with Generative Pre-Training Model</title>
      <author><first>Pavel</first><last>Blinov</last></author>
      <pages>154–158</pages>
      <abstract>The paper devoted to the problem of automatic text generation from RDF triples. This problem was formalized and proposed as a part of the 2020 WebNLG challenge. We describe our approach to the RDF-to-text generation task based on a neural network model with the Generative Pre-Training (GPT-2) architecture. In particular, we outline a way of base GPT-2 model conversion to a model with language and classification heads and discuss the text generation methods. To research the parameters’ influence on the end-task performance a series of experiments was carried out. We report the result metrics and conclude with possible improvement directions.</abstract>
      <url hash="c59fcc80">2020.webnlg-1.17</url>
      <bibkey>blinov-2020-semantic</bibkey>
      <pwccode url="https://github.com/blinovpd/ru-rdf2text" additional="false">blinovpd/ru-rdf2text</pwccode>
    </paper>
    <paper id="18">
      <title>Text-to-Text Pre-Training Model with Plan Selection for <fixed-case>RDF</fixed-case>-to-Text Generation</title>
      <author><first>Natthawut</first><last>Kertkeidkachorn</last></author>
      <author><first>Hiroya</first><last>Takamura</last></author>
      <pages>159–166</pages>
      <abstract>We report our system description for the RDFto-Text task in English on the WebNLG 2020 Challenge. Our approach consists of two parts: 1) RDF-to-Text Generation Pipeline and 2) Plan Selection. RDF-to-Text Generation Pipeline is built on the state-of-the-art pretraining model, while Plan Selection helps decide the proper plan into the pipeline.</abstract>
      <url hash="16956193">2020.webnlg-1.18</url>
      <bibkey>kertkeidkachorn-takamura-2020-text</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/dbpedia">DBpedia</pwcdataset>
    </paper>
    <paper id="19">
      <title>The <fixed-case>UPC</fixed-case> <fixed-case>RDF</fixed-case>-to-Text System at <fixed-case>W</fixed-case>eb<fixed-case>NLG</fixed-case> Challenge 2020</title>
      <author><first>David</first><last>Bergés</last></author>
      <author><first>Roser</first><last>Cantenys</last></author>
      <author><first>Roger</first><last>Creus</last></author>
      <author><first>Oriol</first><last>Domingo</last></author>
      <author><first>José A. R.</first><last>Fonollosa</last></author>
      <pages>167–170</pages>
      <abstract>This work describes the end-to-end system architecture presented at WebNLG Challenge 2020. The system follows the traditional Machine Translation (MT) pipeline, based on the Transformer model, applied in most text-totext problems. Our solution is enriched by means of a Back Translation step over the original corpus. Thus, the system directly relies on lexicalise format since the synthetic data limits the use of delexicalisation.</abstract>
      <url hash="03f4cac9">2020.webnlg-1.19</url>
      <bibkey>berges-etal-2020-upc</bibkey>
    </paper>
    <paper id="20">
      <title>Train Hard, Finetune Easy: Multilingual Denoising for <fixed-case>RDF</fixed-case>-to-Text Generation</title>
      <author><first>Zdeněk</first><last>Kasner</last></author>
      <author><first>Ondřej</first><last>Dušek</last></author>
      <pages>171–176</pages>
      <abstract>We describe our system for the RDF-to-text generation task of the WebNLG Challenge 2020. We base our approach on the mBART model, which is pre-trained for multilingual denoising. This allows us to use a simple, identical, end-to-end setup for both English and Russian. Requiring minimal taskor languagespecific effort, our model placed in the first third of the leaderboard for English and first or second for Russian on automatic metrics, and it made it into the best or second-best system cluster on human evaluation.</abstract>
      <url hash="68827cb4">2020.webnlg-1.20</url>
      <bibkey>kasner-dusek-2020-train</bibkey>
    </paper>
    <paper id="21">
      <title><fixed-case>W</fixed-case>eb<fixed-case>NLG</fixed-case> 2020 Challenge: Semantic Template Mining for Generating References from <fixed-case>RDF</fixed-case></title>
      <author><first>Trung</first><last>Tran</last></author>
      <author><first>Dang Tuan</first><last>Nguyen</last></author>
      <pages>177–185</pages>
      <abstract>We present in this paper our mining system for shared task WebNLG Challenge 2020. The general idea of the system is that we generate the semantic template of the output reference from the input RDF XML structure. In the training process, we perform the following subtasks: (i) extract the core information from input RDF; (ii) generate semantic templates from corresponding references. With new RDF XML data, we detect the core information, in turn add the new template into the warehouse and determine the output semantic template. We will evaluate the output natural language references in two processes: automatic and human evaluations. The results of the first tested process show that our system generates the high quality English descriptions from testing RDF XML structures and has a good contribution to the NLG state-of-the-art.</abstract>
      <url hash="27428bb1">2020.webnlg-1.21</url>
      <bibkey>tran-nguyen-2020-webnlg</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/webnlg">WebNLG</pwcdataset>
    </paper>
    <paper id="22">
      <title><fixed-case>W</fixed-case>eb<fixed-case>NLG</fixed-case> Challenge 2020: Language Agnostic Delexicalisation for Multilingual <fixed-case>RDF</fixed-case>-to-text generation</title>
      <author><first>Giulio</first><last>Zhou</last></author>
      <author><first>Gerasimos</first><last>Lampouras</last></author>
      <pages>186–191</pages>
      <abstract>This paper presents our submission to the WebNLG Challenge 2020 for the English and Russian RDF-to-text generation tasks. Our first of three submissions is based on Language Agnostic Delexicalisation, a novel delexicalisation method that match values in the input to their occurrences in the corresponding text through comparison of pretrained multilingual embeddings, and employs a character-level post-editing model to inflect words in their correct form during relexicalisation. Our second submission forfeits delexicalisation and uses SentencePiece subwords as basic units. Our third submission combines the previous two by alternating between the output of the delexicalisation-based system when the input contains unseen entities and/or properties and the output of the SentencePiece-based system when the input is seen during training.</abstract>
      <url hash="4271dbe6">2020.webnlg-1.22</url>
      <bibkey>zhou-lampouras-2020-webnlg</bibkey>
    </paper>
  </volume>
</collection>
