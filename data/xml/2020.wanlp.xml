<?xml version='1.0' encoding='UTF-8'?>
<collection id="2020.wanlp">
  <volume id="1" ingest-date="2020-11-29">
    <meta>
      <booktitle>Proceedings of the Fifth Arabic Natural Language Processing Workshop</booktitle>
      <editor><first>Imed</first><last>Zitouni</last></editor>
      <editor><first>Muhammad</first><last>Abdul-Mageed</last></editor>
      <editor><first>Houda</first><last>Bouamor</last></editor>
      <editor><first>Fethi</first><last>Bougares</last></editor>
      <editor><first>Mahmoud</first><last>El-Haj</last></editor>
      <editor><first>Nadi</first><last>Tomeh</last></editor>
      <editor><first>Wajdi</first><last>Zaghouani</last></editor>
      <publisher>Association for Computational Linguistics</publisher>
      <address>Barcelona, Spain (Online)</address>
      <month>December</month>
      <year>2020</year>
      <venue>wanlp</venue>
    </meta>
    <frontmatter>
      <url hash="2ae5a718">2020.wanlp-1.0</url>
      <bibkey>wanlp-2020-arabic</bibkey>
    </frontmatter>
    <paper id="1">
      <title><fixed-case>G</fixed-case>erman-<fixed-case>A</fixed-case>rabic Speech-to-Speech Translation for Psychiatric Diagnosis</title>
      <author><first>Juan</first><last>Hussain</last></author>
      <author><first>Mohammed</first><last>Mediani</last></author>
      <author><first>Moritz</first><last>Behr</last></author>
      <author><first>M. Amin</first><last>Cheragui</last></author>
      <author><first>Sebastian</first><last>Stüker</last></author>
      <author><first>Alexander</first><last>Waibel</last></author>
      <pages>1–11</pages>
      <abstract>In this paper we present the natural language processing components of our German-Arabic speech-to-speech translation system which is being deployed in the context of interpretation during psychiatric, diagnostic interviews. For this purpose we have built a pipe-lined speech-to-speech translation system consisting of automatic speech recognition, text post-processing/segmentation, machine translation and speech synthesis systems. We have implemented two pipe-lines, from German to Arabic and Arabic to German, in order to be able to conduct interpreted two-way dialogues between psychiatrists and potential patients. All systems in our pipeline have been realized as all-neural end-to-end systems, using different architectures suitable for the different components. The speech recognition systems use an encoder/decoder + attention architecture, the text segmentation component and the machine translation system are based on the Transformer architecture, and for the speech synthesis systems we use Tacotron 2 for generating spectrograms and WaveGlow as vocoder. The speech translation is deployed in a server-based speech translation application that implements a turn based translation between a German speaking psychiatrist administrating the Mini-International Neuropsychiatric Interview (M.I.N.I.) and an Arabic speaking person answering the interview. As this is a very specific domain, in addition to the linguistic challenges posed by translating between Arabic and German, we also focus in this paper on the methods we implemented for adapting our speech translation system to the domain of this psychiatric interview.</abstract>
      <url hash="c276811b">2020.wanlp-1.1</url>
      <bibkey>hussain-etal-2020-german</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/jw300">JW300</pwcdataset>
    </paper>
    <paper id="2">
      <title>Hate Speech Detection in Saudi Twittersphere: A Deep Learning Approach</title>
      <author><first>Raghad</first><last>Alshaalan</last></author>
      <author><first>Hend</first><last>Al-Khalifa</last></author>
      <pages>12–23</pages>
      <abstract>With the rise of hate speech phenomena in Twittersphere, significant research efforts have been undertaken to provide automatic solutions for detecting hate speech, varying from simple ma-chine learning models to more complex deep neural network models. Despite that, research works investigating hate speech problem in Arabic are still limited. This paper, therefore, aims to investigate several neural network models based on Convolutional Neural Network (CNN) and Recurrent Neural Networks (RNN) to detect hate speech in Arabic tweets. It also evaluates the recent language representation model BERT on the task of Arabic hate speech detection. To conduct our experiments, we firstly built a new hate speech dataset that contains 9,316 annotated tweets. Then, we conducted a set of experiments on two datasets to evaluate four models: CNN, GRU, CNN+GRU and BERT. Our experimental results on our dataset and an out-domain dataset show that CNN model gives the best performance with an F1-score of 0.79 and AUROC of 0.89.</abstract>
      <url hash="adc7d9ad">2020.wanlp-1.2</url>
      <bibkey>alshaalan-al-khalifa-2020-hate</bibkey>
    </paper>
    <paper id="3">
      <title>Is it Great or Terrible? Preserving Sentiment in Neural Machine Translation of <fixed-case>A</fixed-case>rabic Reviews</title>
      <author><first>Hadeel</first><last>Saadany</last></author>
      <author><first>Constantin</first><last>Orasan</last></author>
      <pages>24–37</pages>
      <abstract>Since the advent of Neural Machine Translation (NMT) approaches there has been a tremendous improvement in the quality of automatic translation. However, NMT output still lacks accuracy in some low-resource languages and sometimes makes major errors that need extensive postediting. This is particularly noticeable with texts that do not follow common lexico-grammatical standards, such as user generated content (UGC). In this paper we investigate the challenges involved in translating book reviews from Arabic into English, with particular focus on the errors that lead to incorrect translation of sentiment polarity. Our study points to the special characteristics of Arabic UGC, examines the sentiment transfer errors made by Google Translate of Arabic UGC to English, analyzes why the problem occurs, and proposes an error typology specific of the translation of Arabic UGC. Our analysis shows that the output of online translation tools of Arabic UGC can either fail to transfer the sentiment at all by producing a neutral target text, or completely flips the sentiment polarity of the target word or phrase and hence delivers a wrong affect message. We address this problem by fine-tuning an NMT model with respect to sentiment polarity showing that this approach can significantly help with correcting sentiment errors detected in the online translation of Arabic UGC.</abstract>
      <url hash="fdbc990f">2020.wanlp-1.3</url>
      <bibkey>saadany-orasan-2020-great</bibkey>
    </paper>
    <paper id="4">
      <title>Deep Diacritization: Efficient Hierarchical Recurrence for Improved <fixed-case>A</fixed-case>rabic Diacritization</title>
      <author><first>Badr</first><last>AlKhamissi</last></author>
      <author><first>Muhammad</first><last>ElNokrashy</last></author>
      <author><first>Mohamed</first><last>Gabr</last></author>
      <pages>38–48</pages>
      <abstract>We propose a novel architecture for labelling character sequences that achieves state-of-the-art results on the Tashkeela Arabic diacritization benchmark. The core is a two-level recurrence hierarchy that operates on the word and character levels separately—enabling faster training and inference than comparable traditional models. A cross-level attention module further connects the two and opens the door for network interpretability. The task module is a softmax classifier that enumerates valid combinations of diacritics. This architecture can be extended with a recurrent decoder that optionally accepts priors from partially diacritized text, which improves results. We employ extra tricks such as sentence dropout and majority voting to further boost the final result. Our best model achieves a WER of 5.34%, outperforming the previous state-of-the-art with a 30.56% relative error reduction.</abstract>
      <url hash="0ba9d8a3">2020.wanlp-1.4</url>
      <bibkey>alkhamissi-etal-2020-deep</bibkey>
      <pwccode url="https://github.com/BKHMSI/deep-diacritization" additional="false">BKHMSI/deep-diacritization</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/arabic-text-diacritization">Arabic Text Diacritization</pwcdataset>
    </paper>
    <paper id="5">
      <title>A Semi-Supervised <fixed-case>BERT</fixed-case> Approach for <fixed-case>A</fixed-case>rabic Named Entity Recognition</title>
      <author><first>Chadi</first><last>Helwe</last></author>
      <author><first>Ghassan</first><last>Dib</last></author>
      <author><first>Mohsen</first><last>Shamas</last></author>
      <author><first>Shady</first><last>Elbassuoni</last></author>
      <pages>49–57</pages>
      <abstract>Named entity recognition (NER) plays a significant role in many applications such as information extraction, information retrieval, question answering, and even machine translation. Most of the work on NER using deep learning was done for non-Arabic languages like English and French, and only few studies focused on Arabic. This paper proposes a semi-supervised learning approach to train a BERT-based NER model using labeled and semi-labeled datasets. We compared our approach against various baselines, and state-of-the-art Arabic NER tools on three datasets: AQMAR, NEWS, and TWEETS. We report a significant improvement in F-measure for the AQMAR and the NEWS datasets, which are written in Modern Standard Arabic (MSA), and competitive results for the TWEETS dataset, which contains tweets that are mostly in the Egyptian dialect and contain many mistakes or misspellings.</abstract>
      <url hash="1a068e1d">2020.wanlp-1.5</url>
      <bibkey>helwe-etal-2020-semi</bibkey>
    </paper>
    <paper id="6">
      <title>Empathy-driven <fixed-case>A</fixed-case>rabic Conversational Chatbot</title>
      <author><first>Tarek</first><last>Naous</last></author>
      <author><first>Christian</first><last>Hokayem</last></author>
      <author><first>Hazem</first><last>Hajj</last></author>
      <pages>58–68</pages>
      <abstract>Conversational models have witnessed a significant research interest in the last few years with the advancements in sequence generation models. A challenging aspect in developing human-like conversational models is enabling the sense of empathy in bots, making them infer emotions from the person they are interacting with. By learning to develop empathy, chatbot models are able to provide human-like, empathetic responses, thus making the human-machine interaction close to human-human interaction. Recent advances in English use complex encoder-decoder language models that require large amounts of empathetic conversational data. However, research has not produced empathetic bots for Arabic. Furthermore, there is a lack of Arabic conversational data labeled with empathy. To address these challenges, we create an Arabic conversational dataset that comprises empathetic responses. However, the dataset is not large enough to develop very complex encoder-decoder models. To address the limitation of data scale, we propose a special encoder-decoder composed of a Long Short-Term Memory (LSTM) Sequence-to-Sequence (Seq2Seq) with Attention. The experiments showed success of our proposed empathy-driven Arabic chatbot in generating empathetic responses with a perplexity of 38.6, an empathy score of 3.7, and a fluency score of 3.92.</abstract>
      <url hash="80ebe47a">2020.wanlp-1.6</url>
      <bibkey>naous-etal-2020-empathy</bibkey>
      <pwccode url="https://github.com/aub-mind/Arabic-Empathetic-Chatbot" additional="false">aub-mind/Arabic-Empathetic-Chatbot</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/empatheticdialogues">EmpatheticDialogues</pwcdataset>
    </paper>
    <paper id="7">
      <title>Machine Generation and Detection of <fixed-case>A</fixed-case>rabic Manipulated and Fake News</title>
      <author><first>El Moatez Billah</first><last>Nagoudi</last></author>
      <author><first>AbdelRahim</first><last>Elmadany</last></author>
      <author><first>Muhammad</first><last>Abdul-Mageed</last></author>
      <author><first>Tariq</first><last>Alhindi</last></author>
      <pages>69–84</pages>
      <abstract>Fake news and deceptive machine-generated text are serious problems threatening modern societies, including in the Arab world. This motivates work on detecting false and manipulated stories online. However, a bottleneck for this research is lack of sufficient data to train detection models. We present a novel method for automatically generating Arabic manipulated (and potentially fake) news stories. Our method is simple and only depends on availability of true stories, which are abundant online, and a part of speech tagger (POS). To facilitate future work, we dispense with both of these requirements altogether by providing AraNews, a novel and large POS-tagged news dataset that can be used off-the-shelf. Using stories generated based on AraNews, we carry out a human annotation study that casts light on the effects of machine manipulation on text veracity. The study also measures human ability to detect Arabic machine manipulated text generated by our method. Finally, we develop the first models for detecting manipulated Arabic news and achieve state-of-the-art results on Arabic fake news detection (macro F1=70.06). Our models and data are publicly available.</abstract>
      <url hash="4f287af9">2020.wanlp-1.7</url>
      <bibkey>nagoudi-etal-2020-machine</bibkey>
      <pwccode url="https://github.com/UBC-NLP/wanlp2020_arabic_fake_news_detection" additional="false">UBC-NLP/wanlp2020_arabic_fake_news_detection</pwccode>
    </paper>
    <paper id="8">
      <title>Transliteration of <fixed-case>J</fixed-case>udeo-<fixed-case>A</fixed-case>rabic Texts into <fixed-case>A</fixed-case>rabic Script Using Recurrent Neural Networks</title>
      <author><first>Ori</first><last>Terner</last></author>
      <author><first>Kfir</first><last>Bar</last></author>
      <author><first>Nachum</first><last>Dershowitz</last></author>
      <pages>85–96</pages>
      <abstract>We trained a model to automatically transliterate Judeo-Arabic texts into Arabic script, enabling Arabic readers to access those writings. We employ a recurrent neural network (RNN), combined with the connectionist temporal classification (CTC) loss to deal with unequal input/output lengths. This obligates adjustments in the training data to avoid input sequences that are shorter than their corresponding outputs. We also utilize a pretraining stage with a different loss function to improve network converge. Since only a single source of parallel text was available for training, we take advantage of the possibility of generating data synthetically. We train a model that has the capability to memorize words in the output language, and that also utilizes context for distinguishing ambiguities in the transliteration. We obtain an improvement over the baseline 9.5% character error, achieving 2% error with our best configuration. To measure the contribution of context to learning, we also tested word-shuffled data, for which the error rises to 2.5%.</abstract>
      <url hash="ac1b5b6a">2020.wanlp-1.8</url>
      <bibkey>terner-etal-2020-transliteration</bibkey>
    </paper>
    <paper id="9">
      <title><fixed-case>NADI</fixed-case> 2020: The First Nuanced <fixed-case>A</fixed-case>rabic Dialect Identification Shared Task</title>
      <author><first>Muhammad</first><last>Abdul-Mageed</last></author>
      <author><first>Chiyu</first><last>Zhang</last></author>
      <author><first>Houda</first><last>Bouamor</last></author>
      <author><first>Nizar</first><last>Habash</last></author>
      <pages>97–110</pages>
      <abstract>We present the results and findings of the First Nuanced Arabic Dialect Identification Shared Task (NADI). This Shared Task includes two subtasks: country-level dialect identification (Subtask 1) and province-level sub-dialect identification (Subtask 2). The data for the shared task covers a total of 100 provinces from 21 Arab countries and is collected from the Twitter domain. As such, NADI is the first shared task to target naturally-occurring fine-grained dialectal text at the sub-country level. A total of 61 teams from 25 countries registered to participate in the tasks, thus reflecting the interest of the community in this area. We received 47 submissions for Subtask 1 from 18 teams and 9 submissions for Subtask 2 from 9 teams.</abstract>
      <url hash="d1d33d4e">2020.wanlp-1.9</url>
      <bibkey>abdul-mageed-etal-2020-nadi</bibkey>
    </paper>
    <paper id="10">
      <title>Multi-dialect <fixed-case>A</fixed-case>rabic <fixed-case>BERT</fixed-case> for Country-level Dialect Identification</title>
      <author><first>Bashar</first><last>Talafha</last></author>
      <author><first>Mohammad</first><last>Ali</last></author>
      <author><first>Muhy Eddin</first><last>Za’ter</last></author>
      <author><first>Haitham</first><last>Seelawi</last></author>
      <author><first>Ibraheem</first><last>Tuffaha</last></author>
      <author><first>Mostafa</first><last>Samir</last></author>
      <author><first>Wael</first><last>Farhan</last></author>
      <author><first>Hussein</first><last>Al-Natsheh</last></author>
      <pages>111–118</pages>
      <abstract>Arabic dialect identification is a complex problem for a number of inherent properties of the language itself. In this paper, we present the experiments conducted, and the models developed by our competing team, Mawdoo3 AI, along the way to achieving our winning solution to subtask 1 of the Nuanced Arabic Dialect Identification (NADI) shared task. The dialect identification subtask provides 21,000 country-level labeled tweets covering all 21 Arab countries. An unlabeled corpus of 10M tweets from the same domain is also presented by the competition organizers for optional use. Our winning solution itself came in the form of an ensemble of different training iterations of our pre-trained BERT model, which achieved a micro-averaged F1-score of 26.78% on the subtask at hand. We publicly release the pre-trained language model component of our winning solution under the name of Multi-dialect-Arabic-BERT model, for any interested researcher out there.</abstract>
      <url hash="940a20c6">2020.wanlp-1.10</url>
      <bibkey>talafha-etal-2020-multi</bibkey>
      <pwccode url="https://github.com/mawdoo3/Multi-dialect-Arabic-BERT" additional="false">mawdoo3/Multi-dialect-Arabic-BERT</pwccode>
    </paper>
    <paper id="11">
      <title>On the Importance of Tokenization in <fixed-case>A</fixed-case>rabic Embedding Models</title>
      <author><first>Mohamed</first><last>Alkaoud</last></author>
      <author><first>Mairaj</first><last>Syed</last></author>
      <pages>119–129</pages>
      <abstract>Arabic, like other highly inflected languages, encodes a large amount of information in its morphology and word structure. In this work, we propose two embedding strategies that modify the tokenization phase of traditional word embedding models (Word2Vec) and contextual word embedding models (BERT) to take into account Arabic’s relatively complex morphology. In Word2Vec, we segment words into subwords during training time and then compose word-level representations from the subwords during test time. We train our embeddings on Arabic Wikipedia and show that they perform better than a Word2Vec model on multiple Arabic natural language processing datasets while being approximately 60% smaller in size. Moreover, we showcase our embeddings’ ability to produce accurate representations of some out-of-vocabulary words that were not encountered before. In BERT, we modify the tokenization layer of Google’s pretrained multilingual BERT model by incorporating information on morphology. By doing so, we achieve state of the art performance on two Arabic NLP datasets without pretraining.</abstract>
      <url hash="7873ec4d">2020.wanlp-1.11</url>
      <bibkey>alkaoud-syed-2020-importance</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/labr">LABR</pwcdataset>
    </paper>
    <paper id="12">
      <title>Tracing Traditions: Automatic Extraction of Isnads from Classical <fixed-case>A</fixed-case>rabic Texts</title>
      <author><first>Ryan</first><last>Muther</last></author>
      <author><first>David</first><last>Smith</last></author>
      <pages>130–138</pages>
      <abstract>We present our work on automatically detecting isnads, the chains of authorities for a re-port that serve as citations in hadith and other classical Arabic texts. We experiment with both sequence labeling methods for identifying isnads in a single pass and a hybrid “retrieve-and-tag” approach, in which a retrieval model first identifies portions of the text that are likely to contain start points for isnads, then a sequence labeling model identifies the exact starting locations within these much smaller retrieved text chunks. We find that the usefulness of full-document sequence to sequence models is limited due to memory limitations and the ineffectiveness of such models at modeling very long documents. We conclude by sketching future improvements on the tagging task and more in-depth analysis of the people and relationships involved in the social network that influenced the evolution of the written tradition over time.</abstract>
      <url hash="06d6fd7d">2020.wanlp-1.12</url>
      <bibkey>muther-smith-2020-tracing</bibkey>
    </paper>
    <paper id="13">
      <title>Embed More Ignore Less (<fixed-case>EMIL</fixed-case>): Exploiting Enriched Representations for <fixed-case>A</fixed-case>rabic <fixed-case>NLP</fixed-case></title>
      <author><first>Ahmed</first><last>Younes</last></author>
      <author><first>Julie</first><last>Weeds</last></author>
      <pages>139–154</pages>
      <abstract>Our research focuses on the potential improvements of exploiting language specific characteristics in the form of embeddings by neural networks. More specifically, we investigate the capability of neural techniques and embeddings to represent language specific characteristics in two sequence labeling tasks: named entity recognition (NER) and part of speech (POS) tagging. In both tasks, our preprocessing is designed to use enriched Arabic representation by adding diacritics to undiacritized text. In POS tagging, we test the ability of a neural model to capture syntactic characteristics encoded within these diacritics by incorporating an embedding layer for diacritics alongside embedding layers for words and characters. In NER, our architecture incorporates diacritic and POS embeddings alongside word and character embeddings. Our experiments are conducted on 7 datasets (4 NER and 3 POS). We show that embedding the information that is encoded in automatically acquired Arabic diacritics improves the performance across all datasets on both tasks. Embedding the information in automatically assigned POS tags further improves performance on the NER task.</abstract>
      <url hash="4d4b74c0">2020.wanlp-1.13</url>
      <bibkey>younes-weeds-2020-embed</bibkey>
    </paper>
    <paper id="14">
      <title><fixed-case>MAN</fixed-case>orm: A Normalization Dictionary for <fixed-case>M</fixed-case>oroccan <fixed-case>A</fixed-case>rabic Dialect Written in <fixed-case>L</fixed-case>atin Script</title>
      <author><first>Randa</first><last>Zarnoufi</last></author>
      <author><first>Hamid</first><last>Jaafar</last></author>
      <author><first>Walid</first><last>Bachri</last></author>
      <author><first>Mounia</first><last>Abik</last></author>
      <pages>155–166</pages>
      <abstract>Social media user generated text is actually the main resource for many NLP tasks. This text, however, does not follow the standard rules of writing. Moreover, the use of dialect such as Moroccan Arabic in written communications increases further NLP tasks complexity. A dialect is a verbal language that does not have a standard orthography. The written dialect is based on the phonetic transliteration of spoken words which leads users to improvise spelling while writing. Thus, for the same word we can find multiple forms of transliterations. Subsequently, it is mandatory to normalize these different transliterations to one canonical word form. To reach this goal, we have exploited the powerfulness of word embedding models generated with a corpus of YouTube comments. Besides, using a Moroccan Arabic dialect dictionary that provides the canonical forms, we have built a normalization dictionary that we refer to as MANorm. We have conducted several experiments to demonstrate the efficiency of MANorm, which have shown its usefulness in dialect normalization. We made MANorm freely available online.</abstract>
      <url hash="223258b3">2020.wanlp-1.14</url>
      <bibkey>zarnoufi-etal-2020-manorm</bibkey>
    </paper>
    <paper id="15">
      <title>A Unified Model for <fixed-case>A</fixed-case>rabizi Detection and Transliteration using Sequence-to-Sequence Models</title>
      <author><first>Ali</first><last>Shazal</last></author>
      <author><first>Aiza</first><last>Usman</last></author>
      <author><first>Nizar</first><last>Habash</last></author>
      <pages>167–177</pages>
      <abstract>While online Arabic is primarily written using the Arabic script, a Roman-script variety called Arabizi is often seen on social media. Although this representation captures the phonology of the language, it is not a one-to-one mapping with the Arabic script version. This issue is exacerbated by the fact that Arabizi on social media is Dialectal Arabic which does not have a standard orthography. Furthermore, Arabizi tends to include a lot of code mixing between Arabic and English (or French). To map Arabizi text to Arabic script in the context of complete utterances, previously published efforts have split Arabizi detection and Arabic script target in two separate tasks. In this paper, we present the first effort on a unified model for Arabizi detection and transliteration into a code-mixed output with consistent Arabic spelling conventions, using a sequence-to-sequence deep learning model. Our best system achieves 80.6% word accuracy and 58.7% BLEU on a blind test set.</abstract>
      <url hash="ad658af0">2020.wanlp-1.15</url>
      <bibkey>shazal-etal-2020-unified</bibkey>
    </paper>
    <paper id="16">
      <title>Multi-Task Sequence Prediction For <fixed-case>T</fixed-case>unisian <fixed-case>A</fixed-case>rabizi Multi-Level Annotation</title>
      <author><first>Elisa</first><last>Gugliotta</last></author>
      <author><first>Marco</first><last>Dinarelli</last></author>
      <author><first>Olivier</first><last>Kraif</last></author>
      <pages>178–191</pages>
      <abstract>In this paper we propose a multi-task sequence prediction system, based on recurrent neural networks and used to annotate on multiple levels an Arabizi Tunisian corpus. The annotation performed are text classification, tokenization, PoS tagging and encoding of Tunisian Arabizi into CODA* Arabic orthography. The system is learned to predict all the annotation levels in cascade, starting from Arabizi input. We evaluate the system on the TIGER German corpus, suitably converting data to have a multi-task problem, in order to show the effectiveness of our neural architecture. We show also how we used the system in order to annotate a Tunisian Arabizi corpus, which has been afterwards manually corrected and used to further evaluate sequence models on Tunisian data. Our system is developed for the Fairseq framework, which allows for a fast and easy use for any other sequence prediction problem.</abstract>
      <url hash="2470379e">2020.wanlp-1.16</url>
      <bibkey>gugliotta-etal-2020-multi</bibkey>
      <pwccode url="https://github.com/eligugliotta/tarc" additional="false">eligugliotta/tarc</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/tarc">TArC</pwcdataset>
    </paper>
    <paper id="17">
      <title><fixed-case>A</fixed-case>ra<fixed-case>WEAT</fixed-case>: Multidimensional Analysis of Biases in <fixed-case>A</fixed-case>rabic Word Embeddings</title>
      <author><first>Anne</first><last>Lauscher</last></author>
      <author><first>Rafik</first><last>Takieddin</last></author>
      <author><first>Simone Paolo</first><last>Ponzetto</last></author>
      <author><first>Goran</first><last>Glavaš</last></author>
      <pages>192–199</pages>
      <abstract>Recent work has shown that distributional word vector spaces often encode human biases like sexism or racism. In this work, we conduct an extensive analysis of biases in Arabic word embeddings by applying a range of recently introduced bias tests on a variety of embedding spaces induced from corpora in Arabic. We measure the presence of biases across several dimensions, namely: embedding models (Skip-Gram, CBOW, and FastText) and vector sizes, types of text (encyclopedic text, and news vs. user-generated content), dialects (Egyptian Arabic vs. Modern Standard Arabic), and time (diachronic analyses over corpora from different time periods). Our analysis yields several interesting findings, e.g., that implicit gender bias in embeddings trained on Arabic news corpora steadily increases over time (between 2007 and 2017). We make the Arabic bias specifications (AraWEAT) publicly available.</abstract>
      <url hash="190afe95">2020.wanlp-1.17</url>
      <bibkey>lauscher-etal-2020-araweat</bibkey>
    </paper>
    <paper id="18">
      <title>Parallel resources for <fixed-case>T</fixed-case>unisian <fixed-case>A</fixed-case>rabic Dialect Translation</title>
      <author><first>Saméh</first><last>Kchaou</last></author>
      <author><first>Rahma</first><last>Boujelbane</last></author>
      <author><first>Lamia</first><last>Hadrich-Belguith</last></author>
      <pages>200–206</pages>
      <abstract>The difficulty of processing dialects is clearly observed in the high cost of building representative corpus, in particular for machine translation. Indeed, all machine translation systems require a huge amount and good management of training data, which represents a challenge in a low-resource setting such as the Tunisian Arabic dialect. In this paper, we present a data augmentation technique to create a parallel corpus for Tunisian Arabic dialect written in social media and standard Arabic in order to build a Machine Translation (MT) model. The created corpus was used to build a sentence-based translation model. This model reached a BLEU score of 15.03% on a test set, while it was limited to 13.27% utilizing the corpus without augmentation.</abstract>
      <url hash="69de3825">2020.wanlp-1.18</url>
      <bibkey>kchaou-etal-2020-parallel</bibkey>
    </paper>
    <paper id="19">
      <title>Bert Transformer model for Detecting <fixed-case>A</fixed-case>rabic <fixed-case>GPT</fixed-case>2 Auto-Generated Tweets</title>
      <author><first>Fouzi</first><last>Harrag</last></author>
      <author><first>Maria</first><last>Dabbah</last></author>
      <author><first>Kareem</first><last>Darwish</last></author>
      <author><first>Ahmed</first><last>Abdelali</last></author>
      <pages>207–214</pages>
      <abstract>During the last two decades, we have progressively turned to the Internet and social media to find news, entertain conversations and share opinion. Recently, OpenAI has developed a machine learning system called GPT-2 for Generative Pre-trained Transformer-2, which can produce deepfake texts. It can generate blocks of text based on brief writing prompts that look like they were written by humans, facilitating the spread false or auto-generated text. In line with this progress, and in order to counteract potential dangers, several methods have been proposed for detecting text written by these language models. In this paper, we propose a transfer learning based model that will be able to detect if an Arabic sentence is written by humans or automatically generated by bots. Our dataset is based on tweets from a previous work, which we have crawled and extended using the Twitter API. We used GPT2-Small-Arabic to generate fake Arabic Sentences. For evaluation, we compared different recurrent neural network (RNN) word embeddings based baseline models, namely: LSTM, BI-LSTM, GRU and BI-GRU, with a transformer-based model. Our new transfer-learning model has obtained an accuracy up to 98%. To the best of our knowledge, this work is the first study where ARABERT and GPT2 were combined to detect and classify the Arabic auto-generated texts.</abstract>
      <url hash="5be392d7">2020.wanlp-1.19</url>
      <bibkey>harrag-etal-2020-bert</bibkey>
    </paper>
    <paper id="20">
      <title>Contextual Embeddings for <fixed-case>A</fixed-case>rabic-<fixed-case>E</fixed-case>nglish Code-Switched Data</title>
      <author><first>Caroline</first><last>Sabty</last></author>
      <author><first>Mohamed</first><last>Islam</last></author>
      <author><first>Slim</first><last>Abdennadher</last></author>
      <pages>215–225</pages>
      <abstract>Globalization has caused the rise of the code-switching phenomenon among multilingual societies. In Arab countries, code-switching between Arabic and English has become frequent, especially through social media platforms. Consequently, research in Natural Language Processing (NLP) systems increased to tackle such a phenomenon. One of the significant challenges of developing code-switched NLP systems is the lack of data itself. In this paper, we propose an open source trained bilingual contextual word embedding models of FLAIR, BERT, and ELECTRA. We also propose a novel contextual word embedding model called KERMIT, which can efficiently map Arabic and English words inside one vector space in terms of data usage. We applied intrinsic and extrinsic evaluation methods to compare the performance of the models. Our results show that FLAIR and FastText achieve the highest results in the sentiment analysis task. However, KERMIT is the best-achieving model on the intrinsic evaluation and named entity recognition. Also, it outperforms the other transformer-based models on question answering task.</abstract>
      <url hash="6774d10d">2020.wanlp-1.20</url>
      <bibkey>sabty-etal-2020-contextual</bibkey>
      <pwccode url="https://github.com/csabty/code-switch-arabic-english-contextual-embeddings" additional="false">csabty/code-switch-arabic-english-contextual-embeddings</pwccode>
    </paper>
    <paper id="21">
      <title>Improving <fixed-case>A</fixed-case>rabic Text Categorization Using Transformer Training Diversification</title>
      <author><first>Shammur Absar</first><last>Chowdhury</last></author>
      <author><first>Ahmed</first><last>Abdelali</last></author>
      <author><first>Kareem</first><last>Darwish</last></author>
      <author><first>Jung</first><last>Soon-Gyo</last></author>
      <author><first>Joni</first><last>Salminen</last></author>
      <author><first>Bernard J.</first><last>Jansen</last></author>
      <pages>226–236</pages>
      <abstract>Automatic categorization of short texts, such as news headlines and social media posts, has many applications ranging from content analysis to recommendation systems. In this paper, we use such text categorization i.e., labeling the social media posts to categories like ‘sports’, ‘politics’, ‘human-rights’ among others, to showcase the efficacy of models across different sources and varieties of Arabic. In doing so, we show that diversifying the training data, whether by using diverse training data for the specific task (an increase of 21% macro F1) or using diverse data to pre-train a BERT model (26% macro F1), leads to overall improvements in classification effectiveness. In our work, we also introduce two new Arabic text categorization datasets, where the first is composed of social media posts from a popular Arabic news channel that cover Twitter, Facebook, and YouTube, and the second is composed of tweets from popular Arabic accounts. The posts in the former are nearly exclusively authored in modern standard Arabic (MSA), while the tweets in the latter contain both MSA and dialectal Arabic.</abstract>
      <url hash="ab2499d3">2020.wanlp-1.21</url>
      <bibkey>chowdhury-etal-2020-improving-arabic</bibkey>
      <pwccode url="https://github.com/shammur/arabic_news_text_classification_datasets" additional="false">shammur/arabic_news_text_classification_datasets</pwccode>
    </paper>
    <paper id="22">
      <title>Team <fixed-case>A</fixed-case>lexa at <fixed-case>NADI</fixed-case> Shared Task</title>
      <author><first>Mutaz</first><last>Younes</last></author>
      <author><first>Nour</first><last>Al-khdour</last></author>
      <author><first>Mohammad</first><last>AL-Smadi</last></author>
      <pages>237–242</pages>
      <abstract>In this paper, we discuss our team’s work on the NADI Shared Task. The task requires classifying Arabic tweets among 21 dialects. We tested out different approaches, and the best one was the simplest one. Our best submission was using Multinational Naive Bayes (MNB) classifier (Small and Hsiao, 1985) with n-grams as features. Despite its simplicity, this classifier shows better results than complicated models such as BERT. Our best submitted score was 17% F1-score and 35% accuracy.</abstract>
      <url hash="4568a554">2020.wanlp-1.22</url>
      <bibkey>younes-etal-2020-team</bibkey>
    </paper>
    <paper id="23">
      <title>Comparison between Voting Classifier and Deep Learning methods for <fixed-case>A</fixed-case>rabic Dialect Identification</title>
      <author><first>Ghoul</first><last>Dhaou</last></author>
      <author><first>Gaël</first><last>Lejeune</last></author>
      <pages>243–249</pages>
      <abstract>In this paper, we present three methods developed for the NADI shared task on Arabic Dialect Identification for tweets. The first and the second method use respectively a machine learning model based on a Voting Classifier with words and character level features and a deep learning model at word level. The third method uses only character-level features. We explored different text representation such as Tf-idf (first model) and word embeddings (second model). The Voting Classifier was the most powerful prediction model, achieving the best macro-average F1 score of 18.8% and an accuracy of 36.54% on the official test. Our model ranked 9 on the challenge and in conclusion we propose some ideas to improve its results.</abstract>
      <url hash="e2e01ab6">2020.wanlp-1.23</url>
      <bibkey>dhaou-lejeune-2020-comparison</bibkey>
    </paper>
    <paper id="24">
      <title>Simple vs Oversampling-based Classification Methods for Fine Grained <fixed-case>A</fixed-case>rabic Dialect Identification in <fixed-case>T</fixed-case>witter</title>
      <author><first>Mohamed</first><last>Lichouri</last></author>
      <author><first>Mourad</first><last>Abbas</last></author>
      <pages>250–256</pages>
      <abstract>In this paper, we present a description of our experiments on country-level Arabic dialect identification. A comparison study between a set of classifiers has been carried out. The best results were achieved using the Linear Support Vector Classification (LSVC) model by applying a Random Over Sampling (ROS) process yielding an F1-score of 18.74% in the post-evaluation phase.In the evaluation phase, our best submitted system has achieved an F1-score of 18.27%, very close to the average F1-score (18.80%) obtained for all the submitted systems.</abstract>
      <url hash="0f4c2cfa">2020.wanlp-1.24</url>
      <bibkey>lichouri-abbas-2020-simple</bibkey>
    </paper>
    <paper id="25">
      <title>Semi-supervised Fine-grained Approach for <fixed-case>A</fixed-case>rabic dialect detection task</title>
      <author><first>Nitin Nikamanth</first><last>Appiah Balaji</last></author>
      <author><first>Bharathi</first><last>B</last></author>
      <pages>257–261</pages>
      <abstract>Arabic being a language with numerous different dialects, it becomes extremely important to device a technique to distinguish each dialect efficiently. This paper focuses on the fine-grained country level and province level classification of Arabic dialects. The experiments in this paper are submissions done to the NADI 2020 shared Dialect detection task. Various text feature extraction techniques such as TF-IDF, AraVec, multilingual BERT and Fasttext embedding models are studied. We thereby, propose an approach of text embedding based model with macro average F1 score of 0.2232 for task1 and 0.0483 for task2, with the help of semi supervised learning approach.</abstract>
      <url hash="e996159b">2020.wanlp-1.25</url>
      <bibkey>appiah-balaji-b-2020-semi</bibkey>
    </paper>
    <paper id="26">
      <title><fixed-case>A</fixed-case>rabic Dialect Identification Using <fixed-case>BERT</fixed-case>-Based Domain Adaptation</title>
      <author><first>Ahmad</first><last>Beltagy</last></author>
      <author><first>Abdelrahman</first><last>Abouelenin</last></author>
      <author><first>Omar</first><last>ElSherief</last></author>
      <pages>262–267</pages>
      <abstract>Arabic is one of the most important and growing languages in the world. With the rise of the social media giants like Twitter, Arabic spoken dialects have become more in use. In this paper we describe our effort and simple approach on the NADI Shared Task 1 that requires us to build a system to differentiate between different 21 Arabic dialects, we introduce a deep learning semisupervised fashion approach along with pre-processing that was reported on NADI shared Task 1 Corpus. Our system ranks 4th in NADI’s shared task competition achieving 23.09% F1 macro average score with a very simple yet an efficient approach on differentiating between 21 Arabic Dialects given tweets.</abstract>
      <url hash="192fbec8">2020.wanlp-1.26</url>
      <bibkey>beltagy-etal-2020-arabic</bibkey>
    </paper>
    <paper id="27">
      <title>Weighted combination of <fixed-case>BERT</fixed-case> and N-<fixed-case>GRAM</fixed-case> features for Nuanced <fixed-case>A</fixed-case>rabic Dialect Identification</title>
      <author><first>Abdellah</first><last>El Mekki</last></author>
      <author><first>Ahmed</first><last>Alami</last></author>
      <author><first>Hamza</first><last>Alami</last></author>
      <author><first>Ahmed</first><last>Khoumsi</last></author>
      <author><first>Ismail</first><last>Berrada</last></author>
      <pages>268–274</pages>
      <abstract>Around the Arab world, different Arabic dialects are spoken by more than 300M persons, and are increasingly popular in social media texts. However, Arabic dialects are considered to be low-resource languages, limiting the development of machine-learning based systems for these dialects. In this paper, we investigate the Arabic dialect identification task, from two perspectives: country-level dialect identification from 21 Arab countries, and province-level dialect identification from 100 provinces. We introduce an unified pipeline of state-of-the-art models, that can handle the two subtasks. Our experimental studies applied to the NADI shared task, show promising results both at the country-level (F1-score of 25.99%) and the province-level (F1-score of 6.39%), and thus allow us to be ranked 2nd for the country-level subtask, and 1st in the province-level subtask.</abstract>
      <url hash="519b307c">2020.wanlp-1.27</url>
      <bibkey>el-mekki-etal-2020-weighted</bibkey>
    </paper>
    <paper id="28">
      <title><fixed-case>A</fixed-case>rabic dialect identification: An <fixed-case>A</fixed-case>rabic-<fixed-case>BERT</fixed-case> model with data augmentation and ensembling strategy</title>
      <author><first>Kamel</first><last>Gaanoun</last></author>
      <author><first>Imade</first><last>Benelallam</last></author>
      <pages>275–281</pages>
      <abstract>This paper presents the ArabicProcessors team’s deep learning system designed for the NADI 2020 Subtask 1 (country-level dialect identification) and Subtask 2 (province-level dialect identification). We used Arabic-Bert in combination with data augmentation and ensembling methods. Unlabeled data provided by task organizers (10 Million tweets) was split into multiple subparts, to which we applied semi-supervised learning method, and finally ran a specific ensembling process on the resulting models. This system ranked 3rd in Subtask 1 with 23.26% F1-score and 2nd in Subtask 2 with 5.75% F1-score.</abstract>
      <url hash="cf5a8a06">2020.wanlp-1.28</url>
      <bibkey>gaanoun-benelallam-2020-arabic</bibkey>
    </paper>
    <paper id="29">
      <title>Faheem at <fixed-case>NADI</fixed-case> shared task: Identifying the dialect of <fixed-case>A</fixed-case>rabic tweet</title>
      <author><first>Nouf</first><last>AlShenaifi</last></author>
      <author><first>Aqil</first><last>Azmi</last></author>
      <pages>282–287</pages>
      <abstract>This paper describes Faheem (adj. of understand), our submission to NADI (Nuanced Arabic Dialect Identification) shared task. With so many Arabic dialects being under-studied due to the scarcity of the resources, the objective is to identify the Arabic dialect used in the tweet, country wise. We propose a machine learning approach where we utilize word-level n-gram (n = 1 to 3) and tf-idf features and feed them to six different classifiers. We train the system using a data set of 21,000 tweets—provided by the organizers—covering twenty-one Arab countries. Our top performing classifiers are: Logistic Regression, Support Vector Machines, and Multinomial Na ̈ıve Bayes.</abstract>
      <url hash="d83329d1">2020.wanlp-1.29</url>
      <bibkey>alshenaifi-azmi-2020-faheem</bibkey>
    </paper>
    <paper id="30">
      <title>Identifying Nuanced Dialect for <fixed-case>A</fixed-case>rabic Tweets with Deep Learning and Reverse Translation Corpus Extension System</title>
      <author><first>Rawan</first><last>Tahssin</last></author>
      <author><first>Youssef</first><last>Kishk</last></author>
      <author><first>Marwan</first><last>Torki</last></author>
      <pages>288–294</pages>
      <abstract>In this paper, we present our work for the NADI Shared Task (Abdul-Mageed and Habash, 2020): Nuanced Arabic Dialect Identification for Subtask-1: country-level dialect identification. We introduce a Reverse Translation Corpus Extension Systems (RTCES) to handle data imbalance along with reported results on several experimented approaches of word and document representations and different models architectures. The top scoring model was based on AraBERT (Antoun et al., 2020), with our modified extended corpus based on reverse translation of the given Arabic tweets. The selected system achieved a macro average F1 score of 20.34% on the test set, which places us as the 7th out of 18 teams in the final ranking Leaderboard.</abstract>
      <url hash="defdd7f4">2020.wanlp-1.30</url>
      <bibkey>tahssin-etal-2020-identifying</bibkey>
    </paper>
    <paper id="31">
      <title>The <fixed-case>QMUL</fixed-case>/<fixed-case>HRBDT</fixed-case> contribution to the <fixed-case>NADI</fixed-case> <fixed-case>A</fixed-case>rabic Dialect Identification Shared Task</title>
      <author><first>Abdulrahman</first><last>Aloraini</last></author>
      <author><first>Massimo</first><last>Poesio</last></author>
      <author><first>Ayman</first><last>Alhelbawy</last></author>
      <pages>295–301</pages>
      <abstract>We present the Arabic dialect identification system that we used for the country-level subtask of the NADI challenge. Our model consists of three components: BiLSTM-CNN, character-level TF-IDF, and topic modeling features. We represent each tweet using these features and feed them into a deep neural network. We then add an effective heuristic that improves the overall performance. We achieved an F1-Macro score of 20.77% and an accuracy of 34.32% on the test set. The model was also evaluated on the Arabic Online Commentary dataset, achieving results better than the state-of-the-art.</abstract>
      <url hash="fa2a8391">2020.wanlp-1.31</url>
      <bibkey>aloraini-etal-2020-qmul</bibkey>
    </paper>
    <paper id="32">
      <title><fixed-case>A</fixed-case>rabic Dialects Identification for All <fixed-case>A</fixed-case>rabic countries</title>
      <author><first>Ahmed</first><last>Aliwy</last></author>
      <author><first>Hawraa</first><last>Taher</last></author>
      <author><first>Zena</first><last>AboAltaheen</last></author>
      <pages>302–307</pages>
      <abstract>Arabic dialects are among of three main variant of Arabic language (Classical Arabic, modern standard Arabic and dialectal Arabic). It has many variants according to the country, city (provinces) or town. In this paper, several techniques with multiple algorithms are applied for Arabic dialects identification starting from removing noise till classification task using all Arabic countries as 21 classes. Three types of classifiers (Naïve Bayes, Logistic Regression, and Decision Tree) are combined using voting with two different methodologies. Also clustering technique is used for decreasing the noise that result from the existing of MSA tweets in the data set for training phase. The results of f-measure were 27.17, 41.34 and 52.38 for first methodology without clustering, second methodology without clustering, and second methodology with clustering, the used data set is NADI shared task data set.</abstract>
      <url hash="36e1f1e9">2020.wanlp-1.32</url>
      <bibkey>aliwy-etal-2020-arabic</bibkey>
    </paper>
    <paper id="33">
      <title><fixed-case>A</fixed-case>rabic Dialect Identification Using <fixed-case>BERT</fixed-case> Fine-Tuning</title>
      <author><first>Moataz</first><last>Mansour</last></author>
      <author><first>Moustafa</first><last>Tohamy</last></author>
      <author><first>Zeyad</first><last>Ezzat</last></author>
      <author><first>Marwan</first><last>Torki</last></author>
      <pages>308–312</pages>
      <abstract>In the last few years, deep learning has proved to be a very effective paradigm to discover patterns in large data sets. Unfortunately, deep learning training on small data sets is not the best option because most of the time traditional machine learning algorithms could get better scores. Now, we can train the neural network on a large data set then fine-tune on a smaller data set using the transfer learning technique. In this paper, we present our system for NADI shared Task: Country-level Dialect Identification, Our system is based on fine-tuning of BERT and it achieves 22.85 F1-score on Test Set and our rank is 5th out of 18 teams.</abstract>
      <url hash="10518206">2020.wanlp-1.33</url>
      <bibkey>mansour-etal-2020-arabic</bibkey>
      <pwccode url="https://github.com/zeyad3ezzat/nadi-shared-task" additional="false">zeyad3ezzat/nadi-shared-task</pwccode>
    </paper>
    <paper id="34">
      <title><fixed-case>LTG</fixed-case>-<fixed-case>ST</fixed-case> at <fixed-case>NADI</fixed-case> Shared Task 1: <fixed-case>A</fixed-case>rabic Dialect Identification using a Stacking Classifier</title>
      <author><first>Samia</first><last>Touileb</last></author>
      <pages>313–319</pages>
      <abstract>This paper presents our results for the Nuanced Arabic Dialect Identification (NADI) shared task of the Fifth Workshop for Arabic Natural Language Processing (WANLP 2020). We participated in the first sub-task for country-level Arabic dialect identification covering 21 Arab countries. Our contribution is based on a stacking classifier using Multinomial Naive Bayes, Linear SVC, and Logistic Regression classifiers as estimators; followed by a Logistic Regression as final estimator. Despite the fact that the results on the test set were low, with a macro F1 of 17.71, we were able to show that a simple approach can achieve comparable results to more sophisticated solutions. Moreover, the insights of our error analysis, and of the corpus content in general, can be used to develop and improve future systems.</abstract>
      <url hash="de8a3c9c">2020.wanlp-1.34</url>
      <bibkey>touileb-2020-ltg</bibkey>
    </paper>
  </volume>
</collection>
