<?xml version='1.0' encoding='UTF-8'?>
<collection id="2020.semeval">
  <volume id="1" ingest-date="2020-11-29">
    <meta>
      <booktitle>Proceedings of the Fourteenth Workshop on Semantic Evaluation</booktitle>
      <editor><first>Aurelie</first><last>Herbelot</last></editor>
      <editor><first>Xiaodan</first><last>Zhu</last></editor>
      <editor><first>Alexis</first><last>Palmer</last></editor>
      <editor><first>Nathan</first><last>Schneider</last></editor>
      <editor><first>Jonathan</first><last>May</last></editor>
      <editor><first>Ekaterina</first><last>Shutova</last></editor>
      <publisher>International Committee for Computational Linguistics</publisher>
      <address>Barcelona (online)</address>
      <month>December</month>
      <year>2020</year>
      <venue>semeval</venue>
    </meta>
    <frontmatter>
      <url hash="d141a7a7">2020.semeval-1.0</url>
      <bibkey>semeval-2020-semantic</bibkey>
    </frontmatter>
    <paper id="1">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Unsupervised Lexical Semantic Change Detection</title>
      <author><first>Dominik</first><last>Schlechtweg</last></author>
      <author><first>Barbara</first><last>McGillivray</last></author>
      <author><first>Simon</first><last>Hengchen</last></author>
      <author><first>Haim</first><last>Dubossarsky</last></author>
      <author><first>Nina</first><last>Tahmasebi</last></author>
      <pages>1–23</pages>
      <abstract>Lexical Semantic Change detection, i.e., the task of identifying words that change meaning over time, is a very active research area, with applications in NLP, lexicography, and linguistics. Evaluation is currently the most pressing problem in Lexical Semantic Change detection, as no gold standards are available to the community, which hinders progress. We present the results of the first shared task that addresses this gap by providing researchers with an evaluation framework and manually annotated, high-quality datasets for English, German, Latin, and Swedish. 33 teams submitted 186 systems, which were evaluated on two subtasks.</abstract>
      <url hash="b6390d7f">2020.semeval-1.1</url>
      <bibkey>schlechtweg-etal-2020-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.1</doi>
      <pwccode url="" additional="true"/>
    </paper>
    <paper id="2">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 2: Predicting Multilingual and Cross-Lingual (Graded) Lexical Entailment</title>
      <author><first>Goran</first><last>Glavaš</last></author>
      <author><first>Ivan</first><last>Vulić</last></author>
      <author><first>Anna</first><last>Korhonen</last></author>
      <author><first>Simone Paolo</first><last>Ponzetto</last></author>
      <pages>24–35</pages>
      <abstract>Lexical entailment (LE) is a fundamental asymmetric lexico-semantic relation, supporting the hierarchies in lexical resources (e.g., WordNet, ConceptNet) and applications like natural language inference and taxonomy induction. Multilingual and cross-lingual NLP applications warrant models for LE detection that go beyond language boundaries. As part of SemEval 2020, we carried out a shared task (Task 2) on multilingual and cross-lingual LE. The shared task spans three dimensions: (1) monolingual vs. cross-lingual LE, (2) binary vs. graded LE, and (3) a set of 6 diverse languages (and 15 corresponding language pairs). We offered two different evaluation tracks: (a) Dist: for unsupervised, fully distributional models that capture LE solely on the basis of unannotated corpora, and (b) Any: for externally informed models, allowed to leverage any resources, including lexico-semantic networks (e.g., WordNet or BabelNet). In the Any track, we recieved runs that push state-of-the-art across all languages and language pairs, for both binary LE detection and graded LE prediction.</abstract>
      <url hash="592bb6ad">2020.semeval-1.2</url>
      <bibkey>glavas-etal-2020-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.2</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/conceptnet">ConceptNet</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/hyperlex">HyperLex</pwcdataset>
    </paper>
    <paper id="3">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 3: Graded Word Similarity in Context</title>
      <author><first>Carlos Santos</first><last>Armendariz</last></author>
      <author><first>Matthew</first><last>Purver</last></author>
      <author><first>Senja</first><last>Pollak</last></author>
      <author><first>Nikola</first><last>Ljubešić</last></author>
      <author><first>Matej</first><last>Ulčar</last></author>
      <author><first>Ivan</first><last>Vulić</last></author>
      <author><first>Mohammad Taher</first><last>Pilehvar</last></author>
      <pages>36–49</pages>
      <abstract>This paper presents the Graded Word Similarity in Context (GWSC) task which asked participants to predict the effects of context on human perception of similarity in English, Croatian, Slovene and Finnish. We received 15 submissions and 11 system description papers. A new dataset (CoSimLex) was created for evaluation in this task: it contains pairs of words, each annotated within two different contexts. Systems beat the baselines by significant margins, but few did well in more than one language or subtask. Almost every system employed a Transformer model, but with many variations in the details: WordNet sense embeddings, translation of contexts, TF-IDF weightings, and the automatic creation of datasets for fine-tuning were all used to good effect.</abstract>
      <url hash="ce49ed52">2020.semeval-1.3</url>
      <bibkey>armendariz-etal-2020-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.3</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/wic">WiC</pwcdataset>
    </paper>
    <paper id="4">
      <title><fixed-case>D</fixed-case>ia<fixed-case>S</fixed-case>ense at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Modeling Sense Change via Pre-trained <fixed-case>BERT</fixed-case> Embeddings</title>
      <author><first>Christin</first><last>Beck</last></author>
      <pages>50–58</pages>
      <abstract>This paper describes DiaSense, a system developed for Task 1 ‘Unsupervised Lexical Semantic Change Detection’ of SemEval 2020. In DiaSense, contextualized word embeddings are used to model word sense changes. This allows for the calculation of metrics which mimic human intuitions about the semantic relatedness between individual use pairs of a target word for the assessment of lexical semantic change. DiaSense is able to detect lexical semantic change in English, German, Latin and Swedish (accuracy = 0.728). Moreover, DiaSense differentiates between weak and strong change.</abstract>
      <url hash="5643515b">2020.semeval-1.4</url>
      <bibkey>beck-2020-diasense</bibkey>
      <doi>10.18653/v1/2020.semeval-1.4</doi>
    </paper>
    <paper id="5">
      <title><fixed-case>B</fixed-case>abel<fixed-case>E</fixed-case>nconding at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 3: Contextual Similarity as a Combination of Multilingualism and Language Models</title>
      <author><first>Lucas Rafael</first><last>Costella Pessutto</last></author>
      <author><first>Tiago</first><last>de Melo</last></author>
      <author><first>Viviane P.</first><last>Moreira</last></author>
      <author><first>Altigran</first><last>da Silva</last></author>
      <pages>59–66</pages>
      <abstract>This paper describes the system submitted by our team (BabelEnconding) to SemEval-2020 Task 3: Predicting the Graded Effect of Context in Word Similarity. We propose an approach that relies on translation and multilingual language models in order to compute the contextual similarity between pairs of words. Our hypothesis is that evidence from additional languages can leverage the correlation with the human generated scores. BabelEnconding was applied to both subtasks and ranked among the top-3 in six out of eight task/language combinations and was the highest scoring system three times.</abstract>
      <url hash="e9eee61e">2020.semeval-1.5</url>
      <bibkey>costella-pessutto-etal-2020-babelenconding</bibkey>
      <doi>10.18653/v1/2020.semeval-1.5</doi>
    </paper>
    <paper id="6">
      <title>Discovery Team at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Context-sensitive Embeddings Not Always Better than Static for Semantic Change Detection</title>
      <author><first>Matej</first><last>Martinc</last></author>
      <author><first>Syrielle</first><last>Montariol</last></author>
      <author><first>Elaine</first><last>Zosa</last></author>
      <author><first>Lidia</first><last>Pivovarova</last></author>
      <pages>67–73</pages>
      <abstract>This paper describes the approaches used by the Discovery Team to solve SemEval-2020 Task 1 - Unsupervised Lexical Semantic Change Detection. The proposed method is based on clustering of BERT contextual embeddings, followed by a comparison of cluster distributions across time. The best results were obtained by an ensemble of this method and static Word2Vec embeddings. According to the official results, our approach proved the best for Latin in Subtask 2.</abstract>
      <url hash="083ea248">2020.semeval-1.6</url>
      <bibkey>martinc-etal-2020-discovery</bibkey>
      <doi>10.18653/v1/2020.semeval-1.6</doi>
    </paper>
    <paper id="7">
      <title><fixed-case>GM</fixed-case>-<fixed-case>CTSC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: <fixed-case>G</fixed-case>aussian Mixtures Cross Temporal Similarity Clustering</title>
      <author><first>Pierluigi</first><last>Cassotti</last></author>
      <author><first>Annalina</first><last>Caputo</last></author>
      <author><first>Marco</first><last>Polignano</last></author>
      <author><first>Pierpaolo</first><last>Basile</last></author>
      <pages>74–80</pages>
      <abstract>This paper describes the system proposed by the Random team for SemEval-2020 Task 1: Unsupervised Lexical Semantic Change Detection. We focus our approach on the detection problem. Given the semantics of words captured by temporal word embeddings in different time periods, we investigate the use of unsupervised methods to detect when the target word has gained or lost senses. To this end, we define a new algorithm based on Gaussian Mixture Models to cluster the target similarities computed over the two periods. We compare the proposed approach with a number of similarity-based thresholds. We found that, although the performance of the detection methods varies across the word embedding algorithms, the combination of Gaussian Mixture with Temporal Referencing resulted in our best system.</abstract>
      <url hash="51866b0c">2020.semeval-1.7</url>
      <bibkey>cassotti-etal-2020-gm</bibkey>
      <doi>10.18653/v1/2020.semeval-1.7</doi>
    </paper>
    <paper id="8">
      <title><fixed-case>IMS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: How Low Can You Go? Dimensionality in Lexical Semantic Change Detection</title>
      <author><first>Jens</first><last>Kaiser</last></author>
      <author><first>Dominik</first><last>Schlechtweg</last></author>
      <author><first>Sean</first><last>Papay</last></author>
      <author><first>Sabine</first><last>Schulte im Walde</last></author>
      <pages>81–89</pages>
      <abstract>We present the results of our system for SemEval-2020 Task 1 that exploits a commonly used lexical semantic change detection model based on Skip-Gram with Negative Sampling. Our system focuses on Vector Initialization (VI) alignment, compares VI to the currently top-ranking models for Subtask 2 and demonstrates that these can be outperformed if we optimize VI dimensionality. We demonstrate that differences in performance can largely be attributed to model-specific sources of noise, and we reveal a strong relationship between dimensionality and frequency-induced noise in VI alignment. Our results suggest that lexical semantic change models integrating vector space alignment should pay more attention to the role of the dimensionality parameter.</abstract>
      <url hash="5be9b35c">2020.semeval-1.8</url>
      <bibkey>kaiser-etal-2020-ims</bibkey>
      <doi>10.18653/v1/2020.semeval-1.8</doi>
    </paper>
    <paper id="9">
      <title><fixed-case>JCT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Combined Semantic Vector Spaces Models for Unsupervised Lexical Semantic Change Detection</title>
      <author><first>Efrat</first><last>Amar</last></author>
      <author><first>Chaya</first><last>Liebeskind</last></author>
      <pages>90–97</pages>
      <abstract>In this paper, we present our contribution in SemEval-2020 Task 1: Unsupervised Lexical Semantic Change Detection, where we systematically combine existing models for unsupervised capturing of lexical semantic change across time in text corpora of German, English, Latin and Swedish. In particular, we analyze the score distribution of existing models. Then we define a general threshold, adjust it independently to each of the models and measure the models’ score reliability. Finally, using both the threshold and score reliability, we aggregate the models for the two sub- tasks: binary classification and ranking.</abstract>
      <url hash="393d8e53">2020.semeval-1.9</url>
      <bibkey>amar-liebeskind-2020-jct</bibkey>
      <doi>10.18653/v1/2020.semeval-1.9</doi>
    </paper>
    <paper id="10">
      <title><fixed-case>RIJP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: <fixed-case>G</fixed-case>aussian-based Embeddings for Semantic Change Detection</title>
      <author><first>Ran</first><last>Iwamoto</last></author>
      <author><first>Masahiro</first><last>Yukawa</last></author>
      <pages>98–104</pages>
      <abstract>This paper describes the model proposed and submitted by our RIJP team to SemEval 2020 Task1: Unsupervised Lexical Semantic Change Detection. In the model, words are represented by Gaussian distributions. For Subtask 1, the model achieved average scores of 0.51 and 0.70 in the evaluation and post-evaluation processes, respectively. The higher score in the post-evaluation process than that in the evaluation process was achieved owing to appropriate parameter tuning. The results indicate that the proposed Gaussian-based embedding model is able to express semantic shifts while having a low computational</abstract>
      <url hash="23708d8a">2020.semeval-1.10</url>
      <bibkey>iwamoto-yukawa-2020-rijp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.10</doi>
    </paper>
    <paper id="11">
      <title><fixed-case>SC</fixed-case>h<fixed-case>ME</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: A Model Ensemble for Detecting Lexical Semantic Change</title>
      <author><first>Maurício</first><last>Gruppi</last></author>
      <author><first>Sibel</first><last>Adali</last></author>
      <author><first>Pin-Yu</first><last>Chen</last></author>
      <pages>105–111</pages>
      <abstract>This paper describes SChME (Semantic Change Detection with Model Ensemble), a method used in SemEval-2020 Task 1 on unsupervised detection of lexical semantic change. SChME uses a model ensemble combining signals distributional models (word embeddings) and word frequency where each model casts a vote indicating the probability that a word suffered semantic change according to that feature. More specifically, we combine cosine distance of word vectors combined with a neighborhood-based metric we named Mapped Neighborhood Distance (MAP), and a word frequency differential metric as input signals to our model. Additionally, we explore alignment-based methods to investigate the importance of the landmarks used in this process. Our results show evidence that the number of landmarks used for alignment has a direct impact on the predictive performance of the model. Moreover, we show that languages that suffer less semantic change tend to benefit from using a large number of landmarks, whereas languages with more semantic change benefit from a more careful choice of landmark number for alignment.</abstract>
      <url hash="a0b34001">2020.semeval-1.11</url>
      <bibkey>gruppi-etal-2020-schme</bibkey>
      <doi>10.18653/v1/2020.semeval-1.11</doi>
      <pwccode url="https://github.com/mgruppi/schme" additional="false">mgruppi/schme</pwccode>
    </paper>
    <paper id="12">
      <title><fixed-case>S</fixed-case>ense<fixed-case>C</fixed-case>luster at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Unsupervised Lexical Semantic Change Detection</title>
      <author><first>Amaru</first><last>Cuba Gyllensten</last></author>
      <author><first>Evangelia</first><last>Gogoulou</last></author>
      <author><first>Ariel</first><last>Ekgren</last></author>
      <author><first>Magnus</first><last>Sahlgren</last></author>
      <pages>112–118</pages>
      <abstract>We (Team Skurt) propose a simple method to detect lexical semantic change by clustering contextualized embeddings produced by XLM-R, using K-Means++. The basic idea is that contextualized embeddings that encode the same sense are located in close proximity in the embedding space. Our approach is both simple and generic, but yet performs relatively good in both sub-tasks of SemEval-2020 Task 1. We hypothesize that the main shortcoming of our method lies in the simplicity of the clustering method used.</abstract>
      <url hash="28c90b76">2020.semeval-1.12</url>
      <bibkey>cuba-gyllensten-etal-2020-sensecluster</bibkey>
      <doi>10.18653/v1/2020.semeval-1.12</doi>
    </paper>
    <paper id="13">
      <title>The <fixed-case>UCD</fixed-case>-Net System at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Temporal Referencing with Semantic Network Distances</title>
      <author><first>Paul</first><last>Nulty</last></author>
      <author><first>David</first><last>Lillis</last></author>
      <pages>119–125</pages>
      <abstract>This paper describes the UCD system entered for SemEval 2020 Task 1: Unsupervised Lexical Semantic Change Detection. We propose a novel method based on distance between temporally referenced nodes in a semantic network constructed from a combination of the time specific corpora. We argue for the value of semantic networks as objects for transparent exploratory analysis and visualisation of lexical semantic change, and present an implementation of a web application for the purpose of searching and visualising semantic networks. The results of the change measure used for this task were not among the best performing systems, but further calibration of the distance metric and backoff approaches may improve this method.</abstract>
      <url hash="97c6983e">2020.semeval-1.13</url>
      <bibkey>nulty-lillis-2020-ucd</bibkey>
      <doi>10.18653/v1/2020.semeval-1.13</doi>
    </paper>
    <paper id="14">
      <title><fixed-case>U</fixed-case>i<fixed-case>O</fixed-case>-<fixed-case>U</fixed-case>v<fixed-case>A</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Contextualised Embeddings for Lexical Semantic Change Detection</title>
      <author><first>Andrey</first><last>Kutuzov</last></author>
      <author><first>Mario</first><last>Giulianelli</last></author>
      <pages>126–134</pages>
      <abstract>We apply contextualised word embeddings to lexical semantic change detection in the SemEval-2020 Shared Task 1. This paper focuses on Subtask 2, ranking words by the degree of their semantic drift over time. We analyse the performance of two contextualising architectures (BERT and ELMo) and three change detection algorithms. We find that the most effective algorithms rely on the cosine similarity between averaged token embeddings and the pairwise distances between token embeddings. They outperform strong baselines by a large margin (in the post-evaluation phase, we have the best Subtask 2 submission for SemEval-2020 Task 1), but interestingly, the choice of a particular algorithm depends on the distribution of gold scores in the test set.</abstract>
      <url hash="6f8c0547">2020.semeval-1.14</url>
      <bibkey>kutuzov-giulianelli-2020-uio</bibkey>
      <doi>10.18653/v1/2020.semeval-1.14</doi>
      <pwccode url="https://github.com/akutuzov/semeval2020" additional="false">akutuzov/semeval2020</pwccode>
    </paper>
    <paper id="15">
      <title><fixed-case>BMEAUT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 2: Lexical Entailment with Semantic Graphs</title>
      <author><first>Ádám</first><last>Kovács</last></author>
      <author><first>Kinga</first><last>Gémes</last></author>
      <author><first>Andras</first><last>Kornai</last></author>
      <author><first>Gábor</first><last>Recski</last></author>
      <pages>135–141</pages>
      <abstract>In this paper we present a novel rule-based, language independent method for determining lexical entailment relations using semantic representations built from Wiktionary definitions. Combined with a simple WordNet-based method our system achieves top scores on the English and Italian datasets of the Semeval-2020 task “Predicting Multilingual and Cross-lingual (graded) Lexical Entailment” (Glavaš et al., 2020). A detailed error analysis of our output uncovers future di- rections for improving both the semantic parsing method and the inference process on semantic graphs.</abstract>
      <url hash="002844d9">2020.semeval-1.15</url>
      <bibkey>kovacs-etal-2020-bmeaut</bibkey>
      <doi>10.18653/v1/2020.semeval-1.15</doi>
    </paper>
    <paper id="16">
      <title><fixed-case>BRUMS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 3: Contextualised Embeddings for Predicting the (Graded) Effect of Context in Word Similarity</title>
      <author><first>Hansi</first><last>Hettiarachchi</last></author>
      <author><first>Tharindu</first><last>Ranasinghe</last></author>
      <pages>142–149</pages>
      <abstract>This paper presents the team BRUMS submission to SemEval-2020 Task 3: Graded Word Similarity in Context. The system utilises state-of-the-art contextualised word embeddings, which have some task-specific adaptations, including stacked embeddings and average embeddings. Overall, the approach achieves good evaluation scores across all the languages, while maintaining simplicity. Following the final rankings, our approach is ranked within the top 5 solutions of each language while preserving the 1st position of Finnish subtask 2.</abstract>
      <url hash="3b0c34a9">2020.semeval-1.16</url>
      <bibkey>hettiarachchi-ranasinghe-2020-brums</bibkey>
      <doi>10.18653/v1/2020.semeval-1.16</doi>
      <pwccode url="https://github.com/HHansi/Semeval-2020-Task3" additional="false">HHansi/Semeval-2020-Task3</pwccode>
    </paper>
    <paper id="17">
      <title><fixed-case>M</fixed-case>ineria<fixed-case>UNAM</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 3: Predicting Contextual <fixed-case>W</fixed-case>ord<fixed-case>S</fixed-case>imilarity Using a Centroid Based Approach and Word Embeddings</title>
      <author><first>Helena</first><last>Gomez-Adorno</last></author>
      <author><first>Gemma</first><last>Bel-Enguix</last></author>
      <author><first>Jorge</first><last>Reyes-Magaña</last></author>
      <author><first>Benjamín</first><last>Moreno</last></author>
      <author><first>Ramón</first><last>Casillas</last></author>
      <author><first>Daniel</first><last>Vargas</last></author>
      <pages>150–157</pages>
      <abstract>This paper presents our systems to solve Task 3 of Semeval-2020, which aims to predict the effect that context has on human perception of similarity of words. The task consists of two subtasks in English, Croatian, Finnish, and Slovenian: (1) predicting the change of similarity and (2) predicting the human scores of similarity, both of them for a pair of words within two different contexts. We tackled the problem by developing two systems, the first one uses a centroid approach and word vectors. The second one uses the ELMo language model, which is trained for each pair of words with the given context. Our approach achieved the highest score in subtask 2 for the English language.</abstract>
      <url hash="864ce760">2020.semeval-1.17</url>
      <bibkey>gomez-adorno-etal-2020-mineriaunam</bibkey>
      <doi>10.18653/v1/2020.semeval-1.17</doi>
    </paper>
    <paper id="18">
      <title><fixed-case>MULTISEM</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 3: Fine-tuning <fixed-case>BERT</fixed-case> for Lexical Meaning</title>
      <author><first>Aina</first><last>Garí Soler</last></author>
      <author><first>Marianna</first><last>Apidianaki</last></author>
      <pages>158–165</pages>
      <abstract>We present the MULTISEM systems submitted to SemEval 2020 Task 3: Graded Word Similarity in Context (GWSC). We experiment with injecting semantic knowledge into pre-trained BERT models through fine-tuning on lexical semantic tasks related to GWSC. We use existing semantically annotated datasets, and propose to approximate similarity through automatically generated lexical substitutes in context. We participate in both GWSC subtasks and address two languages, English and Finnish. Our best English models occupy the third and fourth positions in the ranking for the two subtasks. Performance is lower for the Finnish models which are mid-ranked in the respective subtasks, highlighting the important role of data availability for fine-tuning.</abstract>
      <url hash="5331be7d">2020.semeval-1.18</url>
      <bibkey>gari-soler-apidianaki-2020-multisem</bibkey>
      <doi>10.18653/v1/2020.semeval-1.18</doi>
      <pwccode url="https://github.com/ainagari/semeval2020-task3-multisem" additional="false">ainagari/semeval2020-task3-multisem</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/glue">GLUE</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/opusparcus">Opusparcus</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/wic">WiC</pwcdataset>
    </paper>
    <paper id="19">
      <title><fixed-case>UZH</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 3: Combining <fixed-case>BERT</fixed-case> with <fixed-case>W</fixed-case>ord<fixed-case>N</fixed-case>et Sense Embeddings to Predict Graded Word Similarity Changes</title>
      <author><first>Li</first><last>Tang</last></author>
      <pages>166–170</pages>
      <abstract>CoSimLex is a dataset that can be used to evaluate the ability of context-dependent word embed- dings for modeling subtle, graded changes of meaning, as perceived by humans during reading. At SemEval-2020, task 3, subtask 1 is about ”predicting the (graded) effect of context in word similarity”, using CoSimLex to quantify such a change of similarity for a pair of words, from one context to another. Here, a meaning shift is composed of two aspects, a) discrete changes observed between different word senses, and b) more subtle changes of meaning representation that are not captured in those discrete changes. Therefore, this SemEval task was designed to allow the evaluation of systems that can deal with a mix of both situations of semantic shift, as they occur in the human perception of meaning. The described system was developed to improve the BERT baseline provided with the task, by reducing distortions in the BERT semantic space, compared to the human semantic space. To this end, complementarity between 768- and 1024-dimensional BERT embeddings, and average word sense vectors were used. With this system, after some fine-tuning, the baseline performance of 0.705 (uncentered Pearson correlation with human semantic shift data from 27 annotators) was enhanced by more than 6%, to 0.7645. We hope that this work can make a contribution to further our understanding of the semantic vector space of human perception, as it can be modeled with context-dependent word embeddings in natural language processing systems.</abstract>
      <url hash="f01314b6">2020.semeval-1.19</url>
      <bibkey>tang-2020-uzh</bibkey>
      <doi>10.18653/v1/2020.semeval-1.19</doi>
    </paper>
    <paper id="20">
      <title><fixed-case>BOS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Word Sense Induction via Lexical Substitution for Lexical Semantic Change Detection</title>
      <author><first>Nikolay</first><last>Arefyev</last></author>
      <author><first>Vasily</first><last>Zhikov</last></author>
      <pages>171–179</pages>
      <abstract>SemEval-2020 Task 1 is devoted to detection of changes in word meaning over time. The first subtask raises a question if a particular word has acquired or lost any of its senses during the given time period. The second subtask requires estimating the change in frequencies of the word senses. We have submitted two solutions for both subtasks. The first solution performs word sense induction (WSI) first, then makes the decision based on the induced word senses. We extend the existing WSI method based on clustering of lexical substitutes generated with neural language models and adapt it to the task. The second solution exploits a well-known approach to semantic change detection, that includes building word2vec SGNS vectors, aligning them with Orthogonal Procrustes and calculating cosine distance between resulting vectors. While WSI-based solution performs better in Subtask 1, which requires binary decisions, the second solution outperforms it in Subtask 2 and obtains the 3rd best result in this subtask.</abstract>
      <url hash="75c15a86">2020.semeval-1.20</url>
      <bibkey>arefyev-zhikov-2020-bos</bibkey>
      <doi>10.18653/v1/2020.semeval-1.20</doi>
    </paper>
    <paper id="21">
      <title><fixed-case>CIRCE</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Ensembling Context-Free and Context-Dependent Word Representations</title>
      <author><first>Martin</first><last>Pömsl</last></author>
      <author><first>Roman</first><last>Lyapin</last></author>
      <pages>180–186</pages>
      <abstract>This paper describes the winning contribution to SemEval-2020 Task 1: Unsupervised Lexical Semantic Change Detection (Subtask 2) handed in by team UG Student Intern. We present an ensemble model that makes predictions based on context-free and context-dependent word representations. The key findings are that (1) context-free word representations are a powerful and robust baseline, (2) a sentence classification objective can be used to obtain useful context-dependent word representations, and (3) combining those representations increases performance on some datasets while decreasing performance on others.</abstract>
      <url hash="0dc21d62">2020.semeval-1.21</url>
      <bibkey>pomsl-lyapin-2020-circe</bibkey>
      <doi>10.18653/v1/2020.semeval-1.21</doi>
      <pwccode url="https://github.com/mpoemsl/circe" additional="true">mpoemsl/circe</pwccode>
    </paper>
    <paper id="22">
      <title><fixed-case>CMCE</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Clustering on Manifolds of Contextualized Embeddings to Detect Historical Meaning Shifts</title>
      <author><first>David</first><last>Rother</last></author>
      <author><first>Thomas</first><last>Haider</last></author>
      <author><first>Steffen</first><last>Eger</last></author>
      <pages>187–193</pages>
      <abstract>This paper describes the system Clustering on Manifolds of Contextualized Embeddings (CMCE) submitted to the SemEval-2020 Task 1 on Unsupervised Lexical Semantic Change Detection. Subtask 1 asks to identify whether or not a word gained/lost a sense across two time periods. Subtask 2 is about computing a ranking of words according to the amount of change their senses underwent. Our system uses contextualized word embeddings from MBERT, whose dimensionality we reduce with an autoencoder and the UMAP algorithm, to be able to use a wider array of clustering algorithms that can automatically determine the number of clusters. We use Hierarchical Density Based Clustering (HDBSCAN) and compare it to Gaussian MixtureModels (GMMs) and other clustering algorithms. Remarkably, with only 10 dimensional MBERT embeddings (reduced from the original size of 768), our submitted model performs best on subtask 1 for English and ranks third in subtask 2 for English. In addition to describing our system, we discuss our hyperparameter configurations and examine why our system lags behind for the other languages involved in the shared task (German, Swedish, Latin). Our code is available at https://github.com/DavidRother/semeval2020-task1</abstract>
      <url hash="a1df14a0">2020.semeval-1.22</url>
      <bibkey>rother-etal-2020-cmce</bibkey>
      <doi>10.18653/v1/2020.semeval-1.22</doi>
      <pwccode url="https://github.com/DavidRother/semeval2020-task1" additional="false">DavidRother/semeval2020-task1</pwccode>
    </paper>
    <paper id="23">
      <title><fixed-case>DCC</fixed-case>-Uchile at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Temporal Referencing Word Embeddings</title>
      <author><first>Frank D.</first><last>Zamora-Reina</last></author>
      <author><first>Felipe</first><last>Bravo-Marquez</last></author>
      <pages>194–200</pages>
      <abstract>We present a system for the task of unsupervised lexical change detection: given a target word and two corpora spanning different periods of time, automatically detects whether the word has lost or gained senses from one corpus to another. Our system employs the temporal referencing method to obtain compatible representations of target words in different periods of time. This is done by concatenating corpora of different periods and performing a temporal referencing of target words i.e., treating occurrences of target words in different periods as two independent tokens. Afterwards, we train word embeddings on the joint corpus and compare the referenced vectors of each target word using cosine similarity. Our submission was ranked 7th among 34 teams for subtask 1, obtaining an average accuracy of 0.637, only 0.050 points behind the first ranked system.</abstract>
      <url hash="7b1c00b5">2020.semeval-1.23</url>
      <bibkey>zamora-reina-bravo-marquez-2020-dcc</bibkey>
      <doi>10.18653/v1/2020.semeval-1.23</doi>
    </paper>
    <paper id="24">
      <title><fixed-case>E</fixed-case>mb<fixed-case>L</fixed-case>ex<fixed-case>C</fixed-case>hange at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Unsupervised Embedding-based Detection of Lexical Semantic Changes</title>
      <author><first>Ehsaneddin</first><last>Asgari</last></author>
      <author><first>Christoph</first><last>Ringlstetter</last></author>
      <author><first>Hinrich</first><last>Schütze</last></author>
      <pages>201–207</pages>
      <abstract>This paper describes EmbLexChange, a system introduced by the “Life-Language” team for SemEval-2020 Task 1, on unsupervised detection of lexical-semantic changes. EmbLexChange is defined as the divergence between the embedding based profiles of word w (calculated with respect to a set of reference words) in the source and the target domains (source and target domains can be simply two time frames t_1 and t_2). The underlying assumption is that the lexical-semantic change of word <tex-math>w</tex-math> would affect its co-occurring words and subsequently alters the neighborhoods in the embedding spaces. We show that using a resampling framework for the selection of reference words (with conserved senses), we can more reliably detect lexical-semantic changes in English, German, Swedish, and Latin. EmbLexChange achieved second place in the binary detection of semantic changes in the SemEval-2020.</abstract>
      <url hash="488a5150">2020.semeval-1.24</url>
      <bibkey>asgari-etal-2020-emblexchange</bibkey>
      <doi>10.18653/v1/2020.semeval-1.24</doi>
      <pwccode url="https://github.com/ehsanasgari/emblexchange" additional="false">ehsanasgari/emblexchange</pwccode>
    </paper>
    <paper id="25">
      <title><fixed-case>G</fixed-case>lo<fixed-case>V</fixed-case>e<fixed-case>I</fixed-case>nit at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Using <fixed-case>G</fixed-case>lo<fixed-case>V</fixed-case>e Vector Initialization for Unsupervised Lexical Semantic Change Detection</title>
      <author><first>Vaibhav</first><last>Jain</last></author>
      <pages>208–213</pages>
      <abstract>This paper presents a vector initialization approach for the SemEval2020 Task 1: Unsupervised Lexical Semantic Change Detection. Given two corpora belonging to different time periods and a set of target words, this task requires us to classify whether a word gained or lost a sense over time (subtask 1) and to rank them on the basis of the changes in their word senses (subtask 2). The proposed approach is based on using Vector Initialization method to align GloVe embeddings. The idea is to consecutively train GloVe embeddings for both corpora, while using the first model to initialize the second one. This paper is based on the hypothesis that GloVe embeddings are more suited for the Vector Initialization method than SGNS embeddings. It presents an intuitive reasoning behind this hypothesis, and also talks about the impact of various factors and hyperparameters on the performance of the proposed approach. Our model ranks 12th and 10th among 33 teams in the two subtasks. The implementation has been shared publicly.</abstract>
      <url hash="2348b733">2020.semeval-1.25</url>
      <bibkey>jain-2020-gloveinit</bibkey>
      <doi>10.18653/v1/2020.semeval-1.25</doi>
      <pwccode url="https://github.com/vaibhav29498/GloVeInit" additional="false">vaibhav29498/GloVeInit</pwccode>
    </paper>
    <paper id="26">
      <title><fixed-case>SST</fixed-case>-<fixed-case>BERT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Semantic Shift Tracing by Clustering in <fixed-case>BERT</fixed-case>-based Embedding Spaces</title>
      <author><first>Vani</first><last>Kanjirangat</last></author>
      <author><first>Sandra</first><last>Mitrovic</last></author>
      <author><first>Alessandro</first><last>Antonucci</last></author>
      <author><first>Fabio</first><last>Rinaldi</last></author>
      <pages>214–221</pages>
      <abstract>Lexical semantic change detection (also known as semantic shift tracing) is a task of identifying words that have changed their meaning over time. Unsupervised semantic shift tracing, focal point of SemEval2020, is particularly challenging. Given the unsupervised setup, in this work, we propose to identify clusters among different occurrences of each target word, considering these as representatives of different word meanings. As such, disagreements in obtained clusters naturally allow to quantify the level of semantic shift per each target word in four target languages. To leverage this idea, clustering is performed on contextualized (BERT-based) embeddings of word occurrences. The obtained results show that our approach performs well both measured separately (per language) and overall, where we surpass all provided SemEval baselines.</abstract>
      <url hash="f4371019">2020.semeval-1.26</url>
      <bibkey>kanjirangat-etal-2020-sst</bibkey>
      <doi>10.18653/v1/2020.semeval-1.26</doi>
      <pwccode url="https://github.com/vanikanjirangat/SST_BERT-SEMEVAL_TASK1" additional="true">vanikanjirangat/SST_BERT-SEMEVAL_TASK1</pwccode>
    </paper>
    <paper id="27">
      <title><fixed-case>T</fixed-case>emporal<fixed-case>T</fixed-case>eller at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Unsupervised Lexical Semantic Change Detection with Temporal Referencing</title>
      <author><first>Jinan</first><last>Zhou</last></author>
      <author><first>Jiaxin</first><last>Li</last></author>
      <pages>222–231</pages>
      <abstract>This paper describes our TemporalTeller system for SemEval Task 1: Unsupervised Lexical Semantic Change Detection. We develop a unified framework for the common semantic change detection pipelines including preprocessing, learning word embeddings, calculating vector distances and determining threshold. We also propose Gamma Quantile Threshold to distinguish between changed and stable words. Based on our system, we conduct a comprehensive comparison among BERT, Skip-gram, Temporal Referencing and alignment-based methods. Evaluation results show that Skip-gram with Temporal Referencing achieves the best performance of 66.5% classification accuracy and 51.8% Spearman’s Ranking Correlation.</abstract>
      <url hash="0eeca120">2020.semeval-1.27</url>
      <bibkey>zhou-li-2020-temporalteller</bibkey>
      <doi>10.18653/v1/2020.semeval-1.27</doi>
    </paper>
    <paper id="28">
      <title><fixed-case>TUE</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Detecting Semantic Change by Clustering Contextual Word Embeddings</title>
      <author><first>Anna</first><last>Karnysheva</last></author>
      <author><first>Pia</first><last>Schwarz</last></author>
      <pages>232–238</pages>
      <abstract>This paper describes our system for SemEval 2020 Task 1: Unsupervised Lexical Semantic Change Detection. Target words of corpora from two different time periods are classified according to their semantic change. The languages covered are English, German, Latin, and Swedish. Our approach involves clustering ELMo embeddings using DBSCAN and K-means. For a more fine grained detection of semantic change we take the Jensen-Shannon Distance metric and rank the target words from strongest to weakest change. The results show that this is a valid approach for the classification subtask where we rank 13th out of 33 groups with an accuracy score of 61.2%. For the ranking subtask we score a Spearman’s rank-order correlation coefficient of 0.087 which places us on rank 29.</abstract>
      <url hash="2b393094">2020.semeval-1.28</url>
      <bibkey>karnysheva-schwarz-2020-tue</bibkey>
      <doi>10.18653/v1/2020.semeval-1.28</doi>
    </paper>
    <paper id="29">
      <title><fixed-case>U</fixed-case>o<fixed-case>B</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Automatic Identification of Novel Word Senses</title>
      <author><first>Eleri</first><last>Sarsfield</last></author>
      <author><first>Harish</first><last>Tayyar Madabushi</last></author>
      <pages>239–245</pages>
      <abstract>Much as the social landscape in which languages are spoken shifts, language too evolves to suit the needs of its users. Lexical semantic change analysis is a burgeoning field of semantic analysis which aims to trace changes in the meanings of words over time. This paper presents an approach to lexical semantic change detection based on Bayesian word sense induction suitable for novel word sense identification. This approach is used for a submission to SemEval-2020 Task 1, which shows the approach to be capable of the SemEval task. The same approach is also applied to a corpus gleaned from 15 years of Twitter data, the results of which are then used to identify words which may be instances of slang.</abstract>
      <url hash="537aa316">2020.semeval-1.29</url>
      <bibkey>sarsfield-tayyar-madabushi-2020-uob</bibkey>
      <doi>10.18653/v1/2020.semeval-1.29</doi>
      <pwccode url="https://github.com/elerisarsfield/semeval" additional="false">elerisarsfield/semeval</pwccode>
    </paper>
    <paper id="30">
      <title><fixed-case>UWB</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 1: Lexical Semantic Change Detection</title>
      <author><first>Ondřej</first><last>Pražák</last></author>
      <author><first>Pavel</first><last>Přibáň</last></author>
      <author><first>Stephen</first><last>Taylor</last></author>
      <author><first>Jakub</first><last>Sido</last></author>
      <pages>246–254</pages>
      <abstract>In this paper, we describe our method for detection of lexical semantic change, i.e., word sense changes over time. We examine semantic differences between specific words in two corpora, chosen from different time periods, for English, German, Latin, and Swedish. Our method was created for the SemEval 2020 Task 1: Unsupervised Lexical Semantic Change Detection. We ranked 1st in Sub-task 1: binary change detection, and 4th in Sub-task 2: ranked change detection. We present our method which is completely unsupervised and language independent. It consists of preparing a semantic vector space for each corpus, earlier and later; computing a linear transformation between earlier and later spaces, using Canonical Correlation Analysis and orthogonal transformation;and measuring the cosines between the transformed vector for the target word from the earlier corpus and the vector for the target word in the later corpus.</abstract>
      <url hash="47a3d8da">2020.semeval-1.30</url>
      <bibkey>prazak-etal-2020-uwb</bibkey>
      <doi>10.18653/v1/2020.semeval-1.30</doi>
      <pwccode url="https://github.com/pauli31/SemEval2020-task1" additional="false">pauli31/SemEval2020-task1</pwccode>
    </paper>
    <paper id="31">
      <title><fixed-case>SHIKEBLCU</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 2: An External Knowledge-enhanced Matrix for Multilingual and Cross-Lingual Lexical Entailment</title>
      <author><first>Shike</first><last>Wang</last></author>
      <author><first>Yuchen</first><last>Fan</last></author>
      <author><first>Xiangying</first><last>Luo</last></author>
      <author><first>Dong</first><last>Yu</last></author>
      <pages>255–262</pages>
      <abstract>Lexical entailment recognition plays an important role in tasks like Question Answering and Machine Translation. As important branches of lexical entailment, predicting multilingual and cross-lingual lexical entailment (LE) are two subtasks of SemEval2020 Task2. In previous monolingual LE studies, researchers leverage external linguistic constraints to transform word embeddings for LE relation. In our system, we expand the number of external constraints in multiple languages to obtain more specialised multilingual word embeddings. For the cross-lingual subtask, we apply a bilingual word embeddings mapping method in the model. The mapping method takes specialised embeddings as inputs and is able to retain the embeddings’ LE features after operations. Our results for multilingual subtask are about 20% and 10% higher than the baseline in graded and binary prediction respectively.</abstract>
      <url hash="0c4cb83a">2020.semeval-1.31</url>
      <bibkey>wang-etal-2020-shikeblcu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.31</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/conceptnet">ConceptNet</pwcdataset>
    </paper>
    <paper id="32">
      <title><fixed-case>UA</fixed-case>lberta at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 2: Using Translations to Predict Cross-Lingual Entailment</title>
      <author><first>Bradley</first><last>Hauer</last></author>
      <author><first>Amir Ahmad</first><last>Habibi</last></author>
      <author><first>Yixing</first><last>Luan</last></author>
      <author><first>Arnob</first><last>Mallik</last></author>
      <author><first>Grzegorz</first><last>Kondrak</last></author>
      <pages>263–269</pages>
      <abstract>We investigate the hypothesis that translations can be used to identify cross-lingual lexical entailment. We propose novel methods that leverage parallel corpora, word embeddings, and multilingual lexical resources. Our results demonstrate that the implementation of these ideas leads to improvements in predicting entailment.</abstract>
      <url hash="d9b411bd">2020.semeval-1.32</url>
      <bibkey>hauer-etal-2020-ualberta</bibkey>
      <doi>10.18653/v1/2020.semeval-1.32</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/opensubtitles">OpenSubtitles</pwcdataset>
    </paper>
    <paper id="33">
      <title><fixed-case>A</fixed-case>lex<fixed-case>U</fixed-case>-<fixed-case>AUX</fixed-case>-<fixed-case>BERT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 3: Improving <fixed-case>BERT</fixed-case> Contextual Similarity Using Multiple Auxiliary Contexts</title>
      <author><first>Somaia</first><last>Mahmoud</last></author>
      <author><first>Marwan</first><last>Torki</last></author>
      <pages>270–274</pages>
      <abstract>This paper describes the system we built for SemEval-2020 task 3. That is predicting the scores of similarity for a pair of words within two different contexts. Our system is based on both BERT embeddings and WordNet. We simply use cosine similarity to find the closest synset of the target words. Our results show that using this simple approach greatly improves the system behavior. Our model is ranked 3rd in subtask-2 for SemEval-2020 task 3.</abstract>
      <url hash="c6c4a79b">2020.semeval-1.33</url>
      <bibkey>mahmoud-torki-2020-alexu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.33</doi>
    </paper>
    <paper id="34">
      <title><fixed-case>C</fixed-case>itius<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 3: Comparing Two Approaches for Word Vector Contextualization</title>
      <author><first>Pablo</first><last>Gamallo</last></author>
      <pages>275–280</pages>
      <abstract>This article describes some unsupervised strategies submitted to SemEval 2020 Task 3, a task which consists of considering the effect of context to compute word similarity. More precisely, given two words in context, the system must predict the degree of similarity of those words considering the context in which they occur, and the system score is compared against human prediction. We compare one approach based on pre-trained BERT models with other strategy relying on static word embeddings and syntactic dependencies. The BERT-based method clearly outperformed the dependency-based strategy.</abstract>
      <url hash="db448449">2020.semeval-1.34</url>
      <bibkey>gamallo-2020-citiusnlp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.34</doi>
    </paper>
    <paper id="35">
      <title>Ferryman at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 3: Bert with <fixed-case>TFIDF</fixed-case>-Weighting for Predicting the Effect of Context in Word Similarity</title>
      <author><first>Weilong</first><last>Chen</last></author>
      <author><first>Xin</first><last>Yuan</last></author>
      <author><first>Sai</first><last>Zhang</last></author>
      <author><first>Jiehui</first><last>Wu</last></author>
      <author><first>Yanru</first><last>Zhang</last></author>
      <author><first>Yan</first><last>Wang</last></author>
      <pages>281–285</pages>
      <abstract>Word similarity is widely used in machine learning applications like searching engine and recommendation. Measuring the changing meaning of the same word between two different sentences is not only a way to handle complex features in word usage (such as sentence syntax and semantics), but also an important method for different word polysemy modeling. In this paper, we present the methodology proposed by team Ferryman. Our system is based on the Bidirectional Encoder Representations from Transformers (BERT) model combined with term frequency-inverse document frequency (TF-IDF), applying the method on the provided datasets called CoSimLex, which covers four different languages including English, Croatian, Slovene, and Finnish. Our team Ferryman wins the the first position for English task and the second position for Finnish in the subtask 1.</abstract>
      <url hash="a09a8129">2020.semeval-1.35</url>
      <bibkey>chen-etal-2020-ferryman</bibkey>
      <doi>10.18653/v1/2020.semeval-1.35</doi>
    </paper>
    <paper id="36">
      <title>Hitachi at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 3: Exploring the Representation Spaces of Transformers for Human Sense Word Similarity</title>
      <author><first>Terufumi</first><last>Morishita</last></author>
      <author><first>Gaku</first><last>Morio</last></author>
      <author><first>Hiroaki</first><last>Ozaki</last></author>
      <author><first>Toshinori</first><last>Miyoshi</last></author>
      <pages>286–291</pages>
      <abstract>In this paper, we present our system for SemEval-2020 task 3, Predicting the (Graded) Effect of Context in Word Similarity. Due to the unsupervised nature of the task, we concentrated on inquiring about the similarity measures induced by different layers of different pre-trained Transformer-based language models, which can be good approximations of the human sense of word similarity. Interestingly, our experiments reveal a language-independent characteristic: the middle to upper layers of Transformer-based language models can induce good approximate similarity measures. Finally, our system was ranked 1st on the Slovenian part of Subtask1 and 2nd on the Croatian part of both Subtask1 and Subtask2.</abstract>
      <url hash="06c176d3">2020.semeval-1.36</url>
      <bibkey>morishita-etal-2020-hitachi</bibkey>
      <doi>10.18653/v1/2020.semeval-1.36</doi>
    </paper>
    <paper id="37">
      <title><fixed-case>JUSTM</fixed-case>asters at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 3: Multilingual Deep Learning Model to Predict the Effect of Context in Word Similarity</title>
      <author><first>Nour</first><last>Al-khdour</last></author>
      <author><first>Mutaz</first><last>Bni Younes</last></author>
      <author><first>Malak</first><last>Abdullah</last></author>
      <author><first>Mohammad</first><last>AL-Smadi</last></author>
      <pages>292–300</pages>
      <abstract>There is a growing research interest in studying word similarity. Without a doubt, two similar words in a context may considered different in another context. Therefore, this paper investigates the effect of the context in word similarity. The SemEval-2020 workshop has provided a shared task (Task 3: Predicting the (Graded) Effect of Context in Word Similarity). In this task, the organizers provided unlabeled datasets for four languages, English, Croatian, Finnish and Slovenian. Our team, JUSTMasters, has participated in this competition in the two subtasks: A and B. Our approach has used a weighted average ensembling method for different pretrained embeddings techniques for each of the four languages. Our proposed model outperformed the baseline models in both subtasks and acheived the best result for subtask 2 in English and Finnish, with score 0.725 and 0.68 respectively. We have been ranked the sixth for subtask 1, with scores for English, Croatian, Finnish, and Slovenian as follows: 0.738, 0.44, 0.546, 0.512.</abstract>
      <url hash="0b3f7007">2020.semeval-1.37</url>
      <bibkey>al-khdour-etal-2020-justmasters</bibkey>
      <doi>10.18653/v1/2020.semeval-1.37</doi>
    </paper>
    <paper id="38">
      <title><fixed-case>W</fixed-case>ill_<fixed-case>G</fixed-case>o at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 3: An Accurate Model for Predicting the (Graded) Effect of Context in Word Similarity Based on <fixed-case>BERT</fixed-case></title>
      <author><first>Wei</first><last>Bao</last></author>
      <author><first>Hongshu</first><last>Che</last></author>
      <author><first>Jiandong</first><last>Zhang</last></author>
      <pages>301–306</pages>
      <abstract>Natural Language Processing (NLP) has been widely used in the semantic analysis in recent years. Our paper mainly discusses a methodology to analyze the effect that context has on human perception of similar words, which is the third task of SemEval 2020. We apply several methods in calculating the distance between two embedding vector generated by Bidirectional Encoder Representation from Transformer (BERT). Our team will go won the 1st place in Finnish language track of subtask1, the second place in English track of subtask1.</abstract>
      <url hash="2cf85893">2020.semeval-1.38</url>
      <bibkey>bao-etal-2020-will</bibkey>
      <doi>10.18653/v1/2020.semeval-1.38</doi>
    </paper>
    <paper id="39">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Commonsense Validation and Explanation</title>
      <author><first>Cunxiang</first><last>Wang</last></author>
      <author><first>Shuailong</first><last>Liang</last></author>
      <author><first>Yili</first><last>Jin</last></author>
      <author><first>Yilong</first><last>Wang</last></author>
      <author><first>Xiaodan</first><last>Zhu</last></author>
      <author><first>Yue</first><last>Zhang</last></author>
      <pages>307–321</pages>
      <abstract>In this paper, we present SemEval-2020 Task 4, Commonsense Validation and Explanation (ComVE), which includes three subtasks, aiming to evaluate whether a system can distinguish a natural language statement that makes sense to humans from one that does not, and provide the reasons. Specifically, in our first subtask, the participating systems are required to choose from two natural language statements of similar wording the one that makes sense and the one does not. The second subtask additionally asks a system to select the key reason from three options why a given statement does not make sense. In the third subtask, a participating system needs to generate the reason automatically. 39 teams submitted their valid systems to at least one subtask. For Subtask A and Subtask B, top-performing teams have achieved results closed to human performance. However, for Subtask C, there is still a considerable gap between system and human performance. The dataset used in our task can be found at https://github.com/wangcunxiang/SemEval2020-Task4-Commonsense-Validation-and-Explanation.</abstract>
      <award>Best Task Honorable Mention</award>
      <url hash="b29ba6e2">2020.semeval-1.39</url>
      <bibkey>wang-etal-2020-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.39</doi>
      <pwccode url="https://github.com/wangcunxiang/SemEval2020-Task4-Commonsense-Validation-and-Explanation" additional="true">wangcunxiang/SemEval2020-Task4-Commonsense-Validation-and-Explanation</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/copa">COPA</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/conceptnet">ConceptNet</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/swag">SWAG</pwcdataset>
    </paper>
    <paper id="40">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Counterfactual Recognition</title>
      <author><first>Xiaoyu</first><last>Yang</last></author>
      <author><first>Stephen</first><last>Obadinma</last></author>
      <author><first>Huasha</first><last>Zhao</last></author>
      <author><first>Qiong</first><last>Zhang</last></author>
      <author><first>Stan</first><last>Matwin</last></author>
      <author><first>Xiaodan</first><last>Zhu</last></author>
      <pages>322–335</pages>
      <abstract>We present a counterfactual recognition (CR) task, the shared Task 5 of SemEval-2020. Counterfactuals describe potential outcomes (consequents) produced by actions or circumstances that did not happen or cannot happen and are counter to the facts (antecedent). Counterfactual thinking is an important characteristic of the human cognitive system; it connects antecedents and consequent with causal relations. Our task provides a benchmark for counterfactual recognition in natural language with two subtasks. Subtask-1 aims to determine whether a given sentence is a counterfactual statement or not. Subtask-2 requires the participating systems to extract the antecedent and consequent in a given counterfactual statement. During the SemEval-2020 official evaluation period, we received 27 submissions to Subtask-1 and 11 to Subtask-2. Our data and baseline code are made publicly available at https://zenodo.org/record/3932442. The task website and leaderboard can be found at https://competitions.codalab.org/competitions/21691.</abstract>
      <url hash="2236f287">2020.semeval-1.40</url>
      <bibkey>yang-etal-2020-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.40</doi>
    </paper>
    <paper id="41">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 6: Definition Extraction from Free Text with the <fixed-case>DEFT</fixed-case> Corpus</title>
      <author><first>Sasha</first><last>Spala</last></author>
      <author><first>Nicholas</first><last>Miller</last></author>
      <author><first>Franck</first><last>Dernoncourt</last></author>
      <author><first>Carl</first><last>Dockhorn</last></author>
      <pages>336–345</pages>
      <abstract>Research on definition extraction has been conducted for well over a decade, largely with significant constraints on the type of definitions considered. In this work, we present DeftEval, a SemEval shared task in which participants must extract definitions from free text using a term-definition pair corpus that reflects the complex reality of definitions in natural language. Definitions and glosses in free text often appear without explicit indicators, across sentences boundaries, or in an otherwise complex linguistic manner. DeftEval involved 3 distinct subtasks: 1) Sentence classification, 2) sequence labeling, and 3) relation extraction.</abstract>
      <url hash="fb203f3c">2020.semeval-1.41</url>
      <bibkey>spala-etal-2020-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.41</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/deft-corpus">DEFT Corpus</pwcdataset>
    </paper>
    <paper id="42">
      <title><fixed-case>IIE</fixed-case>-<fixed-case>NLP</fixed-case>-<fixed-case>NUT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Guiding <fixed-case>PLM</fixed-case> with Prompt Template Reconstruction Strategy for <fixed-case>C</fixed-case>om<fixed-case>VE</fixed-case></title>
      <author><first>Luxi</first><last>Xing</last></author>
      <author><first>Yuqiang</first><last>Xie</last></author>
      <author><first>Yue</first><last>Hu</last></author>
      <author><first>Wei</first><last>Peng</last></author>
      <pages>346–353</pages>
      <abstract>This paper introduces our systems for the first two subtasks of SemEval Task4: Commonsense Validation and Explanation. To clarify the intention for judgment and inject contrastive information for selection, we propose the input reconstruction strategy with prompt templates. Specifically, we formalize the subtasks into the multiple-choice question answering format and construct the input with the prompt templates, then, the final prediction of question answering is considered as the result of subtasks. Experimental results show that our approaches achieve significant performance compared with the baseline systems. Our approaches secure the third rank on both official test sets of the first two subtasks with an accuracy of 96.4 and an accuracy of 94.3 respectively.</abstract>
      <url hash="e64ce198">2020.semeval-1.42</url>
      <bibkey>xing-etal-2020-iie</bibkey>
      <doi>10.18653/v1/2020.semeval-1.42</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/multinli">MultiNLI</pwcdataset>
    </paper>
    <paper id="43">
      <title><fixed-case>HIT</fixed-case>-<fixed-case>SCIR</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Training Pre-trained Language Model with Pseudo-labeling Data for Counterfactuals Detection</title>
      <author><first>Xiao</first><last>Ding</last></author>
      <author><first>Dingkui</first><last>Hao</last></author>
      <author><first>Yuewei</first><last>Zhang</last></author>
      <author><first>Kuo</first><last>Liao</last></author>
      <author><first>Zhongyang</first><last>Li</last></author>
      <author><first>Bing</first><last>Qin</last></author>
      <author><first>Ting</first><last>Liu</last></author>
      <pages>354–360</pages>
      <abstract>We describe our system for Task 5 of SemEval 2020: Modelling Causal Reasoning in Language: Detecting Counterfactuals. Despite deep learning has achieved significant success in many fields, it still hardly drives today’s AI to strong AI, as it lacks of causation, which is a fundamental concept in human thinking and reasoning. In this task, we dedicate to detecting causation, especially counterfactuals from texts. We explore multiple pre-trained models to learn basic features and then fine-tune models with counterfactual data and pseudo-labeling data. Our team HIT-SCIR wins the first place (1st) in Sub-task 1 — Detecting Counterfactual Statements and is ranked 4th in Sub-task 2 — Detecting Antecedent and Consequence. In this paper we provide a detailed description of the approach, as well as the results obtained in this task.</abstract>
      <url hash="06d4962a">2020.semeval-1.43</url>
      <bibkey>ding-etal-2020-hit</bibkey>
      <doi>10.18653/v1/2020.semeval-1.43</doi>
    </paper>
    <paper id="44">
      <title><fixed-case>C</fixed-case>ardiff <fixed-case>U</fixed-case>niversity at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 6: Fine-tuning <fixed-case>BERT</fixed-case> for Domain-Specific Definition Classification</title>
      <author><first>Shelan</first><last>Jeawak</last></author>
      <author><first>Luis</first><last>Espinosa-Anke</last></author>
      <author><first>Steven</first><last>Schockaert</last></author>
      <pages>361–366</pages>
      <abstract>We describe the system submitted to SemEval-2020 Task 6, Subtask 1. The aim of this subtask is to predict whether a given sentence contains a definition or not. Unsurprisingly, we found that strong results can be achieved by fine-tuning a pre-trained BERT language model. In this paper, we analyze the performance of this strategy. Among others, we show that results can be improved by using a two-step fine-tuning process, in which the BERT model is first fine-tuned on the full training set, and then further specialized towards a target domain.</abstract>
      <url hash="dcc61993">2020.semeval-1.44</url>
      <bibkey>jeawak-etal-2020-cardiff</bibkey>
      <doi>10.18653/v1/2020.semeval-1.44</doi>
    </paper>
    <paper id="45">
      <title><fixed-case>ANA</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: <fixed-case>MU</fixed-case>lti-task lear<fixed-case>NI</fixed-case>ng for c<fixed-case>O</fixed-case>mmonsense reaso<fixed-case>N</fixed-case>ing (<fixed-case>UNION</fixed-case>)</title>
      <author><first>Anandh</first><last>Konar</last></author>
      <author><first>Chenyang</first><last>Huang</last></author>
      <author><first>Amine</first><last>Trabelsi</last></author>
      <author><first>Osmar</first><last>Zaiane</last></author>
      <pages>367–373</pages>
      <abstract>In this paper, we describe our mUlti-task learNIng for cOmmonsense reasoNing (UNION) system submitted for Task C of the SemEval2020 Task 4, which is to generate a reason explaining why a given false statement is non-sensical. However, we found in the early experiments that simple adaptations such as fine-tuning GPT2 often yield dull and non-informative generations (e.g. simple negations). In order to generate more meaningful explanations, we propose UNION, a unified end-to-end framework, to utilize several existing commonsense datasets so that it allows a model to learn more dynamics under the scope of commonsense reasoning. In order to perform model selection efficiently, accurately, and promptly, we also propose a couple of auxiliary automatic evaluation metrics so that we can extensively compare the models from different perspectives. Our submitted system not only results in a good performance in the proposed metrics but also outperforms its competitors with the highest achieved score of 2.10 for human evaluation while remaining a BLEU score of 15.7. Our code is made publicly available.</abstract>
      <url hash="32e36869">2020.semeval-1.45</url>
      <bibkey>konar-etal-2020-ana</bibkey>
      <doi>10.18653/v1/2020.semeval-1.45</doi>
      <pwccode url="https://github.com/anandhperumal/ANA-at-SemEval-2020-Task-4-UNION" additional="false">anandhperumal/ANA-at-SemEval-2020-Task-4-UNION</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/cos-e">CoS-E</pwcdataset>
    </paper>
    <paper id="46">
      <title><fixed-case>BUT</fixed-case>-<fixed-case>FIT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Multilingual Commonsense</title>
      <author><first>Josef</first><last>Jon</last></author>
      <author><first>Martin</first><last>Fajcik</last></author>
      <author><first>Martin</first><last>Docekal</last></author>
      <author><first>Pavel</first><last>Smrz</last></author>
      <pages>374–390</pages>
      <abstract>We participated in all three subtasks. In subtasks A and B, our submissions are based on pretrained language representation models (namely ALBERT) and data augmentation. We experimented with solving the task for another language, Czech, by means of multilingual models and machine translated dataset, or translated model inputs. We show that with a strong machine translation system, our system can be used in another language with a small accuracy loss. In subtask C, our submission, which is based on pretrained sequence-to-sequence model (BART), ranked 1st in BLEU score ranking, however, we show that the correlation between BLEU and human evaluation, in which our submission ended up 4th, is low. We analyse the metrics used in the evaluation and we propose an additional score based on model from subtask B, which correlates well with our manual ranking, as well as reranking method based on the same principle. We performed an error and dataset analysis for all subtasks and we present our findings.</abstract>
      <url hash="ab673fcf">2020.semeval-1.46</url>
      <bibkey>jon-etal-2020-fit</bibkey>
      <doi>10.18653/v1/2020.semeval-1.46</doi>
      <pwccode url="https://github.com/cepin19/semeval2020_task4" additional="false">cepin19/semeval2020_task4</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/commonsenseqa">CommonsenseQA</pwcdataset>
    </paper>
    <paper id="47">
      <title><fixed-case>CUHK</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: <fixed-case>C</fixed-case>ommon<fixed-case>S</fixed-case>ense Explanation, Reasoning and Prediction with Multi-task Learning</title>
      <author><first>Hongru</first><last>Wang</last></author>
      <author><first>Xiangru</first><last>Tang</last></author>
      <author><first>Sunny</first><last>Lai</last></author>
      <author><first>Kwong Sak</first><last>Leung</last></author>
      <author><first>Jia</first><last>Zhu</last></author>
      <author><first>Gabriel Pui Cheong</first><last>Fung</last></author>
      <author><first>Kam-Fai</first><last>Wong</last></author>
      <pages>391–400</pages>
      <abstract>This paper describes our system submitted to task 4 of SemEval 2020: Commonsense Validation and Explanation (ComVE) which consists of three sub-tasks. The task is to directly validate the given sentence whether or not to make sense and require the model to explain it. Based on BERT architecture with the multi-task setting, we propose an effective and interpretable “Explain, Reason and Predict” (ERP) system to solve the three sub-tasks about commonsense: (a) Validation, (b) Reasoning, and (c) Explanation. Inspired by cognitive studies of common sense, our system first generates a reason or understanding of the sentences and then choose which one statement makes sense, which is achieved by multi-task learning. During the post-evaluation, our system has reached 92.9% accuracy in subtask A (rank 11), 89.7% accuracy in subtask B (rank 9), and BLEU score of 12.9 in subtask C (rank 8).</abstract>
      <url hash="e82e4b8e">2020.semeval-1.47</url>
      <bibkey>wang-etal-2020-cuhk</bibkey>
      <doi>10.18653/v1/2020.semeval-1.47</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/conceptnet">ConceptNet</pwcdataset>
    </paper>
    <paper id="48">
      <title><fixed-case>ECNU</fixed-case>-<fixed-case>S</fixed-case>ense<fixed-case>M</fixed-case>aker at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Leveraging Heterogeneous Knowledge Resources for Commonsense Validation and Explanation</title>
      <author><first>Qian</first><last>Zhao</last></author>
      <author><first>Siyu</first><last>Tao</last></author>
      <author><first>Jie</first><last>Zhou</last></author>
      <author><first>Linlin</first><last>Wang</last></author>
      <author><first>Xin</first><last>Lin</last></author>
      <author><first>Liang</first><last>He</last></author>
      <pages>401–410</pages>
      <abstract>This paper describes our system for SemEval-2020 Task 4: Commonsense Validation and Explanation (Wang et al., 2020). We propose a novel Knowledge-enhanced Graph Attention Network (KEGAT) architecture for this task, leveraging heterogeneous knowledge from both the structured knowledge base (i.e. ConceptNet) and unstructured text to better improve the ability of a machine in commonsense understanding. This model has a powerful commonsense inference capability via utilizing suitable commonsense incorporation methods and upgraded data augmentation techniques. Besides, an internal sharing mechanism is cooperated to prohibit our model from insufficient and excessive reasoning for commonsense. As a result, this model performs quite well in both validation and explanation. For instance, it achieves state-of-the-art accuracy in the subtask called Commonsense Explanation (Multi-Choice). We officially name the system as ECNU-SenseMaker. Code is publicly available at https://github.com/ECNU-ICA/ECNU-SenseMaker.</abstract>
      <url hash="b99d516f">2020.semeval-1.48</url>
      <bibkey>zhao-etal-2020-ecnu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.48</doi>
      <pwccode url="https://github.com/ECNU-ICA/ECNU-SenseMaker" additional="false">ECNU-ICA/ECNU-SenseMaker</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/commonsenseqa">CommonsenseQA</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/conceptnet">ConceptNet</pwcdataset>
    </paper>
    <paper id="49">
      <title>Masked Reasoner at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Fine-Tuning <fixed-case>R</fixed-case>o<fixed-case>BERT</fixed-case>a for Commonsense Reasoning</title>
      <author><first>Daming</first><last>Lu</last></author>
      <pages>411–414</pages>
      <abstract>This paper describes the masked reasoner system that participated in SemEval-2020 Task 4: Commonsense Validation and Explanation. The system participated in the subtask B.We proposes a novel method to fine-tune RoBERTa by masking the most important word in the statement. We believe that the confidence of the system in recovering that word is positively correlated to the score the masked language model gives to the current statement-explanation pair. We evaluate the importance of each word using InferSent and do the masked fine-tuning on RoBERTa. Then we use the fine-tuned model to predict the most plausible explanation. Our system is fast in training and achieved 73.5% accuracy.</abstract>
      <url hash="eb1a8361">2020.semeval-1.49</url>
      <bibkey>lu-2020-masked</bibkey>
      <doi>10.18653/v1/2020.semeval-1.49</doi>
    </paper>
    <paper id="50">
      <title><fixed-case>Q</fixed-case>iao<fixed-case>N</fixed-case>ing at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Commonsense Validation and Explanation System Based on Ensemble of Language Model</title>
      <author><first>Liu</first><last>Pai</last></author>
      <pages>415–421</pages>
      <abstract>The ability of common sense validation and explanation is very important for most models. Most obviously, this will directly affect the rationality of the generated model output. The large amount and diversity of common sense poses great challenges to this task. In addition, many common sense expressions are obscure, thus we need to understand the meaning contained in the vocabulary in order to judge correctly, which further increases the model’s requirements for the accuracy of word representation. The current neural network models are often data-driven, while the annotated data is often limited and requires a lot of manual labeling. In such case, we proposed transfer learning to handle this challenge. From our experiments, we can draw the following three main conclusions: a) Neural language model fully qualified for commonsense validation and explanation. We attribute this to the powerful word and sentence representation capabilities of language models. b) The inconsistency of task of pre-training and fine-tuning will badly hurt the performance. c) A larger amount of corpus and more parameters will enhance the common sense of the model. At the same time, the content of the corpus is equally important.</abstract>
      <url hash="fd5ff35e">2020.semeval-1.50</url>
      <bibkey>pai-2020-qiaoning</bibkey>
      <doi>10.18653/v1/2020.semeval-1.50</doi>
    </paper>
    <paper id="51">
      <title><fixed-case>SWAG</fixed-case>ex at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Commonsense Explanation as Next Event Prediction</title>
      <author><first>Wiem</first><last>Ben Rim</last></author>
      <author><first>Naoaki</first><last>Okazaki</last></author>
      <pages>422–429</pages>
      <abstract>We describe the system submitted by the SWAGex team to the SemEval-2020 Commonsense Validation and Explanation Task. We use multiple methods on the pre-trained language model BERT (Devlin et al., 2018) for tasks that require the system to recognize sentences against commonsense and justify the reasoning behind this decision. Our best performing model is BERT trained on SWAG and fine-tuned for the task. We investigate the ability to transfer commonsense knowledge from SWAG to SemEval-2020 by training a model for the Explanation task with Next Event Prediction data</abstract>
      <url hash="17d6df57">2020.semeval-1.51</url>
      <bibkey>ben-rim-okazaki-2020-swagex</bibkey>
      <doi>10.18653/v1/2020.semeval-1.51</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/swag">SWAG</pwcdataset>
    </paper>
    <paper id="52">
      <title><fixed-case>U</fixed-case>o<fixed-case>R</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Pre-trained Sentence Transformer Models for Commonsense Validation and Explanation</title>
      <author><first>Thanet</first><last>Markchom</last></author>
      <author><first>Bhuvana</first><last>Dhruva</last></author>
      <author><first>Chandresh</first><last>Pravin</last></author>
      <author><first>Huizhi</first><last>Liang</last></author>
      <pages>430–436</pages>
      <abstract>SemEval Task 4 Commonsense Validation and Explanation Challenge is to validate whether a system can differentiate natural language statements that make sense from those that do not make sense. Two subtasks, A and B, are focused in this work, i.e., detecting against-common-sense statements and selecting explanations of why they are false from the given options. Intuitively, commonsense validation requires additional knowledge beyond the given statements. Therefore, we propose a system utilising pre-trained sentence transformer models based on BERT, RoBERTa and DistillBERT architectures to embed the statements before classification. According to the results, these embeddings can improve the performance of the typical MLP and LSTM classifiers as downstream models of both subtasks compared to regular tokenised statements. These embedded statements are shown to comprise additional information from external resources which help validate common sense in natural language.</abstract>
      <url hash="4da66650">2020.semeval-1.52</url>
      <bibkey>markchom-etal-2020-uor</bibkey>
      <doi>10.18653/v1/2020.semeval-1.52</doi>
    </paper>
    <paper id="53">
      <title><fixed-case>BUT</fixed-case>-<fixed-case>FIT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Automatic Detection of Counterfactual Statements with Deep Pre-trained Language Representation Models</title>
      <author><first>Martin</first><last>Fajcik</last></author>
      <author><first>Josef</first><last>Jon</last></author>
      <author><first>Martin</first><last>Docekal</last></author>
      <author><first>Pavel</first><last>Smrz</last></author>
      <pages>437–444</pages>
      <abstract>This paper describes BUT-FIT’s submission at SemEval-2020 Task 5: Modelling Causal Reasoning in Language: Detecting Counterfactuals. The challenge focused on detecting whether a given statement contains a counterfactual (Subtask 1) and extracting both antecedent and consequent parts of the counterfactual from the text (Subtask 2). We experimented with various state-of-the-art language representation models (LRMs). We found RoBERTa LRM to perform the best in both subtasks. We achieved the first place in both exact match and F1 for Subtask 2 and ranked second for Subtask 1.</abstract>
      <url hash="cf93293d">2020.semeval-1.53</url>
      <bibkey>fajcik-etal-2020-fit</bibkey>
      <doi>10.18653/v1/2020.semeval-1.53</doi>
      <pwccode url="https://github.com/MFajcik/SemEval_2020_Task-5" additional="false">MFajcik/SemEval_2020_Task-5</pwccode>
    </paper>
    <paper id="54">
      <title><fixed-case>CL</fixed-case>a<fixed-case>C</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Muli-task Stacked <fixed-case>B</fixed-case>i-<fixed-case>LSTM</fixed-case>s</title>
      <author><first>MinGyou</first><last>Sung</last></author>
      <author><first>Parsa</first><last>Bagherzadeh</last></author>
      <author><first>Sabine</first><last>Bergler</last></author>
      <pages>445–450</pages>
      <abstract>We consider detection of the span of antecedents and consequents in argumentative prose a structural, grammatical task. Our system comprises a set of stacked Bi-LSTMs trained on two complementary linguistic annotations. We explore the effectiveness of grammatical features (POS and clause type) through ablation. The reported experiments suggest that a multi-task learning approach using this external, grammatical knowledge is useful for detecting the extent of antecedents and consequents and performs nearly as well without the use of word embeddings.</abstract>
      <url hash="1561b389">2020.semeval-1.54</url>
      <bibkey>sung-etal-2020-clac</bibkey>
      <doi>10.18653/v1/2020.semeval-1.54</doi>
    </paper>
    <paper id="55">
      <title><fixed-case>CNRL</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Modelling Causal Reasoning in Language with Multi-Head Self-Attention Weights Based Counterfactual Detection</title>
      <author><first>Rajaswa</first><last>Patil</last></author>
      <author><first>Veeky</first><last>Baths</last></author>
      <pages>451–457</pages>
      <abstract>In this paper, we describe an approach for modelling causal reasoning in natural language by detecting counterfactuals in text using multi-head self-attention weights. We use pre-trained transformer models to extract contextual embeddings and self-attention weights from the text. We show the use of convolutional layers to extract task-specific features from these self-attention weights. Further, we describe a fine-tuning approach with a common base model for knowledge sharing between the two closely related sub-tasks for counterfactual detection. We analyze and compare the performance of various transformer models in our experiments. Finally, we perform a qualitative analysis with the multi-head self-attention weights to interpret our models’ dynamics.</abstract>
      <url hash="e1d94bdc">2020.semeval-1.55</url>
      <bibkey>patil-baths-2020-cnrl</bibkey>
      <doi>10.18653/v1/2020.semeval-1.55</doi>
    </paper>
    <paper id="56">
      <title><fixed-case>IITK</fixed-case>-<fixed-case>RSA</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Detecting Counterfactuals</title>
      <author><first>Anirudh Anil</first><last>Ojha</last></author>
      <author><first>Rohin</first><last>Garg</last></author>
      <author><first>Shashank</first><last>Gupta</last></author>
      <author><first>Ashutosh</first><last>Modi</last></author>
      <pages>458–467</pages>
      <abstract>This paper describes our efforts in tackling Task 5 of SemEval-2020. The task involved detecting a class of textual expressions known as counterfactuals and separating them into their constituent elements. Our final submitted approaches were an ensemble of various fine-tuned transformer-based and CNN-based models for the first subtask and a transformer model with dependency tree information for the second subtask. We ranked 4-th and 9-th in the overall leaderboard. We also explored various other approaches that involved classical methods, other neural architectures and incorporation of different linguistic features.</abstract>
      <url hash="2582a77f">2020.semeval-1.56</url>
      <bibkey>ojha-etal-2020-iitk</bibkey>
      <doi>10.18653/v1/2020.semeval-1.56</doi>
    </paper>
    <paper id="57">
      <title>Yseop at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Cascaded <fixed-case>BERT</fixed-case> Language Model for Counterfactual Statement Analysis</title>
      <author><first>Hanna</first><last>Abi-Akl</last></author>
      <author><first>Dominique</first><last>Mariko</last></author>
      <author><first>Estelle</first><last>Labidurie</last></author>
      <pages>468–478</pages>
      <abstract>In this paper, we explore strategies to detect and evaluate counterfactual sentences. We describe our system for SemEval-2020 Task 5: Modeling Causal Reasoning in Language: Detecting Counterfactuals. We use a BERT base model for the classification task and build a hybrid BERT Multi-Layer Perceptron system to handle the sequence identification task. Our experiments show that while introducing syntactic and semantic features does little in improving the system in the classification task, using these types of features as cascaded linear inputs to fine-tune the sequence-delimiting ability of the model ensures it outperforms other similar-purpose complex systems like BiLSTM-CRF in the second task. Our system achieves an F1 score of 85.00% in Task 1 and 83.90% in Task 2.</abstract>
      <url hash="d9e22341">2020.semeval-1.57</url>
      <bibkey>abi-akl-etal-2020-yseop</bibkey>
      <doi>10.18653/v1/2020.semeval-1.57</doi>
    </paper>
    <paper id="58">
      <title><fixed-case>ACNLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 6: A Supervised Approach for Definition Extraction</title>
      <author><first>Fabien</first><last>Caspani</last></author>
      <author><first>Pirashanth</first><last>Ratnamogan</last></author>
      <author><first>Mathis</first><last>Linger</last></author>
      <author><first>Mhamed</first><last>Hajaiej</last></author>
      <pages>479–486</pages>
      <abstract>We describe our contribution to two of the subtasks of SemEval 2020 Task 6, DeftEval: Extracting term-definition pairs in free text. The system for Subtask 1: Sentence Classification is based on a transformer architecture where we use transfer learning to fine-tune a pretrained model on the downstream task, and the one for Subtask 3: Relation Classification uses a Random Forest classifier with handcrafted dedicated features. Our systems respectively achieve 0.830 and 0.994 F1-scores on the official test set, and we believe that the insights derived from our study are potentially relevant to help advance the research on definition extraction.</abstract>
      <url hash="371695b1">2020.semeval-1.58</url>
      <bibkey>caspani-etal-2020-acnlp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.58</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/deft-corpus">DEFT Corpus</pwcdataset>
    </paper>
    <paper id="59">
      <title>Gorynych Transformer at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 6: Multi-task Learning for Definition Extraction</title>
      <author><first>Adis</first><last>Davletov</last></author>
      <author><first>Nikolay</first><last>Arefyev</last></author>
      <author><first>Alexander</first><last>Shatilov</last></author>
      <author><first>Denis</first><last>Gordeev</last></author>
      <author><first>Alexey</first><last>Rey</last></author>
      <pages>487–493</pages>
      <abstract>This paper describes our approach to “DeftEval: Extracting Definitions from Free Text in Textbooks” competition held as a part of Semeval 2020. The task was devoted to finding and labeling definitions in texts. DeftEval was split into three subtasks: sentence classification, sequence labeling and relation classification. Our solution ranked 5th in the first subtask and 23rd and 21st in the second and the third subtasks respectively. We applied simultaneous multi-task learning with Transformer-based models for subtasks 1 and 3 and a single BERT-based model for named entity recognition.</abstract>
      <url hash="8779770f">2020.semeval-1.59</url>
      <bibkey>davletov-etal-2020-gorynych</bibkey>
      <doi>10.18653/v1/2020.semeval-1.59</doi>
    </paper>
    <paper id="60">
      <title><fixed-case>CN</fixed-case>-<fixed-case>HIT</fixed-case>-<fixed-case>IT</fixed-case>.<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Enhanced Language Representation with Multiple Knowledge Triples</title>
      <author><first>Yice</first><last>Zhang</last></author>
      <author><first>Jiaxuan</first><last>Lin</last></author>
      <author><first>Yang</first><last>Fan</last></author>
      <author><first>Peng</first><last>Jin</last></author>
      <author><first>Yuanchao</first><last>Liu</last></author>
      <author><first>Bingquan</first><last>Liu</last></author>
      <pages>494–500</pages>
      <abstract>This paper describes our system that participated in the SemEval-2020 task 4: Commonsense Validation and Explanation. For this task, it is obvious that external knowledge, such as Knowledge graph, can help the model understand commonsense in natural language statements. But how to select the right triples for statements remains unsolved, so how to reduce the interference of irrelevant triples on model performance is a research focus. This paper adopt a modified K-BERT as the language encoder, to enhance language representation through triples from knowledge graphs. Experiments show that our method is better than models without external knowledge, and is slightly better than the original K-BERT. We got an accuracy score of 0.97 in subtaskA, ranking 1/45, and got an accuracy score of 0.948, ranking 2/35.</abstract>
      <url hash="c18d8eff">2020.semeval-1.60</url>
      <bibkey>zhang-etal-2020-cn</bibkey>
      <doi>10.18653/v1/2020.semeval-1.60</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/conceptnet">ConceptNet</pwcdataset>
    </paper>
    <paper id="61">
      <title><fixed-case>CS</fixed-case>-<fixed-case>NET</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: <fixed-case>S</fixed-case>iamese <fixed-case>BERT</fixed-case> for <fixed-case>C</fixed-case>om<fixed-case>VE</fixed-case></title>
      <author><first>Soumya Ranjan</first><last>Dash</last></author>
      <author><first>Sandeep</first><last>Routray</last></author>
      <author><first>Prateek</first><last>Varshney</last></author>
      <author><first>Ashutosh</first><last>Modi</last></author>
      <pages>501–506</pages>
      <abstract>In this paper, we describe our system for Task 4 of SemEval 2020, which involves differentiating between natural language statements that conform to common sense and those that do not. The organizers propose three subtasks - first, selecting between two sentences, the one which is against common sense. Second, identifying the most crucial reason why a statement does not make sense. Third, generating novel reasons for explaining the against common sense statement. Out of the three subtasks, this paper reports the system description of subtask A and subtask B. This paper proposes a model based on transformer neural network architecture for addressing the subtasks. The novelty in work lies in the architecture design, which handles the logical implication of contradicting statements and simultaneous information extraction from both sentences. We use a parallel instance of transformers, which is responsible for a boost in the performance. We achieved an accuracy of 94.8% in subtask A and 89% in subtask B on the test set.</abstract>
      <url hash="9d8eb95e">2020.semeval-1.61</url>
      <bibkey>dash-etal-2020-cs</bibkey>
      <doi>10.18653/v1/2020.semeval-1.61</doi>
      <pwccode url="https://github.com/soumyardash/SemEval2020-Task4" additional="false">soumyardash/SemEval2020-Task4</pwccode>
    </paper>
    <paper id="62">
      <title><fixed-case>CS</fixed-case>-<fixed-case>NLP</fixed-case> Team at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Evaluation of State-of-the-art <fixed-case>NLP</fixed-case> Deep Learning Architectures on Commonsense Reasoning Task</title>
      <author><first>Sirwe</first><last>Saeedi</last></author>
      <author><first>Aliakbar</first><last>Panahi</last></author>
      <author><first>Seyran</first><last>Saeedi</last></author>
      <author><first>Alvis</first><last>C Fong</last></author>
      <pages>507–515</pages>
      <abstract>In this paper, we investigate a commonsense inference task that unifies natural language understanding and commonsense reasoning. We describe our attempt at SemEval-2020 Task 4 competition: Commonsense Validation and Explanation (ComVE) challenge. We discuss several state-of-the-art deep learning architectures for this challenge. Our system uses prepared labeled textual datasets that were manually curated for three different natural language inference subtasks. The goal of the first subtask is to test whether a model can distinguish between natural language statements that make sense and those that do not make sense. We compare the performance of several language models and fine-tuned classifiers. Then, we propose a method inspired by question/answering tasks to treat a classification problem as a multiple choice question task to boost the performance of our experimental results (96.06%), which is significantly better than the baseline. For the second subtask, which is to select the reason why a statement does not make sense, we stand within the first six teams (93.7%) among 27 participants with very competitive results. Our result for last subtask of generating reason against the nonsense statement shows many potentials for future researches as we applied the most powerful generative model of language (GPT-2) with 6.1732 BLEU score among first four teams. .</abstract>
      <url hash="51abcbf9">2020.semeval-1.62</url>
      <bibkey>saeedi-etal-2020-cs</bibkey>
      <doi>10.18653/v1/2020.semeval-1.62</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/glue">GLUE</pwcdataset>
    </paper>
    <paper id="63">
      <title><fixed-case>DEEPYANG</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Using the Hidden Layer State of <fixed-case>BERT</fixed-case> Model for Differentiating Common Sense</title>
      <author><first>Yang</first><last>Bai</last></author>
      <author><first>Xiaobing</first><last>Zhou</last></author>
      <pages>516–520</pages>
      <abstract>Introducing common sense to natural language understanding systems has received increasing research attention. To facilitate the researches on common sense reasoning, the SemEval-2020 Task 4 Commonsense Validation and Explanation(ComVE) is proposed. We participate in sub-task A and try various methods including traditional machine learning methods, deep learning methods, and also recent pre-trained language models. Finally, we concatenate the original output of BERT and the output vector of BERT hidden layer state to obtain more abundant semantic information features, and obtain competitive results. Our model achieves an accuracy of 0.8510 in the final test data and ranks 25th among all the teams.</abstract>
      <url hash="dede04fe">2020.semeval-1.63</url>
      <bibkey>bai-zhou-2020-deepyang</bibkey>
      <doi>10.18653/v1/2020.semeval-1.63</doi>
    </paper>
    <paper id="64">
      <title><fixed-case>HR</fixed-case>@<fixed-case>JUST</fixed-case> Team at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: The Impact of <fixed-case>R</fixed-case>o<fixed-case>BERT</fixed-case>a Transformer for Evaluation Common Sense Understanding</title>
      <author><first>Heba</first><last>Al-Jarrah</last></author>
      <author><first>Rahaf</first><last>Al-Hamouri</last></author>
      <author><first>Mohammad</first><last>AL-Smadi</last></author>
      <pages>521–526</pages>
      <abstract>This paper describes the results of our team HR@JUST participation at SemEval-2020 Task 4 - Commonsense Validation and Explanation (ComVE) for POST evaluation period. The provided task consists of three sub-tasks, we participate in task A. We considered a state-of-the-art approach for solving this task by performing RoBERTa model with no Next Sentences Prediction (NSP), dynamic masking, larger training data, and larger batch size. The achieved results show that we got the 11th rank on the final test set leaderboard with an accuracy of 91.3%.</abstract>
      <url hash="1453cbec">2020.semeval-1.64</url>
      <bibkey>al-jarrah-etal-2020-hr</bibkey>
      <doi>10.18653/v1/2020.semeval-1.64</doi>
    </paper>
    <paper id="65">
      <title><fixed-case>JBNU</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: <fixed-case>BERT</fixed-case> and <fixed-case>U</fixed-case>ni<fixed-case>LM</fixed-case> for Commonsense Validation and Explanation</title>
      <author><first>Seung-Hoon</first><last>Na</last></author>
      <author><first>Jong-Hyeon</first><last>Lee</last></author>
      <pages>527–534</pages>
      <abstract>This paper presents our contributions to the SemEval-2020 Task 4 Commonsense Validation and Explanation (ComVE) and includes the experimental results of the two Subtasks B and C of the SemEval-2020 Task 4. Our systems rely on pre-trained language models, i.e., BERT (including its variants) and UniLM, and rank 10th and 7th among 27 and 17 systems on Subtasks B and C, respectively. We analyze the commonsense ability of the existing pretrained language models by testing them on the SemEval-2020 Task 4 ComVE dataset, specifically for Subtasks B and C, the explanation subtasks with multi-choice and sentence generation, respectively.</abstract>
      <url hash="d61d668f">2020.semeval-1.65</url>
      <bibkey>na-lee-2020-jbnu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.65</doi>
    </paper>
    <paper id="66">
      <title><fixed-case>JUST</fixed-case>ers at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Evaluating Transformer Models against Commonsense Validation and Explanation</title>
      <author><first>Ali</first><last>Fadel</last></author>
      <author><first>Mahmoud</first><last>Al-Ayyoub</last></author>
      <author><first>Erik</first><last>Cambria</last></author>
      <pages>535–542</pages>
      <abstract>In this paper, we describe our team’s (JUSTers) effort in the Commonsense Validation and Explanation (ComVE) task, which is part of SemEval2020. We evaluate five pre-trained Transformer-based language models with various sizes against the three proposed subtasks. For the first two subtasks, the best accuracy levels achieved by our models are 92.90% and 92.30%, respectively, placing our team in the 12th and 9th places, respectively. As for the last subtask, our models reach 16.10 BLEU score and 1.94 human evaluation score placing our team in the 5th and 3rd places according to these two metrics, respectively. The latter is only 0.16 away from the 1st place human evaluation score.</abstract>
      <url hash="8a09c854">2020.semeval-1.66</url>
      <bibkey>fadel-etal-2020-justers</bibkey>
      <doi>10.18653/v1/2020.semeval-1.66</doi>
    </paper>
    <paper id="67">
      <title><fixed-case>K</fixed-case>a<fixed-case>LM</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Knowledge-aware Language Models for Comprehension and Generation</title>
      <author><first>Jiajing</first><last>Wan</last></author>
      <author><first>Xinting</first><last>Huang</last></author>
      <pages>543–550</pages>
      <abstract>This paper presents our strategies in SemEval 2020 Task 4: Commonsense Validation and Explanation. We propose a novel way to search for evidence and choose the different large-scale pre-trained models as the backbone for three subtasks. The results show that our evidence-searching approach improves model performance on commonsense explanation task. Our team ranks 2nd in subtask C according to human evaluation score.</abstract>
      <url hash="9c03f3cc">2020.semeval-1.67</url>
      <bibkey>wan-huang-2020-kalm</bibkey>
      <doi>10.18653/v1/2020.semeval-1.67</doi>
      <pwccode url="https://github.com/huangxt39/KaLM" additional="false">huangxt39/KaLM</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/commonsenseqa">CommonsenseQA</pwcdataset>
    </paper>
    <paper id="68">
      <title><fixed-case>KDE</fixed-case> <fixed-case>S</fixed-case>ense<fixed-case>F</fixed-case>orce at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Exploiting <fixed-case>BERT</fixed-case> for Commonsense Validation and Explanation</title>
      <author><first>Khanddorj</first><last>Mendbayar</last></author>
      <author><first>Masaki</first><last>Aono</last></author>
      <pages>551–555</pages>
      <abstract>Using a natural language understanding system for commonsense comprehension is getting increasing attention from researchers. Current multi-purpose state-of-the-art models suffer on commonsense validation and explanation tasks. We have adopted one of the state-of-the-art models and proposing a method to boost the performance of the model in commonsense related tasks.</abstract>
      <url hash="206032fe">2020.semeval-1.68</url>
      <bibkey>mendbayar-aono-2020-kde</bibkey>
      <doi>10.18653/v1/2020.semeval-1.68</doi>
    </paper>
    <paper id="69">
      <title>Lijunyi at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: An <fixed-case>ALBERT</fixed-case> Model Based Maximum Ensemble with Different Training Sizes and Depths for Commonsense Validation and Explanation</title>
      <author><first>Junyi</first><last>Li</last></author>
      <author><first>Bin</first><last>Wang</last></author>
      <author><first>Haiyan</first><last>Ding</last></author>
      <pages>556–561</pages>
      <abstract>This article describes the system submitted to SemEval 2020 Task 4: Commonsense Validation and Explanation. We only participated in the subtask A, which is mainly to distinguish whether the sentence has meaning. To solve this task, we mainly used ALBERT model-based maximum ensemble with different training sizes and depths. To prove the validity of the model to the task, we also used some other neural network models for comparison. Our model achieved the accuracy score of 0.938(ranked 10/41) in subtask A.</abstract>
      <url hash="9b804ec7">2020.semeval-1.69</url>
      <bibkey>li-etal-2020-lijunyi</bibkey>
      <doi>10.18653/v1/2020.semeval-1.69</doi>
    </paper>
    <paper id="70">
      <title><fixed-case>LMVE</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Commonsense Validation and Explanation Using Pretraining Language Model</title>
      <author><first>Shilei</first><last>Liu</last></author>
      <author><first>Yu</first><last>Guo</last></author>
      <author><first>BoChao</first><last>Li</last></author>
      <author><first>Feiliang</first><last>Ren</last></author>
      <pages>562–568</pages>
      <abstract>This paper introduces our system for commonsense validation and explanation. For Sen-Making task, we use a novel pretraining language model based architecture to pick out one of the two given statements that is againstcommon sense. For Explanation task, we use a hint sentence mechanism to improve the performance greatly. In addition, we propose a subtask level transfer learning to share information between subtasks.</abstract>
      <url hash="07b413d2">2020.semeval-1.70</url>
      <bibkey>liu-etal-2020-lmve</bibkey>
      <doi>10.18653/v1/2020.semeval-1.70</doi>
    </paper>
    <paper id="71">
      <title>Mxgra at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Common Sense Making with Next Token Prediction</title>
      <author><first>Kris</first><last>Collins</last></author>
      <author><first>Max</first><last>Grathwohl</last></author>
      <author><first>Heba</first><last>Ahmed</last></author>
      <pages>569–573</pages>
      <abstract>In this paper, we explore solutions to a common sense making task in which a model must discern which of two sentences is against common sense. We used a pre-trained language model which we used to calculate complexity scores for input to discern which sentence contained an unlikely sequence of tokens. Other approaches we tested were word vector distances, which were used to find semantic outliers within a sentence, and siamese network. By using the pre-trained language model to calculate perplexity scores based on the sequence of tokens in input sentences, we achieved an accuracy of 75 percent.</abstract>
      <url hash="c2acbcfe">2020.semeval-1.71</url>
      <bibkey>collins-etal-2020-mxgra</bibkey>
      <doi>10.18653/v1/2020.semeval-1.71</doi>
    </paper>
    <paper id="72">
      <title><fixed-case>NLP</fixed-case>@<fixed-case>JUST</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Ensemble Technique for <fixed-case>BERT</fixed-case> and Roberta to Evaluate Commonsense Validation</title>
      <author><first>Emran</first><last>Al-Bashabsheh</last></author>
      <author><first>Ayah</first><last>Abu Aqouleh</last></author>
      <author><first>Mohammad</first><last>AL-Smadi</last></author>
      <pages>574–579</pages>
      <abstract>This paper presents the work of the NLP@JUST team at SemEval-2020 Task 4 competition that related to commonsense validation and explanation (ComVE) task. The team participates in sub-taskA (Validation) which related to validation that checks if the text is against common sense or not. Several models have trained (<i>i.e. Bert, XLNet, and Roberta</i>), however, the main models used are the RoBERTa-large and BERT Whole word masking. As well as, we utilized the results from both models to generate final prediction by using the average Ensemble technique, that used to improve the overall performance. The evaluation result shows that the implemented model achieved an accuracy of 93.9% obtained and published at the post-evaluation result on the leaderboard.</abstract>
      <url hash="12abf857">2020.semeval-1.72</url>
      <bibkey>al-bashabsheh-etal-2020-nlp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.72</doi>
    </paper>
    <paper id="73">
      <title><fixed-case>SSN</fixed-case>-<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Text Classification and Generation on Common Sense Context Using Neural Networks</title>
      <author><first>Rishivardhan</first><last>K.</last></author>
      <author><first>Kayalvizhi</first><last>S</last></author>
      <author><first>Thenmozhi</first><last>D.</last></author>
      <author><first>Raghav</first><last>R.</last></author>
      <author><first>Kshitij</first><last>Sharma</last></author>
      <pages>580–584</pages>
      <abstract>Common sense validation deals with testing whether a system can differentiate natural language statements that make sense from those that do not make sense. This paper describes the our approach to solve this challenge. For common sense validation with multi choice, we propose a stacking based approach to classify sentences that are more favourable in terms of common sense to the particular statement. We have used majority voting classifier methodology amongst three models such as Bidirectional Encoder Representations from Transformers (BERT), Micro Text Classification (Micro TC) and XLNet. For sentence generation, we used Neural Machine Translation (NMT) model to generate explanatory sentences.</abstract>
      <url hash="19903604">2020.semeval-1.73</url>
      <bibkey>k-etal-2020-ssn</bibkey>
      <doi>10.18653/v1/2020.semeval-1.73</doi>
    </paper>
    <paper id="74">
      <title>Team <fixed-case>S</fixed-case>olomon at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Be Reasonable: Exploiting Large-scale Language Models for Commonsense Reasoning</title>
      <author><first>Vertika</first><last>Srivastava</last></author>
      <author><first>Sudeep Kumar</first><last>Sahoo</last></author>
      <author><first>Yeon Hyang</first><last>Kim</last></author>
      <author><first>Rohit</first><last>R.r</last></author>
      <author><first>Mayank</first><last>Raj</last></author>
      <author><first>Ajay</first><last>Jaiswal</last></author>
      <pages>585–593</pages>
      <abstract>In this paper, we present our submission for SemEval 2020 Task 4 - Commonsense Validation and Explanation (ComVE). The objective of this task was to develop a system that can differentiate statements that make sense from the ones that don’t. ComVE comprises of three subtasks to challenge and test a system’s capability in understanding commonsense knowledge from various dimensions. Commonsense reasoning is a challenging task in the domain of natural language understanding and systems augmented with it can improve performance in various other tasks such as reading comprehension, and inferencing. We have developed a system that leverages commonsense knowledge from pretrained language models trained on huge corpus such as RoBERTa, GPT2, etc. Our proposed system validates the reasonability of a given statement against the backdrop of commonsense knowledge acquired by these models and generates a logical reason to support its decision. Our system ranked 2nd in subtask C with a BLEU score of 19.3, which by far is the most challenging subtask as it required systems to generate the rationale behind the choice of an unreasonable statement. In subtask A and B, we achieved 96% and 94% accuracy respectively standing at 4th position in both the subtasks.</abstract>
      <url hash="2d217c32">2020.semeval-1.74</url>
      <bibkey>srivastava-etal-2020-team</bibkey>
      <doi>10.18653/v1/2020.semeval-1.74</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/cos-e">CoS-E</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/swag">SWAG</pwcdataset>
    </paper>
    <paper id="75">
      <title><fixed-case>T</fixed-case>eam<fixed-case>JUST</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Commonsense Validation and Explanation Using Ensembling Techniques</title>
      <author><first>Roweida</first><last>Mohammed</last></author>
      <author><first>Malak</first><last>Abdullah</last></author>
      <pages>594–600</pages>
      <abstract>Common sense for natural language processing methods has been attracting a wide research interest, recently. Estimating automatically whether a sentence makes sense or not is considered an essential question. Task 4 in the International Workshop SemEval 2020 has provided three subtasks (A, B, and C) that challenges the participants to build systems for distinguishing the common sense statements from those that do not make sense. This paper describes TeamJUST’s approach for participating in subtask A to differentiate between two sentences in English and classify them into two classes: common sense and uncommon sense statements. Our approach depends on ensembling four different state-of-the-art pre-trained models (BERT, ALBERT, Roberta, and XLNet). Our baseline model which we used only the pre-trained model of BERT has scored 89.1, while the TeamJUST model outperformed the baseline model with an accuracy score of 96.2. We have improved the results in the post-evaluation period to achieve our best result, which would rank the 4th in the competition if we had the chance to use our latest experiment.</abstract>
      <url hash="7b25a679">2020.semeval-1.75</url>
      <bibkey>mohammed-abdullah-2020-teamjust</bibkey>
      <doi>10.18653/v1/2020.semeval-1.75</doi>
    </paper>
    <paper id="76">
      <title><fixed-case>TR</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Exploring the Limits of Language-model-based Common Sense Validation</title>
      <author><first>Don</first><last>Teo</last></author>
      <pages>601–608</pages>
      <abstract>In this paper, we present our submission for subtask A of the Common Sense Validation and Explanation (ComVE) shared task. We examine the ability of large-scale pre-trained language models to distinguish commonsense from non-commonsense statements. We also explore the utility of external resources that aim to supplement the world knowledge inherent in such language models, including commonsense knowledge graph embedding models, word concreteness ratings, and text-to-image generation models. We find that such resources provide insignificant gains to the performance of fine-tuned language models. We also provide a qualitative analysis of the limitations of the language model fine-tuned to this task.</abstract>
      <url hash="f30df9e4">2020.semeval-1.76</url>
      <bibkey>teo-2020-tr</bibkey>
      <doi>10.18653/v1/2020.semeval-1.76</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/coco">COCO</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/conceptnet">ConceptNet</pwcdataset>
    </paper>
    <paper id="77">
      <title><fixed-case>UAICS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Using a Bidirectional Transformer for Task a</title>
      <author><first>Ciprian-Gabriel</first><last>Cusmuliuc</last></author>
      <author><first>Lucia-Georgiana</first><last>Coca</last></author>
      <author><first>Adrian</first><last>Iftene</last></author>
      <pages>609–613</pages>
      <abstract>Commonsense Validation and Explanation has been a difficult task for machines since the dawn of computing. Although very trivial to humans it poses a high complexity for machines due to the necessity of inference over a pre-existing knowledge base. In order to try and solve this problem the SemEval 2020 Task 4 - ”Commonsense Validation and Explanation (ComVE)” aims to evaluate systems capable of multiple stages of ComVE. The challenge includes 3 tasks (A, B and C), each with it’s own requirements. Our team participated only in task A which required selecting the statement that made the least sense. We choose to use a bidirectional transformer in order to solve the challenge, this paper presents the details of our method, runs and result.</abstract>
      <url hash="fc98e437">2020.semeval-1.77</url>
      <bibkey>cusmuliuc-etal-2020-uaics</bibkey>
      <doi>10.18653/v1/2020.semeval-1.77</doi>
    </paper>
    <paper id="78">
      <title><fixed-case>UI</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Commonsense Validation and Explanation by Exploiting Contradiction</title>
      <author><first>Kerenza</first><last>Doxolodeo</last></author>
      <author><first>Rahmad</first><last>Mahendra</last></author>
      <pages>614–619</pages>
      <abstract>This paper describes our submissions into the ComVe challenge, the SemEval 2020 Task 4. This evaluation task consists of three sub-tasks that test commonsense comprehension by identifying sentences that do not make sense and explain why they do not. In subtask A, we use Roberta to find which sentence does not make sense. In subtask B, besides using BERT, we also experiment with replacing the dataset with MNLI when selecting the best explanation from the provided options why the given sentence does not make sense. In subtask C, we utilize the MNLI model from subtask B to evaluate the explanation generated by Roberta and GPT-2 by exploiting the contradiction of the sentence and their explanation. Our system submission records a performance of 88.2%, 80.5%, and BLEU 5.5 for those three subtasks, respectively.</abstract>
      <url hash="3b8e553f">2020.semeval-1.78</url>
      <bibkey>doxolodeo-mahendra-2020-ui</bibkey>
      <doi>10.18653/v1/2020.semeval-1.78</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/conceptnet">ConceptNet</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/multinli">MultiNLI</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/snli">SNLI</pwcdataset>
    </paper>
    <paper id="79">
      <title>Warren at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: <fixed-case>ALBERT</fixed-case> and Multi-Task Learning for Commonsense Validation</title>
      <author><first>Yuhang</first><last>Wu</last></author>
      <author><first>Hao</first><last>Wu</last></author>
      <pages>620–625</pages>
      <abstract>This paper describes our system in subtask A of SemEval 2020 Shared Task 4. We propose a reinforcement learning model based on MTL(Multi-Task Learning) to enhance the prediction ability of commonsense validation. The experimental results demonstrate that our system outperforms the single-task text classification model. We combine MTL and ALBERT pretrain model to achieve an accuracy of 0.904 and our model is ranked 16th on the final leader board of the competition among the 45 teams.</abstract>
      <url hash="334d7cf7">2020.semeval-1.79</url>
      <bibkey>wu-wu-2020-warren</bibkey>
      <doi>10.18653/v1/2020.semeval-1.79</doi>
    </paper>
    <paper id="80">
      <title><fixed-case>YNU</fixed-case>-oxz at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 4: Commonsense Validation Using <fixed-case>BERT</fixed-case> with Bidirectional <fixed-case>GRU</fixed-case></title>
      <author><first>Xiaozhi</first><last>Ou</last></author>
      <author><first>Hongling</first><last>Li</last></author>
      <pages>626–632</pages>
      <abstract>This paper describes the system and results of our team participated in SemEval-2020 Task4: Commonsense Validation and Explanation (ComVE), which aim to distinguish meaningful natural language statements from unreasonable natural language statements. This task contains three subtasks: Subtask A–Validation, Subtask B–Explanation (Multi-Choice), and Subtask C– Explanation (Generation). In these three subtasks, we only participated in Subtask A, which aims to distinguish whether a given two natural language statements with similar wording are meaningful. To solve this problem, we proposed a method using a combination of BERT with the Bidirectional Gated Recurrent Unit (Bi-GRU). Our model achieved an accuracy of 0.836 in Subtask A (ranked 27/45).</abstract>
      <url hash="59348d57">2020.semeval-1.80</url>
      <bibkey>ou-li-2020-ynu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.80</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/wsc">WSC</pwcdataset>
    </paper>
    <paper id="81">
      <title><fixed-case>BLCU</fixed-case>-<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Data Augmentation for Efficient Counterfactual Detecting</title>
      <author><first>Chang</first><last>Liu</last></author>
      <author><first>Dong</first><last>Yu</last></author>
      <pages>633–639</pages>
      <abstract>Counterfactuals describe events counter to facts and hence naturally involve common sense, knowledge, and reasoning. SemEval 2020 task 5 is focusing on this field. We participate in the subtask 1 and we use BERT as our system. Our Innovations are feature extraction and data augmentation. We extract and summarize features of counterfactual statements, augment counterfactual examples in training set with the help of these features, and two general methods of data augmentation is experimented in our work. We demonstrate the effectiveness of our approaches, which achieves 0.95 of subtask 1 in F1 while using only a subset of giving training set to fine-tune the BERT model, and our official submission achieves F1 0.802, which ranks us 16th in the competition.</abstract>
      <url hash="2d0e62d4">2020.semeval-1.81</url>
      <bibkey>liu-yu-2020-blcu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.81</doi>
    </paper>
    <paper id="82">
      <title><fixed-case>BY</fixed-case>team at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Detecting Counterfactual Statements with <fixed-case>BERT</fixed-case> and Ensembles</title>
      <author><first>Yang</first><last>Bai</last></author>
      <author><first>Xiaobing</first><last>Zhou</last></author>
      <pages>640–644</pages>
      <abstract>We participate in the classification tasks of SemEval-2020 Task: Subtask1: Detecting counterfactual statements of semeval-2020 task5(Detecting Counterfactuals). This paper examines different approaches and models towards detecting counterfactual statements classification. We choose the Bert model. However, the output of Bert is not a good summary of semantic information, so in order to obtain more abundant semantic information features, we modify the upper layer structure of Bert. Finally, our system achieves an accuracy of 88.90% and F1 score of 86.30% by hard voting, which ranks 6th on the final leader board of the in subtask 1 competition.</abstract>
      <url hash="857c33f7">2020.semeval-1.82</url>
      <bibkey>bai-zhou-2020-byteam</bibkey>
      <doi>10.18653/v1/2020.semeval-1.82</doi>
    </paper>
    <paper id="83">
      <title><fixed-case>ETHAN</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Modelling Causal Reasoning in Language Using Neuro-symbolic Cloud Computing</title>
      <author><first>Len</first><last>Yabloko</last></author>
      <pages>645–652</pages>
      <abstract>I present ETHAN: Experimental Testing of Hybrid AI Node implemented entirely on free cloud computing infrastructure. The ultimate goal of this research is to create modular reusable hybrid neuro-symbolic architecture for Artificial Intelligence. As a test case I model natural language comprehension of causal relations from open domain text corpus that combines semi-supervised language model (Huggingface Transformers) with constituency and dependency parsers (Allen Institute for Artificial Intelligence.)</abstract>
      <url hash="e284d87b">2020.semeval-1.83</url>
      <bibkey>yabloko-2020-ethan</bibkey>
      <doi>10.18653/v1/2020.semeval-1.83</doi>
    </paper>
    <paper id="84">
      <title>Ferryman as <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Optimized <fixed-case>BERT</fixed-case> for Detecting Counterfactuals</title>
      <author><first>Weilong</first><last>Chen</last></author>
      <author><first>Yan</first><last>Zhuang</last></author>
      <author><first>Peng</first><last>Wang</last></author>
      <author><first>Feng</first><last>Hong</last></author>
      <author><first>Yan</first><last>Wang</last></author>
      <author><first>Yanru</first><last>Zhang</last></author>
      <pages>653–657</pages>
      <abstract>The main purpose of this article is to state the effect of using different methods and models for counterfactual determination and detection of causal knowledge. Nowadays, counterfactual reasoning has been widely used in various fields. In the realm of natural language process(NLP), counterfactual reasoning has huge potential to improve the correctness of a sentence. In the shared Task 5 of detecting counterfactual in SemEval 2020, we pre-process the officially given dataset according to case conversion, extract stem and abbreviation replacement. We use last-5 bidirectional encoder representation from bidirectional encoder representation from transformer (BERT)and term frequency–inverse document frequency (TF-IDF) vectorizer for counterfactual detection. Meanwhile, multi-sample dropout and cross validation are used to improve versatility and prevent problems such as poor generosity caused by overfitting. Finally, our team Ferryman ranked the 8th place in the sub-task 1 of this competition.</abstract>
      <url hash="989b7417">2020.semeval-1.84</url>
      <bibkey>chen-etal-2020-ferryman-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.84</doi>
    </paper>
    <paper id="85">
      <title><fixed-case>ISCAS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Pre-trained Transformers for Counterfactual Statement Modeling</title>
      <author><first>Yaojie</first><last>Lu</last></author>
      <author><first>Annan</first><last>Li</last></author>
      <author><first>Hongyu</first><last>Lin</last></author>
      <author><first>Xianpei</first><last>Han</last></author>
      <author><first>Le</first><last>Sun</last></author>
      <pages>658–663</pages>
      <abstract>ISCAS participated in two subtasks of SemEval 2020 Task 5: detecting counterfactual statements and detecting antecedent and consequence. This paper describes our system which is based on pretrained transformers. For the first subtask, we train several transformer-based classifiers for detecting counterfactual statements. For the second subtask, we formulate antecedent and consequence extraction as a query-based question answering problem. The two subsystems both achieved third place in the evaluation. Our system is openly released at https://github.com/casnlu/ISCASSemEval2020Task5.</abstract>
      <url hash="23d869ef">2020.semeval-1.85</url>
      <bibkey>lu-etal-2020-iscas</bibkey>
      <doi>10.18653/v1/2020.semeval-1.85</doi>
      <pwccode url="https://github.com/casnlu/ISCAS-SemEval2020Task5" additional="false">casnlu/ISCAS-SemEval2020Task5</pwccode>
    </paper>
    <paper id="86">
      <title>Lee at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: <fixed-case>ALBERT</fixed-case> Model Based on the Maximum Ensemble Strategy and Different Data Sampling Methods for Detecting Counterfactual Statements</title>
      <author><first>Junyi</first><last>Li</last></author>
      <author><first>Yuhang</first><last>Wu</last></author>
      <author><first>Bin</first><last>Wang</last></author>
      <author><first>Haiyan</first><last>Ding</last></author>
      <pages>664–669</pages>
      <abstract>This article describes the system submitted to SemEval 2020 Task 5: Modelling Causal Reasoning in Language: Detecting Counterfactuals. In this task, we only participate in the subtask A which is detecting counterfactual statements. In order to solve this sub-task, first of all, because of the problem of data balance, we use the undersampling and oversampling methods to process the data set. Second, we used the ALBERT model and the maximum ensemble method based on the ALBERT model. Our methods achieved a F1 score of 0.85 in subtask A.</abstract>
      <url hash="b887af8a">2020.semeval-1.86</url>
      <bibkey>li-etal-2020-lee</bibkey>
      <doi>10.18653/v1/2020.semeval-1.86</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/multinli">MultiNLI</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/snli">SNLI</pwcdataset>
    </paper>
    <paper id="87">
      <title><fixed-case>NLU</fixed-case>-Co at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: <fixed-case>NLU</fixed-case>/<fixed-case>SVM</fixed-case> Based Model Apply Tocharacterise and Extract Counterfactual Items on Raw Data</title>
      <author><first>Elvis</first><last>Mboning Tchiaze</last></author>
      <author><first>Damien</first><last>Nouvel</last></author>
      <pages>670–676</pages>
      <abstract>In this article, we try to solve the problem of classification of counterfactual statements and extraction of antecedents/consequences in raw data, by mobilizing on one hand Support vector machine (SVMs) and on the other hand Natural Language Understanding (NLU) infrastructures available on the market for conversational agents. Our experiments allowed us to test different pipelines of two known platforms (Snips NLU and Rasa NLU). The results obtained show that a Rasa NLU pipeline, built with a well-preprocessed dataset and tuned algorithms, allows to model accurately the structure of a counterfactual event, in order to facilitate the identification and the extraction of its components.</abstract>
      <url hash="47fdd5e0">2020.semeval-1.87</url>
      <bibkey>mboning-tchiaze-nouvel-2020-nlu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.87</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/snips">SNIPS</pwcdataset>
    </paper>
    <paper id="88">
      <title>Pheonix at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Masking the Labels Lubricates Models for Sequence Labeling</title>
      <author><first>Pouria</first><last>Babvey</last></author>
      <author><first>Dario</first><last>Borrelli</last></author>
      <author><first>Yutong</first><last>Zhao</last></author>
      <author><first>Carlo</first><last>Lipizzi</last></author>
      <pages>677–682</pages>
      <abstract>This paper presents the deep-learning model that is submitted to the SemEval-2020 Task 5 competition: “Detecting Counterfactuals”. We participated in both Subtask1 and Subtask2. The model proposed in this paper ranked 2nd in Subtask2 “Detecting antecedent and consequence”. Our model approaches the task as a sequence labeling. The architecture is built on top of BERT, and a multi-head attention layer with label masking is used to benefit from the mutual information between nearby labels. Also, for prediction, a multi-stage algorithm is used in which the model finalize some predictions with higher certainty in each step and use them in the following. Our results show that masking the labels not only is an efficient regularization method but also improves the accuracy of the model compared with other alternatives like CRF. Label masking can be used as a regularization method in sequence labeling. Also, it improves the performance of the model by learning the specific patterns in the target variable.</abstract>
      <url hash="5b0ffbec">2020.semeval-1.88</url>
      <bibkey>babvey-etal-2020-pheonix</bibkey>
      <doi>10.18653/v1/2020.semeval-1.88</doi>
    </paper>
    <paper id="89">
      <title><fixed-case>YNU</fixed-case>-oxz at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 5: Detecting Counterfactuals Based on Ordered Neurons <fixed-case>LSTM</fixed-case> and Hierarchical Attention Network</title>
      <author><first>Xiaozhi</first><last>Ou</last></author>
      <author><first>Shengyan</first><last>Liu</last></author>
      <author><first>Hongling</first><last>Li</last></author>
      <pages>683–689</pages>
      <abstract>This paper describes the system and results of our team’s participation in SemEval-2020 Task5: Modelling Causal Reasoning in Language: Detecting Counterfactuals, which aims to simulate counterfactual semantics and reasoning in natural language. This task contains two subtasks: Subtask1–Detecting counterfactual statements and Subtask2–Detecting antecedent and consequence. We only participated in Subtask1, aiming to determine whether a given sentence is counterfactual. In order to solve this task, we proposed a system based on Ordered Neurons LSTM (ON-LSTM) with Hierarchical Attention Network (HAN) and used Pooling operation for dimensionality reduction. Finally, we used the K-fold approach as the ensemble method. Our model achieved an F1 score of 0.7040 in Subtask1 (Ranked 16/27).</abstract>
      <url hash="bbe53f67">2020.semeval-1.89</url>
      <bibkey>ou-etal-2020-ynu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.89</doi>
    </paper>
    <paper id="90">
      <title><fixed-case>BERT</fixed-case>at<fixed-case>DE</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 6: Extracting Term-definition Pairs in Free Text Using Pre-trained Model</title>
      <author><first>Huihui</first><last>Zhang</last></author>
      <author><first>Feiliang</first><last>Ren</last></author>
      <pages>690–696</pages>
      <abstract>Definition extraction is an important task in Nature Language Processing, and it is used to identify the terms and definitions related to terms. The task contains sentence classification task (i.e., classify whether it contains definition) and sequence labeling task (i.e., find the boundary of terms and definitions). The paper describes our system BERTatDE1 in sentence classification task (subtask 1) and sequence labeling task (subtask 2) in the definition extraction (SemEval-2020 Task 6). We use BERT to solve the multi-domain problems including the uncertainty of term boundary that is, different areas have different ways to definite the domain related terms. We use BERT, BiLSTM and attention in subtask 1 and our best result achieved 79.71% in F1 and the eighteenth place in subtask 1. For the subtask 2, we use BERT, BiLSTM and CRF to sequence labeling, and achieve 40.73% in Macro-averaged F1.</abstract>
      <url hash="ced65874">2020.semeval-1.90</url>
      <bibkey>zhang-ren-2020-bertatde</bibkey>
      <doi>10.18653/v1/2020.semeval-1.90</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/deft-corpus">DEFT Corpus</pwcdataset>
    </paper>
    <paper id="91">
      <title><fixed-case>D</fixed-case>eft<fixed-case>P</fixed-case>unk at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 6: Using <fixed-case>RNN</fixed-case>-ensemble for the Sentence Classification.</title>
      <author><first>Jekaterina</first><last>Kaparina</last></author>
      <author><first>Anna</first><last>Soboleva</last></author>
      <pages>697–703</pages>
      <abstract>This paper describes participation in DeftEval 2020 (part of SemEval sharing task competition), and is focused on the sentence classification. Our approach to the task was to create an ensemble of several RNNs combined with fasttext and ELMo embeddings. Results show that various types of models in an ensemble give a performance boost in comparison to standard models. Our model achieved F1-score of 78% for a positive class on the DeftEval dataset.</abstract>
      <url hash="d587fec3">2020.semeval-1.91</url>
      <bibkey>kaparina-soboleva-2020-deftpunk</bibkey>
      <doi>10.18653/v1/2020.semeval-1.91</doi>
    </paper>
    <paper id="92">
      <title>Defx at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 6: Joint Extraction of Concepts and Relations for Definition Extraction</title>
      <author><first>Marc</first><last>Hübner</last></author>
      <author><first>Christoph</first><last>Alt</last></author>
      <author><first>Robert</first><last>Schwarzenberg</last></author>
      <author><first>Leonhard</first><last>Hennig</last></author>
      <pages>704–709</pages>
      <abstract>Definition Extraction systems are a valuable knowledge source for both humans and algorithms. In this paper we describe our submissions to the DeftEval shared task (SemEval-2020 Task 6), which is evaluated on an English textbook corpus. We provide a detailed explanation of our system for the joint extraction of definition concepts and the relations among them. Furthermore we provide an ablation study of our model variations and describe the results of an error analysis.</abstract>
      <url hash="14648690">2020.semeval-1.92</url>
      <bibkey>hubner-etal-2020-defx</bibkey>
      <doi>10.18653/v1/2020.semeval-1.92</doi>
      <pwccode url="https://github.com/DFKI-NLP/defx" additional="false">DFKI-NLP/defx</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/deft-corpus">DEFT Corpus</pwcdataset>
    </paper>
    <paper id="93">
      <title><fixed-case>DSC</fixed-case> <fixed-case>IIT</fixed-case>-<fixed-case>ISM</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 6: Boosting <fixed-case>BERT</fixed-case> with Dependencies for Definition Extraction</title>
      <author><first>Aadarsh</first><last>Singh</last></author>
      <author><first>Priyanshu</first><last>Kumar</last></author>
      <author><first>Aman</first><last>Sinha</last></author>
      <pages>710–716</pages>
      <abstract>We explore the performance of Bidirectional Encoder Representations from Transformers (BERT) at definition extraction. We further propose a joint model of BERT and Text Level Graph Convolutional Network so as to incorporate dependencies into the model. Our proposed model produces better results than BERT and achieves comparable results to BERT with fine tuned language model in DeftEval (Task 6 of SemEval 2020), a shared task of classifying whether a sentence contains a definition or not (Subtask 1).</abstract>
      <url hash="3138575f">2020.semeval-1.93</url>
      <bibkey>singh-etal-2020-dsc</bibkey>
      <doi>10.18653/v1/2020.semeval-1.93</doi>
      <pwccode url="https://github.com/dsciitism/SemEval-2020-Task-6" additional="false">dsciitism/SemEval-2020-Task-6</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/deft-corpus">DEFT Corpus</pwcdataset>
    </paper>
    <paper id="94">
      <title><fixed-case>RGCL</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 6: Neural Approaches to <fixed-case>D</fixed-case>efinition<fixed-case>E</fixed-case>xtraction</title>
      <author><first>Tharindu</first><last>Ranasinghe</last></author>
      <author><first>Alistair</first><last>Plum</last></author>
      <author><first>Constantin</first><last>Orasan</last></author>
      <author><first>Ruslan</first><last>Mitkov</last></author>
      <pages>717–723</pages>
      <abstract>This paper presents the RGCL team submission to SemEval 2020 Task 6: DeftEval, subtasks 1 and 2. The system classifies definitions at the sentence and token levels. It utilises state-of-the-art neural network architectures, which have some task-specific adaptations, including an automatically extended training set. Overall, the approach achieves acceptable evaluation scores, while maintaining flexibility in architecture selection.</abstract>
      <url hash="dc203e7e">2020.semeval-1.94</url>
      <bibkey>ranasinghe-etal-2020-rgcl</bibkey>
      <doi>10.18653/v1/2020.semeval-1.94</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/deft-corpus">DEFT Corpus</pwcdataset>
    </paper>
    <paper id="95">
      <title><fixed-case>T</fixed-case>ü<fixed-case>K</fixed-case>a<fixed-case>P</fixed-case>o at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 6: Def(n)tly Not <fixed-case>BERT</fixed-case>: Definition Extraction Using pre-<fixed-case>BERT</fixed-case> Methods in a post-<fixed-case>BERT</fixed-case> World</title>
      <author><first>Madeeswaran</first><last>Kannan</last></author>
      <author><first>Haemanth</first><last>Santhi Ponnusamy</last></author>
      <pages>724–729</pages>
      <abstract>We describe our system (TüKaPo) submitted for Task 6: DeftEval, at SemEval 2020. We developed a hybrid approach that combined existing CNN and RNN methods and investigated the impact of purely-syntactic and semantic features on the task of definition extraction. Our final model achieved a F1-score of 0.6851 in subtask 1, i.e, sentence classification.</abstract>
      <url hash="80e3d569">2020.semeval-1.95</url>
      <bibkey>kannan-santhi-ponnusamy-2020-tukapo</bibkey>
      <doi>10.18653/v1/2020.semeval-1.95</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/deft-corpus">DEFT Corpus</pwcdataset>
    </paper>
    <paper id="96">
      <title><fixed-case>UNIXLONG</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 6: A Joint Model for Definition Extraction</title>
      <author><first>ShuYi</first><last>Xie</last></author>
      <author><first>Jian</first><last>Ma</last></author>
      <author><first>Haiqin</first><last>Yang</last></author>
      <author><first>Jiang</first><last>Lianxin</last></author>
      <author><first>Mo</first><last>Yang</last></author>
      <author><first>Jianping</first><last>Shen</last></author>
      <pages>730–736</pages>
      <abstract>Definition Extraction is the task to automatically extract terms and their definitions from text. In recent years, it attracts wide interest from NLP researchers. This paper describes the unixlong team’s system for the SemEval 2020 task6: DeftEval: Extracting term-definition pairs in free text. The goal of this task is to extract definition, word level BIO tags and relations. This task is challenging due to the free style of the text, especially the definitions of the terms range across several sentences and lack explicit verb phrases. We propose a joint model to train the tasks of definition extraction and the word level BIO tagging simultaneously. We design a creative format input of BERT to capture the location information between entity and its definition. Then we adjust the result of BERT with some rules. Finally, we apply TAG_ID, ROOT_ID, BIO tag to predict the relation and achieve macro-averaged F1 score 1.0 which rank first on the official test set in the relation extraction subtask.</abstract>
      <url hash="b47895a5">2020.semeval-1.96</url>
      <bibkey>xie-etal-2020-unixlong</bibkey>
      <doi>10.18653/v1/2020.semeval-1.96</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/deft-corpus">DEFT Corpus</pwcdataset>
    </paper>
    <paper id="97">
      <title><fixed-case>UPB</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 6: Pretrained Language Models for Definition Extraction</title>
      <author><first>Andrei-Marius</first><last>Avram</last></author>
      <author><first>Dumitru-Clementin</first><last>Cercel</last></author>
      <author><first>Costin</first><last>Chiru</last></author>
      <pages>737–745</pages>
      <abstract>This work presents our contribution in the context of the 6th task of SemEval-2020: Extracting Definitions from Free Text in Textbooks (DeftEval). This competition consists of three subtasks with different levels of granularity: (1) classification of sentences as definitional or non-definitional, (2) labeling of definitional sentences, and (3) relation classification. We use various pretrained language models (i.e., BERT, XLNet, RoBERTa, SciBERT, and ALBERT) to solve each of the three subtasks of the competition. Specifically, for each language model variant, we experiment by both freezing its weights and fine-tuning them. We also explore a multi-task architecture that was trained to jointly predict the outputs for the second and the third subtasks. Our best performing model evaluated on the DeftEval dataset obtains the 32nd place for the first subtask and the 37th place for the second subtask. The code is available for further research at: <url>https://github.com/avramandrei/DeftEval</url>
      </abstract>
      <url hash="43d211d7">2020.semeval-1.97</url>
      <bibkey>avram-etal-2020-upb</bibkey>
      <doi>10.18653/v1/2020.semeval-1.97</doi>
      <pwccode url="https://github.com/avramandrei/DeftEval" additional="true">avramandrei/DeftEval</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/deft-corpus">DEFT Corpus</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/glue">GLUE</pwcdataset>
    </paper>
    <paper id="98">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Assessing Humor in Edited News Headlines</title>
      <author><first>Nabil</first><last>Hossain</last></author>
      <author><first>John</first><last>Krumm</last></author>
      <author><first>Michael</first><last>Gamon</last></author>
      <author><first>Henry</first><last>Kautz</last></author>
      <pages>746–758</pages>
      <abstract>This paper describes the SemEval-2020 shared task “Assessing Humor in Edited News Headlines.” The task’s dataset contains news headlines in which short edits were applied to make them funny, and the funniness of these edited headlines was rated using crowdsourcing. This task includes two subtasks, the first of which is to estimate the funniness of headlines on a humor scale in the interval 0-3. The second subtask is to predict, for a pair of edited versions of the same original headline, which is the funnier version. To date, this task is the most popular shared computational humor task, attracting 48 teams for the first subtask and 31 teams for the second.</abstract>
      <award>Best Task</award>
      <url hash="5fe8d490">2020.semeval-1.98</url>
      <bibkey>hossain-etal-2020-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.98</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/humicroedit">Humicroedit</pwcdataset>
    </paper>
    <paper id="99">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Memotion Analysis- the Visuo-Lingual Metaphor!</title>
      <author><first>Chhavi</first><last>Sharma</last></author>
      <author><first>Deepesh</first><last>Bhageria</last></author>
      <author><first>William</first><last>Scott</last></author>
      <author><first>Srinivas</first><last>PYKL</last></author>
      <author><first>Amitava</first><last>Das</last></author>
      <author><first>Tanmoy</first><last>Chakraborty</last></author>
      <author><first>Viswanath</first><last>Pulabaigari</last></author>
      <author><first>Björn</first><last>Gambäck</last></author>
      <pages>759–773</pages>
      <abstract>Information on social media comprises of various modalities such as textual, visual and audio. NLP and Computer Vision communities often leverage only one prominent modality in isolation to study social media. However, computational processing of Internet memes needs a hybrid approach. The growing ubiquity of Internet memes on social media platforms such as Facebook, Instagram, and Twitter further suggests that we can not ignore such multimodal content anymore. To the best of our knowledge, there is not much attention towards meme emotion analysis. The objective of this proposal is to bring the attention of the research community towards the automatic processing of Internet memes. The task Memotion analysis released approx 10K annotated memes- with human annotated labels namely sentiment(positive, negative, neutral), type of emotion(sarcastic,funny,offensive, motivation) and their corresponding intensity. The challenge consisted of three subtasks: sentiment (positive, negative, and neutral) analysis of memes,overall emotion (humor, sarcasm, offensive, and motivational) classification of memes, and classifying intensity of meme emotion. The best performances achieved were F1 (macro average) scores of 0.35, 0.51 and 0.32, respectively for each of the three subtasks.</abstract>
      <url hash="7edbdc81">2020.semeval-1.99</url>
      <bibkey>sharma-etal-2020-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.99</doi>
    </paper>
    <paper id="100">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Overview of Sentiment Analysis of Code-Mixed Tweets</title>
      <author><first>Parth</first><last>Patwa</last></author>
      <author><first>Gustavo</first><last>Aguilar</last></author>
      <author><first>Sudipta</first><last>Kar</last></author>
      <author><first>Suraj</first><last>Pandey</last></author>
      <author><first>Srinivas</first><last>PYKL</last></author>
      <author><first>Björn</first><last>Gambäck</last></author>
      <author><first>Tanmoy</first><last>Chakraborty</last></author>
      <author><first>Thamar</first><last>Solorio</last></author>
      <author><first>Amitava</first><last>Das</last></author>
      <pages>774–790</pages>
      <abstract>In this paper, we present the results of the SemEval-2020 Task 9 on Sentiment Analysis of Code-Mixed Tweets (SentiMix 2020). We also release and describe our Hinglish (Hindi-English)and Spanglish (Spanish-English) corpora annotated with word-level language identification and sentence-level sentiment labels. These corpora are comprised of 20K and 19K examples, respectively. The sentiment labels are - Positive, Negative, and Neutral. SentiMix attracted 89 submissions in total including 61 teams that participated in the Hinglish contest and 28 submitted systems to the Spanglish competition. The best performance achieved was 75.0% F1 score for Hinglish and 80.6% F1 for Spanglish. We observe that BERT-like models and ensemble methods are the most common and successful approaches among the participants.</abstract>
      <url hash="502da719">2020.semeval-1.100</url>
      <bibkey>patwa-etal-2020-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.100</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="101">
      <title>Hitachi at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Stacking at Scale with Heterogeneous Language Models for Humor Recognition</title>
      <author><first>Terufumi</first><last>Morishita</last></author>
      <author><first>Gaku</first><last>Morio</last></author>
      <author><first>Hiroaki</first><last>Ozaki</last></author>
      <author><first>Toshinori</first><last>Miyoshi</last></author>
      <pages>791–803</pages>
      <abstract>This paper describes the winning system for SemEval-2020 task 7: Assessing Humor in Edited News Headlines. Our strategy is Stacking at Scale (SaS) with heterogeneous pre-trained language models (PLMs) such as BERT and GPT-2. SaS first performs fine-tuning on numbers of PLMs with various hyperparameters and then applies a powerful stacking ensemble on top of the fine-tuned PLMs. Our experimental results show that SaS outperforms a naive average ensemble, leveraging weaker PLMs as well as high-performing PLMs. Interestingly, the results show that SaS captured non-funny semantics. Consequently, the system was ranked 1st in all subtasks by significant margins compared with other systems.</abstract>
      <url hash="ef471c0f">2020.semeval-1.101</url>
      <bibkey>morishita-etal-2020-hitachi-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.101</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/humicroedit">Humicroedit</pwcdataset>
    </paper>
    <paper id="102">
      <title><fixed-case>SESAM</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Investigating the Relationship between Image and Text in Sentiment Analysis of Memes</title>
      <author><first>Lisa</first><last>Bonheme</last></author>
      <author><first>Marek</first><last>Grzes</last></author>
      <pages>804–816</pages>
      <abstract>This paper presents our submission to task 8 (memotion analysis) of the SemEval 2020 competition. We explain the algorithms that were used to learn our models along with the process of tuning the algorithms and selecting the best model. Since meme analysis is a challenging task with two distinct modalities, we studied the impact of different multimodal representation strategies. The results of several approaches to dealing with multimodal data are therefore discussed in the paper. We found that alignment-based strategies did not perform well on memes. Our quantitative results also showed that images and text were uncorrelated. Fusion-based strategies did not show significant improvements and using one modality only (text or image) tends to lead to better results when applied with the predictive models that we used in our research.</abstract>
      <award>Best Paper Honorable Mention</award>
      <url hash="2b8ed125">2020.semeval-1.102</url>
      <bibkey>bonheme-grzes-2020-sesam</bibkey>
      <doi>10.18653/v1/2020.semeval-1.102</doi>
    </paper>
    <paper id="103">
      <title>Kk2018 at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Adversarial Training for Code-Mixing Sentiment Classification</title>
      <author><first>Jiaxiang</first><last>Liu</last></author>
      <author><first>Xuyi</first><last>Chen</last></author>
      <author><first>Shikun</first><last>Feng</last></author>
      <author><first>Shuohuan</first><last>Wang</last></author>
      <author><first>Xuan</first><last>Ouyang</last></author>
      <author><first>Yu</first><last>Sun</last></author>
      <author><first>Zhengjie</first><last>Huang</last></author>
      <author><first>Weiyue</first><last>Su</last></author>
      <pages>817–823</pages>
      <abstract>Code switching is a linguistic phenomenon which may occur within a multilingual setting where speakers share more than one language. With the increasing communication between groups with different languages, this phenomenon is more and more popular. However, there are little research and data in this area, especially in code-mixing sentiment classification. In this work, the domain transfer learning from state-of-the-art uni-language model ERNIE is tested on the code-mixing dataset, and surprisingly, a strong baseline is achieved. And further more, the adversarial training with a multi-lingual model is used to achieved 1st place of SemEval-2020 Task9 Hindi-English sentiment classification competition.</abstract>
      <url hash="cc3ca8d5">2020.semeval-1.103</url>
      <bibkey>liu-etal-2020-kk2018</bibkey>
      <doi>10.18653/v1/2020.semeval-1.103</doi>
    </paper>
    <paper id="104">
      <title>Buhscitu at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Assessing Humour in Edited News Headlines Using Hand-Crafted Features and Online Knowledge Bases</title>
      <author><first>Kristian Nørgaard</first><last>Jensen</last></author>
      <author><first>Nicolaj Filrup</first><last>Rasmussen</last></author>
      <author><first>Thai</first><last>Wang</last></author>
      <author><first>Marco</first><last>Placenti</last></author>
      <author><first>Barbara</first><last>Plank</last></author>
      <pages>824–832</pages>
      <abstract>This paper describes a system that aims at assessing humour intensity in edited news headlines as part of the 7th task of SemEval-2020 on “Humor, Emphasis and Sentiment”. Various factors need to be accounted for in order to assess the funniness of an edited headline. We propose an architecture that uses hand-crafted features, knowledge bases and a language model to understand humour, and combines them in a regression model. Our system outperforms two baselines. In general, automatic humour assessment remains a difficult task.</abstract>
      <url hash="8e995fbd">2020.semeval-1.104</url>
      <bibkey>jensen-etal-2020-buhscitu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.104</doi>
    </paper>
    <paper id="105">
      <title>Hasyarasa at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Quantifying Humor as Departure from Expectedness</title>
      <author><first>Ravi Theja</first><last>Desetty</last></author>
      <author><first>Ranit</first><last>Chatterjee</last></author>
      <author><first>Smita</first><last>Ghaisas</last></author>
      <pages>833–842</pages>
      <abstract>This paper describes our system submission Hasyarasa for the SemEval-2020 Task-7: Assessing Humor in Edited News Headlines. This task has two subtasks. The goal of Subtask 1 is to predict the mean funniness of the edited headline given the original and the edited headline. In Subtask 2, given two edits on the original headline, the goal is to predict the funnier of the two. We observed that the departure from expected state/ actions of situations/ individuals is the cause of humor in the edited headlines. We propose two novel features: Contextual Semantic Distance and Contextual Neighborhood Distance to estimate this departure and thus capture the contextual absurdity and hence the humor in the edited headlines. We have used these features together with a Bi-LSTM Attention based model and have achieved 0.53310 RMSE for Subtask 1 and 60.19% accuracy for Subtask 2.</abstract>
      <url hash="956d6e35">2020.semeval-1.105</url>
      <bibkey>desetty-etal-2020-hasyarasa</bibkey>
      <doi>10.18653/v1/2020.semeval-1.105</doi>
    </paper>
    <paper id="106">
      <title><fixed-case>J</fixed-case>oke<fixed-case>M</fixed-case>eter at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Convolutional Humor</title>
      <author><first>Martin</first><last>Docekal</last></author>
      <author><first>Martin</first><last>Fajcik</last></author>
      <author><first>Josef</first><last>Jon</last></author>
      <author><first>Pavel</first><last>Smrz</last></author>
      <pages>843–851</pages>
      <abstract>This paper describes our system that was designed for Humor evaluation within the SemEval-2020 Task 7. The system is based on convolutional neural network architecture. We investigate the system on the official dataset, and we provide more insight to model itself to see how the learned inner features look.</abstract>
      <url hash="f0b875f0">2020.semeval-1.106</url>
      <bibkey>docekal-etal-2020-jokemeter</bibkey>
      <doi>10.18653/v1/2020.semeval-1.106</doi>
    </paper>
    <paper id="107">
      <title><fixed-case>KDE</fixed-case>humor at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: A Neural Network Model for Detecting Funniness in Dataset Humicroedit</title>
      <author><first>Rida</first><last>Miraj</last></author>
      <author><first>Masaki</first><last>Aono</last></author>
      <pages>852–857</pages>
      <abstract>This paper describes our contribution to SemEval-2020 Task 7: Assessing Humor in Edited News Headlines. Here we present a method based on a deep neural network. In recent years, quite some attention has been devoted to humor production and perception. Our team KDEhumor employs recurrent neural network models including Bi-Directional LSTMs (BiLSTMs). Moreover, we utilize the state-of-the-art pre-trained sentence embedding techniques. We analyze the performance of our method and demonstrate the contribution of each component of our architecture.</abstract>
      <url hash="3c5487be">2020.semeval-1.107</url>
      <bibkey>miraj-aono-2020-kdehumor</bibkey>
      <doi>10.18653/v1/2020.semeval-1.107</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/humicroedit">Humicroedit</pwcdataset>
    </paper>
    <paper id="108">
      <title><fixed-case>LRG</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Assessing the Ability of <fixed-case>BERT</fixed-case> and Derivative Models to Perform Short-Edits Based Humor Grading</title>
      <author><first>Siddhant</first><last>Mahurkar</last></author>
      <author><first>Rajaswa</first><last>Patil</last></author>
      <pages>858–864</pages>
      <abstract>In this paper, we assess the ability of BERT and its derivative models (RoBERTa, DistilBERT, and ALBERT) for short-edits based humor grading. We test these models for humor grading and classification tasks on the Humicroedit and the FunLines dataset. We perform extensive experiments with these models to test their language modeling and generalization abilities via zero-shot inference and cross-dataset inference based approaches. Further, we also inspect the role of self-attention layers in humor-grading by performing a qualitative analysis over the self-attention weights from the final layer of the trained BERT model. Our experiments show that all the pre-trained BERT derivative models show significant generalization capabilities for humor-grading related tasks.</abstract>
      <url hash="e3f1ac5b">2020.semeval-1.108</url>
      <bibkey>mahurkar-patil-2020-lrg</bibkey>
      <doi>10.18653/v1/2020.semeval-1.108</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/humicroedit">Humicroedit</pwcdataset>
    </paper>
    <paper id="109">
      <title><fixed-case>SSN</fixed-case>_<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Detecting Funniness Level Using Traditional Learning with Sentence Embeddings</title>
      <author><first>Kayalvizhi</first><last>S</last></author>
      <author><first>Thenmozhi</first><last>D.</last></author>
      <author><first>Aravindan</first><last>Chandrabose</last></author>
      <pages>865–870</pages>
      <abstract>Assessing the funniness of edited news headlines task deals with estimating the humorness in the headlines edited with micro-edits. This task has two sub-tasks in which one has to calculate the mean predicted score of humor level and other deals with predicting the best funnier sentence among given two sentences. We have calculated the humorness level using microtc and predicted the funnier sentence using microtc, universal sentence encoder classifier, many other traditional classifiers that use the vectors formed with universal sentence encoder embeddings, sentence embeddings and majority algorithm within these approaches. Among these approaches, microtc with 6 folds, 24 processes and 3 folds, 36 processes achieve the least Root Mean Square Error for development and test set respectively for subtask 1. For subtask 2, Universal sentence encoder classifier achieves the highest accuracy for development set and Multi-Layer Perceptron applied on vectors vectorized using universal sentence encoder embeddings for the test set.</abstract>
      <url hash="9392ba26">2020.semeval-1.109</url>
      <bibkey>s-etal-2020-ssn</bibkey>
      <doi>10.18653/v1/2020.semeval-1.109</doi>
    </paper>
    <paper id="110">
      <title><fixed-case>YNU</fixed-case>-<fixed-case>HPCC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Using an Ensemble <fixed-case>B</fixed-case>i<fixed-case>GRU</fixed-case> Model to Evaluate the Humor of Edited News Titles</title>
      <author><first>Joseph</first><last>Tomasulo</last></author>
      <author><first>Jin</first><last>Wang</last></author>
      <author><first>Xuejie</first><last>Zhang</last></author>
      <pages>871–875</pages>
      <abstract>This paper describes an ensemble model designed for Semeval-2020 Task 7. The task is based on the Humicroedit dataset that is comprised of news titles and one-word substitutions designed to make them humorous. We use BERT, FastText, Elmo, and Word2Vec to encode these titles then pass them to a bidirectional gated recurrent unit (BiGRU) with attention. Finally, we used XGBoost on the concatenation of the results of the different models to make predictions.</abstract>
      <url hash="a6a02927">2020.semeval-1.110</url>
      <bibkey>tomasulo-etal-2020-ynu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.110</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/humicroedit">Humicroedit</pwcdataset>
    </paper>
    <paper id="111">
      <title><fixed-case>DSC</fixed-case> <fixed-case>IIT</fixed-case>-<fixed-case>ISM</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Bi-Fusion Techniques for Deep Meme Emotion Analysis</title>
      <author><first>Pradyumna</first><last>Gupta</last></author>
      <author><first>Himanshu</first><last>Gupta</last></author>
      <author><first>Aman</first><last>Sinha</last></author>
      <pages>876–884</pages>
      <abstract>Memes have become an ubiquitous social media entity and the processing and analysis of such multimodal data is currently an active area of research. This paper presents our work on the Memotion Analysis shared task of SemEval 2020, which involves the sentiment and humor analysis of memes. We propose a system which uses different bimodal fusion techniques to leverage the inter-modal dependency for sentiment and humor classification tasks. Out of all our experiments, the best system improved the baseline with macro F1 scores of 0.357 on Sentiment Classification (Task A), 0.510 on Humor Classification (Task B) and 0.312 on Scales of Semantic Classes (Task C).</abstract>
      <url hash="628019d5">2020.semeval-1.111</url>
      <bibkey>gupta-etal-2020-dsc</bibkey>
      <doi>10.18653/v1/2020.semeval-1.111</doi>
      <pwccode url="https://github.com/dsciitism/SemEval-2020-Task-8" additional="false">dsciitism/SemEval-2020-Task-8</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/imagenet">ImageNet</pwcdataset>
    </paper>
    <paper id="112">
      <title><fixed-case>IIITG</fixed-case>-<fixed-case>ADBU</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: A Multimodal Approach to Detect Offensive, Sarcastic and Humorous Memes</title>
      <author><first>Arup</first><last>Baruah</last></author>
      <author><first>Kaushik</first><last>Das</last></author>
      <author><first>Ferdous</first><last>Barbhuiya</last></author>
      <author><first>Kuntal</first><last>Dey</last></author>
      <pages>885–890</pages>
      <abstract>In this paper, we present a multimodal architecture to determine the emotion expressed in a meme. This architecture utilizes both textual and visual information present in a meme. To extract image features we experimented with pre-trained VGG-16 and Inception-V3 classifiers and to extract text features we used LSTM and BERT classifiers. Both FastText and GloVe embeddings were experimented with for the LSTM classifier. The best F1 scores our classifier obtained on the official analysis results are 0.3309, 0.4752, and 0.2897 for Task A, B, and C respectively in the Memotion Analysis task (Task 8) organized as part of International Workshop on Semantic Evaluation 2020 (SemEval 2020). In our study, we found that combining both textual and visual information expressed in a meme improves the performance of the classifier as opposed to using standalone classifiers that use only text or visual data.</abstract>
      <url hash="d33b4113">2020.semeval-1.112</url>
      <bibkey>baruah-etal-2020-iiitg</bibkey>
      <doi>10.18653/v1/2020.semeval-1.112</doi>
    </paper>
    <paper id="113">
      <title><fixed-case>NLP</fixed-case>_<fixed-case>UIOWA</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: You’re Not the Only One Cursed with Knowledge - Multi Branch Model Memotion Analysis</title>
      <author><first>Ingroj</first><last>Shrestha</last></author>
      <author><first>Jonathan</first><last>Rusert</last></author>
      <pages>891–900</pages>
      <abstract>We propose hybrid models (HybridE and HybridW) for meme analysis (SemEval 2020 Task 8), which involves sentiment classification (Subtask A), humor classification (Subtask B), and scale of semantic classes (Subtask C). The hybrid model consists of BLSTM and CNN for text and image processing respectively. HybridE provides equal weight to BLSTM and CNN performance, while HybridW provides weightage based on the performance of BLSTM and CNN on a validation set. The performances (macro F1) of our hybrid model on Subtask A are 0.329 (HybridE), 0.328 (HybridW), on Subtask B are 0.507 (HybridE), 0.512 (HybridW), and on Subtask C are 0.309 (HybridE), 0.311 (HybridW).</abstract>
      <url hash="78e353cb">2020.semeval-1.113</url>
      <bibkey>shrestha-rusert-2020-nlp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.113</doi>
    </paper>
    <paper id="114">
      <title><fixed-case>NUAA</fixed-case>-<fixed-case>QMUL</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Utilizing <fixed-case>BERT</fixed-case> and <fixed-case>D</fixed-case>ense<fixed-case>N</fixed-case>et for <fixed-case>I</fixed-case>nternet Meme Emotion Analysis</title>
      <author><first>Xiaoyu</first><last>Guo</last></author>
      <author><first>Jing</first><last>Ma</last></author>
      <author><first>Arkaitz</first><last>Zubiaga</last></author>
      <pages>901–907</pages>
      <abstract>This paper describes our contribution to SemEval 2020 Task 8: Memotion Analysis. Our system learns multi-modal embeddings from text and images in order to classify Internet memes by sentiment. Our model learns text embeddings using BERT and extracts features from images with DenseNet, subsequently combining both features through concatenation. We also compare our results with those produced by DenseNet, ResNet, BERT, and BERT-ResNet. Our results show that image classification models have the potential to help classifying memes, with DenseNet outperforming ResNet. Adding text features is however not always helpful for Memotion Analysis.</abstract>
      <url hash="cb387b74">2020.semeval-1.114</url>
      <bibkey>guo-etal-2020-nuaa</bibkey>
      <doi>10.18653/v1/2020.semeval-1.114</doi>
      <pwccode url="https://github.com/xxxxxxxxy/Memotion-Analysis" additional="false">xxxxxxxxy/Memotion-Analysis</pwccode>
    </paper>
    <paper id="115">
      <title><fixed-case>PRHLT</fixed-case>-<fixed-case>UPV</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Study of Multimodal Techniques for Memes Analysis</title>
      <author><first>Gretel Liz</first><last>De la Peña Sarracén</last></author>
      <author><first>Paolo</first><last>Rosso</last></author>
      <author><first>Anastasia</first><last>Giachanou</last></author>
      <pages>908–915</pages>
      <abstract>This paper describes the system submitted by the PRHLT-UPV team for the task 8 of SemEval-2020: Memotion Analysis. We propose a multimodal model that combines pretrained models of the BERT and VGG architectures. The BERT model is used to process the textual information and VGG the images. The multimodal model is used to classify memes according to the presence of offensive, sarcastic, humorous and motivating content. Also, a sentiment analysis of memes is carried out with the proposed model. In the experiments, the model is compared with other approaches to analyze the relevance of the multimodal model. The results show encouraging performances on the final leaderboard of the competition, reaching good positions in the ranking of systems.</abstract>
      <url hash="90697e9e">2020.semeval-1.115</url>
      <bibkey>de-la-pena-sarracen-etal-2020-prhlt</bibkey>
      <doi>10.18653/v1/2020.semeval-1.115</doi>
    </paper>
    <paper id="116">
      <title><fixed-case>YNU</fixed-case>-<fixed-case>HPCC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Using a Parallel-Channel Model for Memotion Analysis</title>
      <author><first>Li</first><last>Yuan</last></author>
      <author><first>Jin</first><last>Wang</last></author>
      <author><first>Xuejie</first><last>Zhang</last></author>
      <pages>916–921</pages>
      <abstract>this paper proposed a parallel-channel model to process the textual and visual information in memes and then analyze the sentiment polarity of memes. In the shared task of identifying and categorizing memes, we preprocess the dataset according to the language behaviors on social media. Then, we adapt and fine-tune the Bidirectional Encoder Representations from Transformers (BERT), and two types of convolutional neural network models (CNNs) were used to extract the features from the pictures. We applied an ensemble model that combined the BiLSTM, BIGRU, and Attention models to perform cross domain suggestion mining. The officially released results show that our system performs better than the baseline algorithm</abstract>
      <url hash="6c73464a">2020.semeval-1.116</url>
      <bibkey>yuan-etal-2020-ynu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.116</doi>
      <pwccode url="https://github.com/YuanLi95/Semveal2020-Task8-emotion-analysis" additional="false">YuanLi95/Semveal2020-Task8-emotion-analysis</pwccode>
    </paper>
    <paper id="117">
      <title><fixed-case>CS</fixed-case>-Embed at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: The Effectiveness of Code-switched Word Embeddings for Sentiment Analysis</title>
      <author><first>Frances Adriana</first><last>Laureano De Leon</last></author>
      <author><first>Florimond</first><last>Guéniat</last></author>
      <author><first>Harish</first><last>Tayyar Madabushi</last></author>
      <pages>922–927</pages>
      <abstract>The growing popularity and applications of sentiment analysis of social media posts has naturally led to sentiment analysis of posts written in multiple languages, a practice known as code-switching. While recent research into code-switched posts has focused on the use of multilingual word embeddings, these embeddings were not trained on code-switched data. In this work, we present word-embeddings trained on code-switched tweets, specifically those that make use of Spanish and English, known as Spanglish. We explore the embedding space to discover how they capture the meanings of words in both languages. We test the effectiveness of these embeddings by participating in SemEval 2020 Task 9: <i>Sentiment Analysis on Code-Mixed Social Media Text</i>. We utilised them to train a sentiment classifier that achieves an F-1 score of 0.722. This is higher than the baseline for the competition of 0.656, with our team (codalab username francesita) ranking 14 out of 29 participating teams, beating the baseline.</abstract>
      <url hash="5aa787f3">2020.semeval-1.117</url>
      <bibkey>laureano-de-leon-etal-2020-cs</bibkey>
      <doi>10.18653/v1/2020.semeval-1.117</doi>
      <pwccode url="https://github.com/francesita/CS-Embed-SemEval2020" additional="false">francesita/CS-Embed-SemEval2020</pwccode>
    </paper>
    <paper id="118">
      <title><fixed-case>FII</fixed-case>-<fixed-case>UAIC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Sentiment Analysis for Code-Mixed Social Media Text Using <fixed-case>CNN</fixed-case></title>
      <author><first>Lavinia</first><last>Aparaschivei</last></author>
      <author><first>Andrei</first><last>Palihovici</last></author>
      <author><first>Daniela</first><last>Gîfu</last></author>
      <pages>928–933</pages>
      <abstract>The “Sentiment Analysis for Code-Mixed Social Media Text” task at the SemEval 2020 competition focuses on sentiment analysis in code-mixed social media text , specifically, on the combination of English with Spanish (Spanglish) and Hindi (Hinglish). In this paper, we present a system able to classify tweets, from Spanish and English languages, into positive, negative and neutral. Firstly, we built a classifier able to provide corresponding sentiment labels. Besides the sentiment labels, we provide the language labels at the word level. Secondly, we generate a word-level representation, using Convolutional Neural Network (CNN) architecture. Our solution indicates promising results for the Sentimix Spanglish-English task (0.744), the team, Lavinia_Ap, occupied the 9th place. However, for the Sentimix Hindi-English task (0.324) the results have to be improved.</abstract>
      <url hash="5bc816a5">2020.semeval-1.118</url>
      <bibkey>aparaschivei-etal-2020-fii</bibkey>
      <doi>10.18653/v1/2020.semeval-1.118</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="119">
      <title><fixed-case>H</fixed-case>inglish<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Fine-tuned Language Models for <fixed-case>H</fixed-case>inglish Sentiment Detection</title>
      <author><first>Meghana</first><last>Bhange</last></author>
      <author><first>Nirant</first><last>Kasliwal</last></author>
      <pages>934–939</pages>
      <abstract>Sentiment analysis for code-mixed social media text continues to be an under-explored area. This work adds two common approaches: fine-tuning large transformer models and sample efficient methods like ULMFiT. Prior work demonstrates the efficacy of classical ML methods for polarity detection. Fine-tuned general-purpose language representation models, such as those of the BERT family are benchmarked along with classical machine learning and ensemble methods. We show that NB-SVM beats RoBERTa by 6.2% (relative) F1. The best performing model is a majority-vote ensemble which achieves an F1 of 0.707. The leaderboard submission was made under the codalab username nirantk, with F1 of 0.689.</abstract>
      <url hash="42351e9b">2020.semeval-1.119</url>
      <bibkey>bhange-kasliwal-2020-hinglishnlp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.119</doi>
      <pwccode url="https://github.com/NirantK/Hinglish" additional="true">NirantK/Hinglish</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="120">
      <title><fixed-case>HPCC</fixed-case>-<fixed-case>YNU</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: A Bilingual Vector Gating Mechanism for Sentiment Analysis of Code-Mixed Text</title>
      <author><first>Jun</first><last>Kong</last></author>
      <author><first>Jin</first><last>Wang</last></author>
      <author><first>Xuejie</first><last>Zhang</last></author>
      <pages>940–945</pages>
      <abstract>It is fairly common to use code-mixing on a social media platform to express opinions and emotions in multilingual societies. The purpose of this task is to detect the sentiment of code-mixed social media text. Code-mixed text poses a great challenge for the traditional NLP system, which currently uses monolingual resources to deal with the problem of multilingual mixing. This task has been solved in the past using lexicon lookup in respective sentiment dictionaries and using a long short-term memory (LSTM) neural network for monolingual resources. In this paper, we present a system that uses a bilingual vector gating mechanism for bilingual resources to complete the task. The model consists of two main parts: the vector gating mechanism, which combines the character and word levels, and the attention mechanism, which extracts the important emotional parts of the text. The results show that the proposed system outperforms the baseline algorithm. We achieved fifth place in Spanglish and 19th place in Hinglish.</abstract>
      <url hash="d5724f64">2020.semeval-1.120</url>
      <bibkey>kong-etal-2020-hpcc</bibkey>
      <doi>10.18653/v1/2020.semeval-1.120</doi>
      <pwccode url="https://github.com/JunKong5/Semveal2020-task9" additional="false">JunKong5/Semveal2020-task9</pwccode>
    </paper>
    <paper id="121">
      <title><fixed-case>IIITG</fixed-case>-<fixed-case>ADBU</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: <fixed-case>SVM</fixed-case> for Sentiment Analysis of <fixed-case>E</fixed-case>nglish-<fixed-case>H</fixed-case>indi Code-Mixed Text</title>
      <author><first>Arup</first><last>Baruah</last></author>
      <author><first>Kaushik</first><last>Das</last></author>
      <author><first>Ferdous</first><last>Barbhuiya</last></author>
      <author><first>Kuntal</first><last>Dey</last></author>
      <pages>946–950</pages>
      <abstract>In this paper, we present the results that the team IIITG-ADBU (codalab username ‘abaruah’) obtained in the SentiMix task (Task 9) of the International Workshop on Semantic Evaluation 2020 (SemEval 2020). This task required the detection of sentiment in code-mixed Hindi-English tweets. Broadly, we performed two sets of experiments for this task. The first experiment was performed using the multilingual BERT classifier and the second set of experiments was performed using SVM classifiers. The character-based SVM classifier obtained the best F1 score of 0.678 in the test set with a rank of 21 among 62 participants. The performance of the multilingual BERT classifier was quite comparable with the SVM classifier on the development set. However, on the test set it obtained an F1 score of 0.342.</abstract>
      <url hash="39895c40">2020.semeval-1.121</url>
      <bibkey>baruah-etal-2020-iiitg-adbu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.121</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="122">
      <title><fixed-case>MSR</fixed-case> <fixed-case>I</fixed-case>ndia at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Multilingual Models Can Do Code-Mixing Too</title>
      <author><first>Anirudh</first><last>Srinivasan</last></author>
      <pages>951–956</pages>
      <abstract>In this paper, we present our system for the SemEval 2020 task on code-mixed sentiment analysis. Our system makes use of large transformer based multilingual embeddings like mBERT. Recent work has shown that these models posses the ability to solve code-mixed tasks in addition to their originally demonstrated cross-lingual abilities. We evaluate the stock versions of these models for the sentiment analysis task and also show that their performance can be improved by using unlabelled code-mixed data. Our submission (username Genius1237) achieved the second rank on the English-Hindi subtask with an F1 score of 0.726.</abstract>
      <url hash="d7e1efe5">2020.semeval-1.122</url>
      <bibkey>srinivasan-2020-msr</bibkey>
      <doi>10.18653/v1/2020.semeval-1.122</doi>
    </paper>
    <paper id="123">
      <title><fixed-case>NLP</fixed-case>-<fixed-case>CIC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Analysing Sentiment in Code-switching Language Using a Simple Deep-learning Classifier</title>
      <author><first>Jason</first><last>Angel</last></author>
      <author><first>Segun Taofeek</first><last>Aroyehun</last></author>
      <author><first>Antonio</first><last>Tamayo</last></author>
      <author><first>Alexander</first><last>Gelbukh</last></author>
      <pages>957–962</pages>
      <abstract>Code-switching is a phenomenon in which two or more languages are used in the same message. Nowadays, it is quite common to find messages with languages mixed in social media. This phenomenon presents a challenge for sentiment analysis. In this paper, we use a standard convolutional neural network model to predict the sentiment of tweets in a blend of Spanish and English languages. Our simple approach achieved a F1-score of 0:71 on test set on the competition. We analyze our best model capabilities and perform error analysis to expose important difficulties for classifying sentiment in a code-switching setting.</abstract>
      <url hash="de54a9f8">2020.semeval-1.123</url>
      <bibkey>angel-etal-2020-nlp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.123</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="124">
      <title>Palomino-Ochoa at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Robust System Based on Transformer for Code-Mixed Sentiment Classification</title>
      <author><first>Daniel</first><last>Palomino</last></author>
      <author><first>José</first><last>Ochoa-Luna</last></author>
      <pages>963–967</pages>
      <abstract>We present a transfer learning system to perform a mixed Spanish-English sentiment classification task. Our proposal uses the state-of-the-art language model BERT and embed it within a ULMFiT transfer learning pipeline. This combination allows us to predict the polarity detection of code-mixed (English-Spanish) tweets. Thus, among 29 submitted systems, our approach (referred to as dplominop) is ranked 4th on the Sentimix Spanglish test set of SemEval 2020 Task 9. In fact, our system yields the weighted-F1 score value of 0.755 which can be easily reproduced — the source code and implementation details are made available.</abstract>
      <url hash="aff7d188">2020.semeval-1.124</url>
      <bibkey>palomino-ochoa-luna-2020-palomino</bibkey>
      <doi>10.18653/v1/2020.semeval-1.124</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="125">
      <title><fixed-case>ULD</fixed-case>@<fixed-case>NUIG</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Generative Morphemes with an Attention Model for Sentiment Analysis in Code-Mixed Text</title>
      <author><first>Koustava</first><last>Goswami</last></author>
      <author><first>Priya</first><last>Rani</last></author>
      <author><first>Bharathi Raja</first><last>Chakravarthi</last></author>
      <author><first>Theodorus</first><last>Fransen</last></author>
      <author><first>John P.</first><last>McCrae</last></author>
      <pages>968–974</pages>
      <abstract>Code mixing is a common phenomena in multilingual societies where people switch from one language to another for various reasons. Recent advances in public communication over different social media sites have led to an increase in the frequency of code-mixed usage in written language. In this paper, we present the Generative Morphemes with Attention (GenMA) Model sentiment analysis system contributed to SemEval 2020 Task 9 SentiMix. The system aims to predict the sentiments of the given English-Hindi code-mixed tweets without using word-level language tags instead inferring this automatically using a morphological model. The system is based on a novel deep neural network (DNN) architecture, which has outperformed the baseline F1-score on the test data-set as well as the validation data-set. Our results can be found under the user name “koustava” on the “Sentimix Hindi English” page.</abstract>
      <url hash="caa55042">2020.semeval-1.125</url>
      <bibkey>goswami-etal-2020-uld</bibkey>
      <doi>10.18653/v1/2020.semeval-1.125</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="126">
      <title><fixed-case>XLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Cross-lingual Models with Focal Loss for Sentiment Analysis of Code-Mixing Language</title>
      <author><first>Yili</first><last>Ma</last></author>
      <author><first>Liang</first><last>Zhao</last></author>
      <author><first>Jie</first><last>Hao</last></author>
      <pages>975–980</pages>
      <abstract>In this paper, we present an approach for sentiment analysis in code-mixed language on twitter defined in SemEval-2020 Task 9. Our team (referred as LiangZhao) employ different multilingual models with weighted loss focused on complexity of code-mixing in sentence, in which the best model achieved f1-score of 0.806 and ranked 1st of subtask- Sentimix Spanglish. The performance of method is analyzed and each component of our architecture is demonstrated.</abstract>
      <url hash="f9bd6055">2020.semeval-1.126</url>
      <bibkey>ma-etal-2020-xlp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.126</doi>
    </paper>
    <paper id="127">
      <title><fixed-case>A</fixed-case>mobee at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Regularization of Language Model Based Classifiers</title>
      <author><first>Alon</first><last>Rozental</last></author>
      <author><first>Dadi</first><last>Biton</last></author>
      <author><first>Ido</first><last>Blank</last></author>
      <pages>981–985</pages>
      <abstract>This paper describes Amobee’s participation in SemEval-2020 task 7: “Assessing Humor in Edited News Headlines”, sub-tasks 1 and 2. The goal of this task was to estimate the funniness of human modified news headlines. in this paper we present methods to fine-tune and ensemble various language models (LM) based classifiers to for this task. This technique used for both sub-tasks and reached the second place (out of 49) in sub-tasks 1 with RMSE score of 0.5, and the second (out of 32) place in sub-task 2 with accuracy of 66% without using any additional data except the official training set.</abstract>
      <url hash="21ec5024">2020.semeval-1.127</url>
      <bibkey>rozental-etal-2020-amobee</bibkey>
      <doi>10.18653/v1/2020.semeval-1.127</doi>
    </paper>
    <paper id="128">
      <title><fixed-case>D</fixed-case>uluth at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Using Surprise as a Key to Unlock Humorous Headlines</title>
      <author><first>Shuning</first><last>Jin</last></author>
      <author><first>Yue</first><last>Yin</last></author>
      <author><first>XianE</first><last>Tang</last></author>
      <author><first>Ted</first><last>Pedersen</last></author>
      <pages>986–994</pages>
      <abstract>We use pretrained transformer-based language models in SemEval-2020 Task 7: Assessing the Funniness of Edited News Headlines. Inspired by the incongruity theory of humor, we use a contrastive approach to capture the surprise in the edited headlines. In the official evaluation, our system gets 0.531 RMSE in Subtask 1, 11th among 49 submissions. In Subtask 2, our system gets 0.632 accuracy, 9th among 32 submissions.</abstract>
      <url hash="54757d82">2020.semeval-1.128</url>
      <bibkey>jin-etal-2020-duluth</bibkey>
      <doi>10.18653/v1/2020.semeval-1.128</doi>
      <pwccode url="https://github.com/dora-tang/SemEval-2020-Task-7" additional="false">dora-tang/SemEval-2020-Task-7</pwccode>
    </paper>
    <paper id="129">
      <title><fixed-case>ECNU</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Assessing Humor in Edited News Headlines Using <fixed-case>B</fixed-case>i<fixed-case>LSTM</fixed-case> with Attention</title>
      <author><first>Tiantian</first><last>Zhang</last></author>
      <author><first>Zhixuan</first><last>Chen</last></author>
      <author><first>Man</first><last>Lan</last></author>
      <pages>995–1000</pages>
      <abstract>In this paper we describe our system submitted to SemEval 2020 Task 7: “Assessing Humor in Edited News Headlines”. We participated in all subtasks, in which the main goal is to predict the mean funniness of the edited headline given the original and the edited headline. Our system involves two similar sub-networks, which generate vector representations for the original and edited headlines respectively. And then we do a subtract operation of the outputs from two sub-networks to predict the funniness of the edited headline.</abstract>
      <url hash="7cdd3cbb">2020.semeval-1.129</url>
      <bibkey>zhang-etal-2020-ecnu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.129</doi>
    </paper>
    <paper id="130">
      <title><fixed-case>ELM</fixed-case>o-<fixed-case>NB</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Assessing Sense of Humor in <fixed-case>E</fixed-case>dited<fixed-case>N</fixed-case>ews Headlines Using <fixed-case>ELM</fixed-case>o and <fixed-case>NB</fixed-case></title>
      <author><first>Enas</first><last>Khwaileh</last></author>
      <author><first>Muntaha A.</first><last>Al-As’ad</last></author>
      <pages>1001–1007</pages>
      <abstract>Our approach is constructed to improve on a couple of aspects; preprocessing with an emphasis on humor sense detection, using embeddings from state-of-the-art language model(Elmo), and ensembling the results came up with using machine learning model Na ̈ıve Bayes(NB) with a deep learning pre-trained models. Elmo-NB participation has scored (0.5642) on the competition leader board, where results were measured by Root Mean Squared Error (RMSE).</abstract>
      <url hash="578f4d22">2020.semeval-1.130</url>
      <bibkey>khwaileh-al-asad-2020-elmo</bibkey>
      <doi>10.18653/v1/2020.semeval-1.130</doi>
    </paper>
    <paper id="131">
      <title>Ferryman at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Ensemble Model for Assessing Humor in Edited News Headlines</title>
      <author><first>Weilong</first><last>Chen</last></author>
      <author><first>Jipeng</first><last>Li</last></author>
      <author><first>Chenghao</first><last>Huang</last></author>
      <author><first>Wei</first><last>Bai</last></author>
      <author><first>Yanru</first><last>Zhang</last></author>
      <author><first>Yan</first><last>Wang</last></author>
      <pages>1008–1012</pages>
      <abstract>Natural language processing (NLP) has been applied to various fields including text classification and sentiment analysis. In the shared task of assessing the funniness of edited news headlines, which is a part of the SemEval 2020 competition, we preprocess datasets by replacing abbreviation, stemming words, then merge three models including Light Gradient Boosting Machine (LightGBM), Long Short-Term Memory (LSTM), and Bidirectional Encoder Representation from Transformer (BERT) by taking the average to perform the best. Our team Ferryman wins the 9th place in Sub-task 1 of Task 7 - Regression.</abstract>
      <url hash="15f8aaba">2020.semeval-1.131</url>
      <bibkey>chen-etal-2020-ferryman-semeval-2020</bibkey>
      <doi>10.18653/v1/2020.semeval-1.131</doi>
    </paper>
    <paper id="132">
      <title>Funny3 at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Humor Detection of Edited Headlines with <fixed-case>LSTM</fixed-case> and <fixed-case>TFIDF</fixed-case> Neural Network System</title>
      <author><first>Xuefeng</first><last>Luo</last></author>
      <author><first>Kuan</first><last>Tang</last></author>
      <pages>1013–1018</pages>
      <abstract>This paper presents a neural network system where we participate in the first task of SemEval-2020 shared task 7 “Assessing the Funniness of Edited News Headlines”. Our target is to create to neural network model that can predict the funniness of edited headlines. We build our model using a combination of LSTM and TF-IDF, then a feed-forward neural network. The system manages to slightly improve RSME scores regarding our mean score baseline.</abstract>
      <url hash="e6fd220b">2020.semeval-1.132</url>
      <bibkey>luo-tang-2020-funny3</bibkey>
      <doi>10.18653/v1/2020.semeval-1.132</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/humicroedit">Humicroedit</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/sarc">SARC</pwcdataset>
    </paper>
    <paper id="133">
      <title><fixed-case>H</fixed-case>umor<fixed-case>AAC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Assessing the Funniness of Edited News Headlines through Regression and Trump Mentions</title>
      <author><first>Anna-Katharina</first><last>Dick</last></author>
      <author><first>Charlotte</first><last>Weirich</last></author>
      <author><first>Alla</first><last>Kutkina</last></author>
      <pages>1019–1025</pages>
      <abstract>In this paper we describe our contribution to the Semeval-2020 Humor Assessment task. We essentially use three different features that are passed into a ridge regression to determine a funniness score for an edited news headline: statistical, count-based features, semantic features and contextual information. For deciding which one of two given edited headlines is funnier, we additionally use scoring information and logistic regression. Our work was mostly concentrated on investigating features, rather than improving prediction based on pre-trained language models. The resulting system is task-specific, lightweight and performs above the majority baseline. Our experiments indicate that features related to socio-cultural context, in our case mentions of Donald Trump, generally perform better than context-independent features like headline length.</abstract>
      <url hash="d2378d58">2020.semeval-1.133</url>
      <bibkey>dick-etal-2020-humoraac</bibkey>
      <doi>10.18653/v1/2020.semeval-1.133</doi>
    </paper>
    <paper id="134">
      <title><fixed-case>LMML</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: <fixed-case>S</fixed-case>iamese Transformers for Rating Humor in Edited News Headlines</title>
      <author><first>Pramodith</first><last>Ballapuram</last></author>
      <pages>1026–1032</pages>
      <abstract>This paper contains a description of my solution to the problem statement of SemEval 2020: Assessing the Funniness of Edited News Headlines. I propose a Siamese Transformer based approach, coupled with a Global Attention mechanism that makes use of contextual embeddings and focus words, to generate important features that are fed to a 2 layer perceptron to rate the funniness of the edited headline. I detail various experiments to show the performance of the system. The proposed approach outperforms a baseline Bi-LSTM architecture and finished 5th (out of 49 teams) in sub-task 1 and 4th (out of 32 teams) in sub-task 2 of the competition and was the best non-ensemble model in both tasks.</abstract>
      <url hash="743a0690">2020.semeval-1.134</url>
      <bibkey>ballapuram-2020-lmml</bibkey>
      <doi>10.18653/v1/2020.semeval-1.134</doi>
    </paper>
    <paper id="135">
      <title><fixed-case>LT</fixed-case>3 at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Comparing Feature-Based and Transformer-Based Approaches to Detect Funny Headlines</title>
      <author><first>Bram</first><last>Vanroy</last></author>
      <author><first>Sofie</first><last>Labat</last></author>
      <author><first>Olha</first><last>Kaminska</last></author>
      <author><first>Els</first><last>Lefever</last></author>
      <author><first>Veronique</first><last>Hoste</last></author>
      <pages>1033–1040</pages>
      <abstract>This paper presents two different systems for the SemEval shared task 7 on Assessing Humor in Edited News Headlines, sub-task 1, where the aim was to estimate the intensity of humor generated in edited headlines. Our first system is a feature-based machine learning system that combines different types of information (e.g. word embeddings, string similarity, part-of-speech tags, perplexity scores, named entity recognition) in a Nu Support Vector Regressor (NuSVR). The second system is a deep learning-based approach that uses the pre-trained language model RoBERTa to learn latent features in the news headlines that are useful to predict the funniness of each headline. The latter system was also our final submission to the competition and is ranked seventh among the 49 participating teams, with a root-mean-square error (RMSE) of 0.5253.</abstract>
      <url hash="b972a3bd">2020.semeval-1.135</url>
      <bibkey>vanroy-etal-2020-lt3</bibkey>
      <doi>10.18653/v1/2020.semeval-1.135</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/humicroedit">Humicroedit</pwcdataset>
    </paper>
    <paper id="136">
      <title><fixed-case>MLE</fixed-case>ngineer at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: <fixed-case>BERT</fixed-case>-Flair Based Humor Detection Model (<fixed-case>BFH</fixed-case>umor)</title>
      <author><first>Fara</first><last>Shatnawi</last></author>
      <author><first>Malak</first><last>Abdullah</last></author>
      <author><first>Mahmoud</first><last>Hammad</last></author>
      <pages>1041–1048</pages>
      <abstract>Task 7, Assessing the Funniness of Edited News Headlines, in the International Workshop SemEval2020 introduces two sub-tasks to predict the funniness values of edited news headlines from the Reddit website. This paper proposes the BFHumor model of the MLEngineer team that participates in both sub-tasks in this competition. The BFHumor’s model is defined as a BERT-Flair based humor detection model that is a combination of different pre-trained models with various Natural Language Processing (NLP) techniques. The Bidirectional Encoder Representations from Transformers (BERT) regressor is considered the primary pre-trained model in our approach, whereas Flair is the main NLP library. It is worth mentioning that the BFHumor model has been ranked 4th in sub-task1 with a root mean square error (RMSE) value of 0.51966, and it is 0.02 away from the first ranked model. Also, the team is ranked 12th in the sub-task2 with an accuracy of 0.62291, which is 0.05 away from the top-ranked model. Our results indicate that the BFHumor model is one of the top models for detecting humor in the text.</abstract>
      <url hash="6e3f087b">2020.semeval-1.136</url>
      <bibkey>shatnawi-etal-2020-mlengineer</bibkey>
      <doi>10.18653/v1/2020.semeval-1.136</doi>
    </paper>
    <paper id="137">
      <title>Smash at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Optimizing the Hyperparameters of <fixed-case>ERNIE</fixed-case> 2.0 for Humor Ranking and Rating</title>
      <author><first>J. A.</first><last>Meaney</last></author>
      <author><first>Steven</first><last>Wilson</last></author>
      <author><first>Walid</first><last>Magdy</last></author>
      <pages>1049–1054</pages>
      <abstract>The use of pre-trained language models such as BERT and ULMFiT has become increasingly popular in shared tasks, due to their powerful language modelling capabilities. Our entry to SemEval uses ERNIE 2.0, a language model which is pre-trained on a large number of tasks to enrich the semantic and syntactic information learned. ERNIE’s knowledge masking pre-training task is a unique method for learning about named entities, and we hypothesise that it may be of use in a dataset which is built on news headlines and which contains many named entities. We optimize the hyperparameters in a regression and classification model and find that the hyperparameters we selected helped to make bigger gains in the classification model than the regression model.</abstract>
      <url hash="0a1b19a2">2020.semeval-1.137</url>
      <bibkey>meaney-etal-2020-smash</bibkey>
      <doi>10.18653/v1/2020.semeval-1.137</doi>
    </paper>
    <paper id="138">
      <title><fixed-case>SO</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: <fixed-case>D</fixed-case>eep<fixed-case>P</fixed-case>avlov Logistic Regression with <fixed-case>BERT</fixed-case> Embeddings vs <fixed-case>SVR</fixed-case> at Funniness Evaluation</title>
      <author><first>Anita</first><last>Soloveva</last></author>
      <pages>1055–1059</pages>
      <abstract>This paper describes my efforts in evaluating how editing news headlines can make them funnier within the frames of SemEval 2020 Task 7. I participated in both of the sub-tasks: Sub-Task 1 “Regression” and Sub-task 2 “Predict the funnier of the two edited versions of an original headline”. I experimented with a number of different models, but ended up using DeepPavlov logistic regression (LR) with BERT English cased embeddings for the first sub-task and support vector regression model (SVR) for the second. RMSE score obtained for the first task was 0.65099 and accuracy for the second – 0.32915.</abstract>
      <url hash="a7b3d256">2020.semeval-1.138</url>
      <bibkey>soloveva-2020-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.138</doi>
    </paper>
    <paper id="139">
      <title><fixed-case>U</fixed-case>ni<fixed-case>T</fixed-case>uebingen<fixed-case>CL</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Humor Detection in News Headlines</title>
      <author><first>Charlotte</first><last>Ammer</last></author>
      <author><first>Lea</first><last>Grüner</last></author>
      <pages>1060–1065</pages>
      <abstract>This paper describes the work done by the team UniTuebingenCL for the SemEval 2020 Task 7: “Assessing the Funniness of Edited News Headlines”. We participated in both sub-tasks: sub-task A, given the original and the edited headline, predicting the mean funniness of the edited headline; and sub-task B, given the original headline and two edited versions, predicting which edited version is the funnier of the two. A Ridge Regression model using Elmo and Glove embeddings as well as Truncated Singular Value Decomposition was used as the final model. A long short term memory model recurrent network (LSTM) served as another approach for assessing the funniness of a headline. For the first sub-task, we experimented with the extraction of multiple features to achieve lower Root Mean Squared Error. The lowest Root Mean Squared Error achieved was 0.575 for sub-task A, and the highest Accuracy was 0.618 for sub-task B.</abstract>
      <url hash="efcbdf22">2020.semeval-1.139</url>
      <bibkey>ammer-gruner-2020-unituebingencl</bibkey>
      <doi>10.18653/v1/2020.semeval-1.139</doi>
    </paper>
    <paper id="140">
      <title><fixed-case>UTFPR</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Using Co-occurrence Frequencies to Capture Unexpectedness</title>
      <author><first>Gustavo Henrique</first><last>Paetzold</last></author>
      <pages>1066–1070</pages>
      <abstract>We describe the UTFPR system for SemEval-2020’s Task 7: Assessing Humor in Edited News Headlines. Ours is a minimalist unsupervised system that uses word co-occurrence frequencies from large corpora to capture unexpectedness as a mean to capture funniness. Our system placed 22nd on the shared task’s Task 2. We found that our approach requires more text than we used to perform reliably, and that unexpectedness alone is not sufficient to gauge funniness for humorous content that targets a diverse target audience.</abstract>
      <url hash="b9487b83">2020.semeval-1.140</url>
      <bibkey>paetzold-2020-utfpr</bibkey>
      <doi>10.18653/v1/2020.semeval-1.140</doi>
    </paper>
    <paper id="141">
      <title><fixed-case>WUY</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Combining <fixed-case>BERT</fixed-case> and Naive <fixed-case>B</fixed-case>ayes-<fixed-case>SVM</fixed-case> for Humor Assessment in Edited News Headlines</title>
      <author><first>Cheng</first><last>Zhang</last></author>
      <author><first>Hayato</first><last>Yamana</last></author>
      <pages>1071–1076</pages>
      <abstract>This paper describes our participation in SemEval 2020 Task 7 on assessment of humor in edited news headlines, which includes two subtasks, estimating the humor of micro-editd news headlines (subtask A) and predicting the more humorous of the two edited headlines (subtask B). To address these tasks, we propose two systems. The first system adopts a regression-based fine-tuned single-sequence bidirectional encoder representations from transformers (BERT) model with easy data augmentation (EDA), called “BERT+EDA”. The second system adopts a hybrid of a regression-based fine-tuned sequence-pair BERT model and a combined Naive Bayes and support vector machine (SVM) model estimated on term frequency–inverse document frequency (TFIDF) features, called “BERT+NB-SVM”. In this case, no additional training datasets were used, and the BERT+NB-SVM model outperformed BERT+EDA. The official root-mean-square deviation (RMSE) score for subtask A is 0.57369 and ranks 31st out of 48, whereas the best RMSE of BERT+NB-SVM is 0.52429, ranking 7th. For subtask B, we simply use a sequence-pair BERT model, the official accuracy of which is 0.53196 and ranks 25th out of 32.</abstract>
      <url hash="96d21553">2020.semeval-1.141</url>
      <bibkey>zhang-yamana-2020-wuy</bibkey>
      <doi>10.18653/v1/2020.semeval-1.141</doi>
    </paper>
    <paper id="142">
      <title><fixed-case>XSYSIGMA</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 7: Method for Predicting Headlines’ Humor Based on Auxiliary Sentences with <fixed-case>EI</fixed-case>-<fixed-case>BERT</fixed-case></title>
      <author><first>Jian</first><last>Ma</last></author>
      <author><first>ShuYi</first><last>Xie</last></author>
      <author><first>Meizhi</first><last>Jin</last></author>
      <author><first>Jiang</first><last>Lianxin</last></author>
      <author><first>Mo</first><last>Yang</last></author>
      <author><first>Jianping</first><last>Shen</last></author>
      <pages>1077–1084</pages>
      <abstract>This paper describes xsysigma team’s system for SemEval 2020 Task 7: Assessing the Funniness of Edited News Headlines. The target of this task is to assess the funniness changes of news headlines after minor editing and is divided into two subtasks: Subtask 1 is a regression task to detect the humor intensity of the sentence after editing; and Subtask 2 is a classification task to predict funnier of the two edited versions of an original headline. In this paper, we only report our implement of Subtask 2. We first construct sentence pairs with different features for Enhancement Inference BERT(EI-BERT)’s input. We then conduct data augmentation strategy and Pseudo-Label method. After that, we apply feature enhancement interaction on the encoding of each sentence for classification with EI-BERT. Finally, we apply weighted fusion algorithm to the logits results which obtained by different pre-trained models. We achieve 64.5% accuracy in subtask2 and rank the first and the fifth in dev and test dataset 1 , respectively.</abstract>
      <url hash="f4ba935c">2020.semeval-1.142</url>
      <bibkey>ma-etal-2020-xsysigma</bibkey>
      <doi>10.18653/v1/2020.semeval-1.142</doi>
    </paper>
    <paper id="143">
      <title><fixed-case>B</fixed-case>ennett<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Multimodal sentiment classification Using Hybrid Hierarchical Classifier</title>
      <author><first>Ambuje</first><last>Gupta</last></author>
      <author><first>Harsh</first><last>Kataria</last></author>
      <author><first>Souvik</first><last>Mishra</last></author>
      <author><first>Tapas</first><last>Badal</last></author>
      <author><first>Vipul</first><last>Mishra</last></author>
      <pages>1085–1093</pages>
      <abstract>Memotion analysis is a very crucial and important subject in today’s world that is dominated by social media. This paper presents the results and analysis of the SemEval-2020 Task-8: Memotion analysis by team Kraken that qualified as winners for the task. This involved performing multimodal sentiment analysis on memes commonly posted over social media. The task comprised of 3 subtasks, Task A was to find the overall sentiment of a meme and classify it into positive, negative or neutral, Task B was to classify it into the different types which were namely humour, sarcasm, offensive or motivation where a meme could have more than one category, Task C was to further quantify the classifications achieved in task B. An imbalanced data of 6992 rows was utilized for this which contained images (memes), text (extracted OCR) and their annotations in 17 classes provided by the task organisers. In this paper, the authors proposed a hybrid neural Naïve-Bayes Support Vector Machine and logistic regression to solve a multilevel 17 class classification problem. It achieved the best result in Task B i.e 0.70 F1 score. The authors were ranked third in Task B.</abstract>
      <url hash="7297b1ae">2020.semeval-1.143</url>
      <bibkey>gupta-etal-2020-bennettnlp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.143</doi>
    </paper>
    <paper id="144">
      <title><fixed-case>BERT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Using <fixed-case>BERT</fixed-case> to Analyse Meme Emotions</title>
      <author><first>Adithya</first><last>Avvaru</last></author>
      <author><first>Sanath</first><last>Vobilisetty</last></author>
      <pages>1094–1099</pages>
      <abstract>Sentiment analysis, being one of the most sought after research problems within Natural Language Processing (NLP) researchers. The range of problems being addressed by sentiment analysis is increasing. Till now, most of the research focuses on predicting sentiment, or sentiment categories like sarcasm, humor, offense and motivation on text data. But, there is very limited research that is focusing on predicting or analyzing the sentiment of internet memes. We try to address this problem as part of “Task 8 of SemEval 2020: Memotion Analysis”. We have participated in all the three tasks under Memotion Analysis. Our system built using state-of-the-art Transformer-based pre-trained Bidirectional Encoder Representations from Transformers (BERT) performed better compared to baseline models for the two tasks A and C and performed close to the baseline model for task B. In this paper, we present the data used, steps used by us for data cleaning and preparation, the fine-tuning process for BERT based model and finally predict the sentiment or sentiment categories. We found that the sequence models like Long Short Term Memory(LSTM) and its variants performed below par in predicting the sentiments. We also performed a comparative analysis with other Transformer based models like DistilBERT and XLNet.</abstract>
      <url hash="f49a3216">2020.semeval-1.144</url>
      <bibkey>avvaru-vobilisetty-2020-bert</bibkey>
      <doi>10.18653/v1/2020.semeval-1.144</doi>
    </paper>
    <paper id="145">
      <title><fixed-case>CN</fixed-case>-<fixed-case>HIT</fixed-case>-<fixed-case>MI</fixed-case>.<fixed-case>T</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Memotion Analysis Based on <fixed-case>BERT</fixed-case></title>
      <author><first>Zhen</first><last>Li</last></author>
      <author><first>Yaojie</first><last>Zhang</last></author>
      <author><first>Bing</first><last>Xu</last></author>
      <author><first>Tiejun</first><last>Zhao</last></author>
      <pages>1100–1105</pages>
      <abstract>Internet memes emotion recognition is focused by many researchers. In this paper, we adopt BERT and ResNet for evaluation of detecting the emotions of Internet memes. We focus on solving the problem of data imbalance and data contains noise. We use RandAugment to enhance the data of the picture, and use Training Signal Annealing (TSA) to solve the impact of the imbalance of the label. At the same time, a new loss function is designed to ensure that the model is not affected by input noise which will improve the robustness of the model. We participated in sub-task a and our model based on BERT obtains 34.58% macro F1 score, ranking 10/32.</abstract>
      <url hash="77f9a189">2020.semeval-1.145</url>
      <bibkey>li-etal-2020-cn</bibkey>
      <doi>10.18653/v1/2020.semeval-1.145</doi>
    </paper>
    <paper id="146">
      <title><fixed-case>CSECU</fixed-case>_<fixed-case>KDE</fixed-case>_<fixed-case>MA</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: A Neural Attention Model for Memotion Analysis</title>
      <author><first>Abu Nowshed</first><last>Chy</last></author>
      <author><first>Umme Aymun</first><last>Siddiqua</last></author>
      <author><first>Masaki</first><last>Aono</last></author>
      <pages>1106–1111</pages>
      <abstract>A meme is a pictorial representation of an idea or theme. In the age of emerging volume of social media platforms, memes are spreading rapidly from person to person and becoming a trending ways of opinion expression. However, due to the multimodal characteristics of meme contents, detecting and analyzing the underlying emotion of a meme is a formidable task. In this paper, we present our approach for detecting the emotion of a meme defined in the SemEval-2020 Task 8. Our team CSECU_KDE_MA employs an attention-based neural network model to tackle the problem. Upon extracting the text contents from a meme using an optical character reader (OCR), we represent it using the distributed representation of words. Next, we perform the convolution based on multiple kernel sizes to obtain the higher-level feature sequences. The feature sequences are then fed into the attentive time-distributed bidirectional LSTM model to learn the long-term dependencies effectively. Experimental results show that our proposed neural model obtained competitive performance among the participants’ systems.</abstract>
      <url hash="78ff8d8a">2020.semeval-1.146</url>
      <bibkey>chy-etal-2020-csecu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.146</doi>
    </paper>
    <paper id="147">
      <title>Gundapusunil at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Multimodal Memotion Analysis</title>
      <author><first>Sunil</first><last>Gundapu</last></author>
      <author><first>Radhika</first><last>Mamidi</last></author>
      <pages>1112–1119</pages>
      <abstract>Recent technological advancements in the Internet and Social media usage have resulted in the evolution of faster and efficient platforms of communication. These platforms include visual, textual and speech mediums and have brought a unique social phenomenon called Internet memes. Internet memes are in the form of images with witty, catchy, or sarcastic text descriptions. In this paper, we present a multi-modal sentiment analysis system using deep neural networks combining Computer Vision and Natural Language Processing. Our aim is different than the normal sentiment analysis goal of predicting whether a text expresses positive or negative sentiment; instead, we aim to classify the Internet meme as a positive, negative, or neutral, identify the type of humor expressed and quantify the extent to which a particular effect is being expressed. Our system has been developed using CNN and LSTM and outperformed the baseline score.</abstract>
      <url hash="40ec3a17">2020.semeval-1.147</url>
      <bibkey>gundapu-mamidi-2020-gundapusunil</bibkey>
      <doi>10.18653/v1/2020.semeval-1.147</doi>
    </paper>
    <paper id="148">
      <title>Guoym at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Ensemble-based Classification of Visuo-Lingual Metaphor in Memes</title>
      <author><first>Yingmei</first><last>Guo</last></author>
      <author><first>Jinfa</first><last>Huang</last></author>
      <author><first>Yanlong</first><last>Dong</last></author>
      <author><first>Mingxing</first><last>Xu</last></author>
      <pages>1120–1125</pages>
      <abstract>In this paper, we describe our ensemble-based system designed by guoym Team for the SemEval-2020 Task 8, Memotion Analysis. In our system, we utilize five types of representation of data as input of base classifiers to extract information from different aspects. We train five base classifiers for each type of representation using five-fold cross-validation. Then the outputs of these base classifiers are combined through data-based ensemble method and feature-based ensemble method to make full use of all data and representations from different aspects. Our method achieves the performance within the top 2 ranks in the final leaderboard of Memotion Analysis among 36 Teams.</abstract>
      <url hash="97799f8f">2020.semeval-1.148</url>
      <bibkey>guo-etal-2020-guoym</bibkey>
      <doi>10.18653/v1/2020.semeval-1.148</doi>
    </paper>
    <paper id="149">
      <title>Hitachi at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Simple but Effective Modality Ensemble for Meme Emotion Recognition</title>
      <author><first>Terufumi</first><last>Morishita</last></author>
      <author><first>Gaku</first><last>Morio</last></author>
      <author><first>Shota</first><last>Horiguchi</last></author>
      <author><first>Hiroaki</first><last>Ozaki</last></author>
      <author><first>Toshinori</first><last>Miyoshi</last></author>
      <pages>1126–1134</pages>
      <abstract>Users of social networking services often share their emotions via multi-modal content, usually images paired with text embedded in them. SemEval-2020 task 8, Memotion Analysis, aims at automatically recognizing these emotions of so-called internet memes. In this paper, we propose a simple but effective Modality Ensemble that incorporates visual and textual deep-learning models, which are independently trained, rather than providing a single multi-modal joint network. To this end, we first fine-tune four pre-trained visual models (i.e., Inception-ResNet, PolyNet, SENet, and PNASNet) and four textual models (i.e., BERT, GPT-2, Transformer-XL, and XLNet). Then, we fuse their predictions with ensemble methods to effectively capture cross-modal correlations. The experiments performed on dev-set show that both visual and textual features aided each other, especially in subtask-C, and consequently, our system ranked 2nd on subtask-C.</abstract>
      <url hash="10d22014">2020.semeval-1.149</url>
      <bibkey>morishita-etal-2020-hitachi-semeval-2020</bibkey>
      <doi>10.18653/v1/2020.semeval-1.149</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/imagenet">ImageNet</pwcdataset>
    </paper>
    <paper id="150">
      <title><fixed-case>IITK</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Unimodal and Bimodal Sentiment Analysis of <fixed-case>I</fixed-case>nternet Memes</title>
      <author><first>Vishal</first><last>Keswani</last></author>
      <author><first>Sakshi</first><last>Singh</last></author>
      <author><first>Suryansh</first><last>Agarwal</last></author>
      <author><first>Ashutosh</first><last>Modi</last></author>
      <pages>1135–1140</pages>
      <abstract>Social media is abundant in visual and textual information presented together or in isolation. Memes are the most popular form, belonging to the former class. In this paper, we present our approaches for the Memotion Analysis problem as posed in SemEval-2020 Task 8. The goal of this task is to classify memes based on their emotional content and sentiment. We leverage techniques from Natural Language Processing (NLP) and Computer Vision (CV) towards the sentiment classification of internet memes (Subtask A). We consider Bimodal (text and image) as well as Unimodal (text-only) techniques in our study ranging from the Na ̈ıve Bayes classifier to Transformer-based approaches. Our results show that a text-only approach, a simple Feed Forward Neural Network (FFNN) with Word2vec embeddings as input, performs superior to all the others. We stand first in the Sentiment analysis task with a relative improvement of 63% over the baseline macro-F1 score. Our work is relevant to any task concerned with the combination of different modalities.</abstract>
      <url hash="17b4e9cb">2020.semeval-1.150</url>
      <bibkey>keswani-etal-2020-iitk-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.150</doi>
      <pwccode url="https://github.com/vkeswani/IITK_Memotion_Analysis" additional="false">vkeswani/IITK_Memotion_Analysis</pwccode>
    </paper>
    <paper id="151">
      <title>Infotec + <fixed-case>C</fixed-case>entro<fixed-case>GEO</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Deep Learning and Text Categorization approach for Memes classification</title>
      <author><first>Guillermo</first><last>Ruiz</last></author>
      <author><first>Eric S.</first><last>Tellez</last></author>
      <author><first>Daniela</first><last>Moctezuma</last></author>
      <author><first>Sabino</first><last>Miranda-Jiménez</last></author>
      <author><first>Tania</first><last>Ramírez-delReal</last></author>
      <author><first>Mario</first><last>Graff</last></author>
      <pages>1141–1147</pages>
      <abstract>The information shared on social media is increasingly important; both images and text, and maybe the most popular combination of these two kinds of data are the memes. This manuscript describes our participation in Memotion task at SemEval 2020. This task is about to classify the memes in several categories related to the emotional content of them. For the proposed system construction, we used different strategies, and the best ones were based on deep neural networks and a text categorization algorithm. We obtained results analyzing the text and images separately, and also in combination. Our better performance was achieved in Task A, related to polarity classification.</abstract>
      <url hash="844f10c0">2020.semeval-1.151</url>
      <bibkey>ruiz-etal-2020-infotec</bibkey>
      <doi>10.18653/v1/2020.semeval-1.151</doi>
    </paper>
    <paper id="152">
      <title><fixed-case>KAFK</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Extracting Features from Pre-trained Neural Networks to Classify <fixed-case>I</fixed-case>nternet Memes</title>
      <author><first>Kaushik Amar</first><last>Das</last></author>
      <author><first>Arup</first><last>Baruah</last></author>
      <author><first>Ferdous Ahmed</first><last>Barbhuiya</last></author>
      <author><first>Kuntal</first><last>Dey</last></author>
      <pages>1148–1154</pages>
      <abstract>This paper presents two approaches for the internet meme classification challenge of SemEval-2020 Task 8 by Team KAFK (cosec). The first approach uses both text and image features, while the second approach uses only the images. Error analysis of the two approaches shows that using only the images is more robust to the noise in the text on the memes. We utilize pre-trained DistilBERT and EfficientNet to extract features from the text and image of the memes respectively. Our classification systems obtained macro f1 score of 0.3286 for Task A and 0.5005 for Task B.</abstract>
      <url hash="454e16fc">2020.semeval-1.152</url>
      <bibkey>das-etal-2020-kafk</bibkey>
      <doi>10.18653/v1/2020.semeval-1.152</doi>
      <pwccode url="https://github.com/cozek/memotion2020-code" additional="false">cozek/memotion2020-code</pwccode>
    </paper>
    <paper id="153">
      <title><fixed-case>LT</fixed-case>3 at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Multi-Modal Multi-Task Learning for Memotion Analysis</title>
      <author><first>Pranaydeep</first><last>Singh</last></author>
      <author><first>Nina</first><last>Bauwelinck</last></author>
      <author><first>Els</first><last>Lefever</last></author>
      <pages>1155–1162</pages>
      <abstract>Internet memes have become a very popular mode of expression on social media networks today. Their multi-modal nature, caused by a mixture of text and image, makes them a very challenging research object for automatic analysis. In this paper, we describe our contribution to the SemEval-2020 Memotion Analysis Task. We propose a Multi-Modal Multi-Task learning system, which incorporates “memebeddings”, viz. joint text and vision features, to learn and optimize for all three Memotion subtasks simultaneously. The experimental results show that the proposed system constantly outperforms the competition’s baseline, and the system setup with continual learning (where tasks are trained sequentially) obtains the best classification F1-scores.</abstract>
      <url hash="c0a1e6a7">2020.semeval-1.153</url>
      <bibkey>singh-etal-2020-lt3</bibkey>
      <doi>10.18653/v1/2020.semeval-1.153</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/glue">GLUE</pwcdataset>
    </paper>
    <paper id="154">
      <title>Memebusters at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Feature Fusion Model for Sentiment Analysis on Memes Using Transfer Learning</title>
      <author><first>Mayukh</first><last>Sharma</last></author>
      <author><first>Ilanthenral</first><last>Kandasamy</last></author>
      <author><first>W.b.</first><last>Vasantha</last></author>
      <pages>1163–1171</pages>
      <abstract>In this paper, we describe our deep learning system used for SemEval 2020 Task 8: Memotion analysis. We participated in all the subtasks i.e Subtask A: Sentiment classification, Subtask B: Humor classification, and Subtask C: Scales of semantic classes. Similar multimodal architecture was used for each subtask. The proposed architecture makes use of transfer learning for images and text feature extraction. The extracted features are then fused together using stacked bidirectional Long Short Term Memory (LSTM) and Gated Recurrent Unit (GRU) model with attention mechanism for final predictions. We also propose a single model for predicting semantic classes (Subtask B) as well as their scales (Subtask C) by branching the final output of the post LSTM dense layers. Our model was ranked 5 in Subtask B and ranked 8 in Subtask C and performed nicely in Subtask A on the leader board. Our system makes use of transfer learning for feature extraction and fusion of image and text features for predictions.</abstract>
      <url hash="a2867821">2020.semeval-1.154</url>
      <bibkey>sharma-etal-2020-memebusters</bibkey>
      <doi>10.18653/v1/2020.semeval-1.154</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/memotion-analysis">Memotion Analysis</pwcdataset>
    </paper>
    <paper id="155">
      <title><fixed-case>M</fixed-case>emo<fixed-case>SYS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Multimodal Emotion Analysis in Memes</title>
      <author><first>Irina</first><last>Bejan</last></author>
      <pages>1172–1178</pages>
      <abstract>Internet memes are one of the most viral types of content in social media and are equally used in promoting hate speech. Towards a more broad understanding of memes, this paper describes the MemoSys system submitted in Task 8 of SemEval 2020, which aims to classify the sentiment of Internet memes and provide a minimum description of the type of humor it depicts (sarcastic, humorous, offensive, motivational) and its semantic scale. The solution presented covers four deep model architectures which are based on a joint fusion between the VGG16 pre-trained model for extracting visual information and the canonical BERT model or TF-IDF for text understanding. The system placed 5th of 36 participating systems in the task A, offering promising prospects to the use of transfer learning to approach Internet memes understanding.</abstract>
      <url hash="71b7bfbd">2020.semeval-1.155</url>
      <bibkey>bejan-2020-memosys</bibkey>
      <doi>10.18653/v1/2020.semeval-1.155</doi>
    </paper>
    <paper id="156">
      <title><fixed-case>NIT</fixed-case>-Agartala-<fixed-case>NLP</fixed-case>-Team at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Building Multimodal Classifiers to Tackle <fixed-case>I</fixed-case>nternet Humor</title>
      <author><first>Steve Durairaj</first><last>Swamy</last></author>
      <author><first>Shubham</first><last>Laddha</last></author>
      <author><first>Basil</first><last>Abdussalam</last></author>
      <author><first>Debayan</first><last>Datta</last></author>
      <author><first>Anupam</first><last>Jamatia</last></author>
      <pages>1179–1189</pages>
      <abstract>The paper describes the systems submitted to SemEval-2020 Task 8: Memotion by the ‘NIT-Agartala-NLP-Team’. A dataset of 8879 memes was made available by the task organizers to train and test our models. Our systems include a Logistic Regression baseline, a BiLSTM +Attention-based learner and a transfer learning approach with BERT. For the three sub-tasks A, B and C, we attained ranks 24/33, 11/29 and 15/26, respectively. We highlight our difficulties in harnessing image information as well as some techniques and handcrafted features we employ to overcome these issues. We also discuss various modelling issues and theorize possible solutions and reasons as to why these problems persist.</abstract>
      <url hash="a02ae74a">2020.semeval-1.156</url>
      <bibkey>swamy-etal-2020-nit</bibkey>
      <doi>10.18653/v1/2020.semeval-1.156</doi>
    </paper>
    <paper id="157">
      <title><fixed-case>SIS</fixed-case>@<fixed-case>IIITH</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: An Overview of Simple Text Classification Methods for Meme Analysis</title>
      <author><first>Sravani</first><last>Boinepelli</last></author>
      <author><first>Manish</first><last>Shrivastava</last></author>
      <author><first>Vasudeva</first><last>Varma</last></author>
      <pages>1190–1194</pages>
      <abstract>Memes are steadily taking over the feeds of the public on social media. There is always the threat of malicious users on the internet posting offensive content, even through memes. Hence, the automatic detection of offensive images/memes is imperative along with detection of offensive text. However, this is a much more complex task as it involves both visual cues as well as language understanding and cultural/context knowledge. This paper describes our approach to the task of SemEval-2020 Task 8: Memotion Analysis. We chose to participate only in Task A which dealt with Sentiment Classification, which we formulated as a text classification problem. Through our experiments, we explored multiple training models to evaluate the performance of simple text classification algorithms on the raw text obtained after running OCR on meme images. Our submitted model achieved an accuracy of 72.69% and exceeded the existing baseline’s Macro F1 score by 8% on the official test dataset. Apart from describing our official submission, we shall elucidate how different classification models respond to this task.</abstract>
      <url hash="ad908cd7">2020.semeval-1.157</url>
      <bibkey>boinepelli-etal-2020-sis</bibkey>
      <doi>10.18653/v1/2020.semeval-1.157</doi>
    </paper>
    <paper id="158">
      <title><fixed-case>UI</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Text-Image Fusion for Sentiment Classification</title>
      <author><first>Andi</first><last>Suciati</last></author>
      <author><first>Indra</first><last>Budi</last></author>
      <pages>1195–1200</pages>
      <abstract>This paper describes our system, UI, for task A: Sentiment Classification in SemEval-2020 Task 8 Memotion Analysis. We use a common traditional machine learning, which is SVM, by utilizing the combination of text and images features. The data consist text that extracted from memes and the images of memes. We employ n-gram language model for text features and pre-trained model,VGG-16,for image features. After obtaining both features from text and images in form of 2-dimensional arrays, we concatenate and classify the final features using SVM. The experiment results show SVM achieved 35% for its F1 macro, which is 0.132 points or 13.2% above the baseline model.</abstract>
      <url hash="a7aa69c8">2020.semeval-1.158</url>
      <bibkey>suciati-budi-2020-ui</bibkey>
      <doi>10.18653/v1/2020.semeval-1.158</doi>
    </paper>
    <paper id="159">
      <title><fixed-case>U</fixed-case>o<fixed-case>R</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: <fixed-case>G</fixed-case>aussian Mixture Modelling (<fixed-case>GMM</fixed-case>) Based Sampling Approach for Multi-modal Memotion Analysis</title>
      <author><first>Zehao</first><last>Liu</last></author>
      <author><first>Emmanuel</first><last>Osei-Brefo</last></author>
      <author><first>Siyuan</first><last>Chen</last></author>
      <author><first>Huizhi</first><last>Liang</last></author>
      <pages>1201–1207</pages>
      <abstract>Memes are widely used on social media. They usually contain multi-modal information such as images and texts, serving as valuable data sources to analyse opinions and sentiment orientations of online communities. The provided memes data often face an imbalanced data problem, that is, some classes or labelled sentiment categories significantly outnumber other classes. This often results in difficulty in applying machine learning techniques where balanced labelled input data are required. In this paper, a Gaussian Mixture Model sampling method is proposed to tackle the problem of class imbalance for the memes sentiment classification task. To utilise both text and image data, a multi-modal CNN-LSTM model is proposed to jointly learn latent features for positive, negative and neutral category predictions. The experiments show that the re-sampling model can slightly improve the accuracy on the trial data of sub-task A of Task 8. The multi-modal CNN-LSTM model can achieve macro F1 score 0.329 on the test set.</abstract>
      <url hash="13b03497">2020.semeval-1.159</url>
      <bibkey>liu-etal-2020-uor</bibkey>
      <doi>10.18653/v1/2020.semeval-1.159</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/memotion-analysis">Memotion Analysis</pwcdataset>
    </paper>
    <paper id="160">
      <title><fixed-case>UPB</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Joint Textual and Visual Modeling in a Multi-Task Learning Architecture for Memotion Analysis</title>
      <author><first>George-Alexandru</first><last>Vlad</last></author>
      <author><first>George-Eduard</first><last>Zaharia</last></author>
      <author><first>Dumitru-Clementin</first><last>Cercel</last></author>
      <author><first>Costin</first><last>Chiru</last></author>
      <author><first>Stefan</first><last>Trausan-Matu</last></author>
      <pages>1208–1214</pages>
      <abstract>Users from the online environment can create different ways of expressing their thoughts, opinions, or conception of amusement. Internet memes were created specifically for these situations. Their main purpose is to transmit ideas by using combinations of images and texts such that they will create a certain state for the receptor, depending on the message the meme has to send. These posts can be related to various situations or events, thus adding a funny side to any circumstance our world is situated in. In this paper, we describe the system developed by our team for SemEval-2020 Task 8: Memotion Analysis. More specifically, we introduce a novel system to analyze these posts, a multimodal multi-task learning architecture that combines ALBERT for text encoding with VGG-16 for image representation. In this manner, we show that the information behind them can be properly revealed. Our approach achieves good performance on each of the three subtasks of the current competition, ranking 11th for Subtask A (0.3453 macro F1-score), 1st for Subtask B (0.5183 macro F1-score), and 3rd for Subtask C (0.3171 macro F1-score) while exceeding the official baseline results by high margins.</abstract>
      <url hash="b09fb9cd">2020.semeval-1.160</url>
      <bibkey>vlad-etal-2020-upb</bibkey>
      <doi>10.18653/v1/2020.semeval-1.160</doi>
    </paper>
    <paper id="161">
      <title>Urszula Walińska at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 8: Fusion of Text and Image Features Using <fixed-case>LSTM</fixed-case> and <fixed-case>VGG</fixed-case>16 for Memotion Analysis</title>
      <author><first>Urszula</first><last>Walińska</last></author>
      <author><first>Jędrzej</first><last>Potoniec</last></author>
      <pages>1215–1220</pages>
      <abstract>In this paper, we describe the entry to the task of Memotion Analysis. The sentiment analysis of memes task, is motivated by a pervasive problem of offensive content spread in social media, up to the present time. In fact, memes are an important medium of expressing opinion and emotions, therefore they can be hateful at many times. In order to identify emotions expressed by memes we construct a tool based on neural networks and deep learning methods. It takes an advantage of a multi-modal nature of the task and performs fusion of image and text features extracted by models dedicated to this task. Moreover, we show that visual information might be more significant in the sentiment analysis of memes than textual one. Our solution achieved 0.346 macro F1-score in Task A – Sentiment Classification, which brought us to the 7th place in the official rank of the competition.</abstract>
      <url hash="adb06b12">2020.semeval-1.161</url>
      <bibkey>walinska-potoniec-2020-urszula</bibkey>
      <doi>10.18653/v1/2020.semeval-1.161</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/imagenet">ImageNet</pwcdataset>
    </paper>
    <paper id="162">
      <title><fixed-case>BAKSA</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Bolstering <fixed-case>CNN</fixed-case> with Self-Attention for Sentiment Analysis of Code Mixed Text</title>
      <author><first>Ayush</first><last>Kumar</last></author>
      <author><first>Harsh</first><last>Agarwal</last></author>
      <author><first>Keshav</first><last>Bansal</last></author>
      <author><first>Ashutosh</first><last>Modi</last></author>
      <pages>1221–1226</pages>
      <abstract>Sentiment Analysis of code-mixed text has diversified applications in opinion mining ranging from tagging user reviews to identifying social or political sentiments of a sub-population. In this paper, we present an ensemble architecture of convolutional neural net (CNN) and self-attention based LSTM for sentiment analysis of code-mixed tweets. While the CNN component helps in the classification of positive and negative tweets, the self-attention based LSTM, helps in the classification of neutral tweets, because of its ability to identify correct sentiment among multiple sentiment bearing units. We achieved F1 scores of 0.707 (ranked 5th) and 0.725 (ranked 13th) on Hindi-English (Hinglish) and Spanish-English (Spanglish) datasets, respectively. The submissions for Hinglish and Spanglish tasks were made under the usernames ayushk and harsh_6 respectively.</abstract>
      <url hash="c7d202b1">2020.semeval-1.162</url>
      <bibkey>kumar-etal-2020-baksa</bibkey>
      <doi>10.18653/v1/2020.semeval-1.162</doi>
      <pwccode url="https://github.com/keshav22bansal/BAKSA_IITK" additional="false">keshav22bansal/BAKSA_IITK</pwccode>
    </paper>
    <paper id="163">
      <title>C1 at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: <fixed-case>S</fixed-case>enti<fixed-case>M</fixed-case>ix: Sentiment Analysis for Code-Mixed Social Media Text Using Feature Engineering</title>
      <author><first>Laksh</first><last>Advani</last></author>
      <author><first>Clement</first><last>Lu</last></author>
      <author><first>Suraj</first><last>Maharjan</last></author>
      <pages>1227–1232</pages>
      <abstract>In today’s interconnected and multilingual world, code-mixing of languages on social media is a common occurrence. While many Natural Language Processing (NLP) tasks like sentiment analysis are mature and well designed for monolingual text, techniques to apply these tasks to code-mixed text still warrant exploration. This paper describes our feature engineering approach to sentiment analysis in code-mixed social media text for SemEval-2020 Task 9: SentiMix. We tackle this problem by leveraging a set of hand-engineered lexical, sentiment, and metadata fea- tures to design a classifier that can disambiguate between “positive”, “negative” and “neutral” sentiment. With this model we are able to obtain a weighted F1 score of 0.65 for the “Hinglish” task and 0.63 for the “Spanglish” tasks.</abstract>
      <url hash="12909f91">2020.semeval-1.163</url>
      <bibkey>advani-etal-2020-c1</bibkey>
      <doi>10.18653/v1/2020.semeval-1.163</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="164">
      <title>Deep Learning Brasil - <fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Sentiment Analysis of Code-Mixed Tweets Using Ensemble of Language Models</title>
      <author><first>Manoel</first><last>Veríssimo dos Santos Neto</last></author>
      <author><first>Ayrton</first><last>Amaral</last></author>
      <author><first>Nádia</first><last>Silva</last></author>
      <author><first>Anderson</first><last>da Silva Soares</last></author>
      <pages>1233–1238</pages>
      <abstract>In this paper, we describe a methodology to predict sentiment in code-mixed tweets (hindi-english). Our team called verissimo.manoel in CodaLab developed an approach based on an ensemble of four models (MultiFiT, BERT, ALBERT, and XLNET). The final classification algorithm was an ensemble of some predictions of all softmax values from these four models. This architecture was used and evaluated in the context of the SemEval 2020 challenge (task 9), and our system got 72.7% on the F1 score.</abstract>
      <url hash="b0bac4b5">2020.semeval-1.164</url>
      <bibkey>verissimo-dos-santos-neto-etal-2020-deep</bibkey>
      <doi>10.18653/v1/2020.semeval-1.164</doi>
    </paper>
    <paper id="165">
      <title><fixed-case>F</fixed-case>i<fixed-case>SSA</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Fine-tuned for Feelings</title>
      <author><first>Bertelt</first><last>Braaksma</last></author>
      <author><first>Richard</first><last>Scholtens</last></author>
      <author><first>Stan</first><last>van Suijlekom</last></author>
      <author><first>Remy</first><last>Wang</last></author>
      <author><first>Ahmet</first><last>Üstün</last></author>
      <pages>1239–1246</pages>
      <abstract>In this paper, we present our approach for sentiment classification on Spanish-English code-mixed social media data in the SemEval-2020 Task 9. We investigate performance of various pre-trained Transformer models by using different fine-tuning strategies. We explore both monolingual and multilingual models with the standard fine-tuning method. Additionally, we propose a custom model that we fine-tune in two steps: once with a language modeling objective, and once with a task-specific objective. Although two-step fine-tuning improves sentiment classification performance over the base model, the large multilingual XLM-RoBERTa model achieves best weighted F1-score with 0.537 on development data and 0.739 on test data. With this score, our team jupitter placed tenth overall in the competition.</abstract>
      <url hash="430ee719">2020.semeval-1.165</url>
      <bibkey>braaksma-etal-2020-fissa</bibkey>
      <doi>10.18653/v1/2020.semeval-1.165</doi>
      <pwccode url="https://github.com/barfsma/FiSSA" additional="false">barfsma/FiSSA</pwccode>
    </paper>
    <paper id="166">
      <title>Gundapusunil at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Syntactic Semantic <fixed-case>LSTM</fixed-case> Architecture for <fixed-case>SENTI</fixed-case>ment Analysis of Code-<fixed-case>MIX</fixed-case>ed Data</title>
      <author><first>Sunil</first><last>Gundapu</last></author>
      <author><first>Radhika</first><last>Mamidi</last></author>
      <pages>1247–1252</pages>
      <abstract>The phenomenon of mixing the vocabulary and syntax of multiple languages within the same utterance is called Code-Mixing. This is more evident in multilingual societies. In this paper, we have developed a system for SemEval 2020: Task 9 on Sentiment Analysis of Hindi-English code-mixed social media text. Our system first generates two types of embeddings for the social media text. In those, the first one is character level embeddings to encode the character level information and to handle the out-of-vocabulary entries and the second one is FastText word embeddings for capturing morphology and semantics. These two embeddings were passed to the LSTM network and the system outperformed the baseline model.</abstract>
      <url hash="bd6874a3">2020.semeval-1.166</url>
      <bibkey>gundapu-mamidi-2020-gundapusunil-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.166</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="167">
      <title><fixed-case>HCMS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: A Neural Approach to Sentiment Analysis for Code-Mixed Texts</title>
      <author><first>Aditya</first><last>Srivastava</last></author>
      <author><first>V. Harsha</first><last>Vardhan</last></author>
      <pages>1253–1258</pages>
      <abstract>Problems involving code-mixed language are often plagued by a lack of resources and an absence of materials to perform sophisticated transfer learning with. In this paper we describe our submission to the Sentimix Hindi-English task involving sentiment classification of code-mixed texts, and with an F1 score of 67.1%, we demonstrate that simple convolution and attention may well produce reasonable results.</abstract>
      <url hash="571bb625">2020.semeval-1.167</url>
      <bibkey>srivastava-vardhan-2020-hcms</bibkey>
      <doi>10.18653/v1/2020.semeval-1.167</doi>
      <pwccode url="https://github.com/IamAdiSri/hcms-semeval20" additional="false">IamAdiSri/hcms-semeval20</pwccode>
    </paper>
    <paper id="168">
      <title><fixed-case>IIT</fixed-case> <fixed-case>G</fixed-case>andhinagar at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Code-Mixed Sentiment Classification Using Candidate Sentence Generation and Selection</title>
      <author><first>Vivek</first><last>Srivastava</last></author>
      <author><first>Mayank</first><last>Singh</last></author>
      <pages>1259–1264</pages>
      <abstract>Code-mixing is the phenomenon of using multiple languages in the same utterance. It is a frequently used pattern of communication on social media sites such as Facebook, Twitter, etc. Sentiment analysis of the monolingual text is a well-studied task. Code-mixing adds to the challenge of analyzing the sentiment of the text on various platforms such as social media, online gaming, forums, product reviews, etc. We present a candidate sentence generation and selection based approach on top of the Bi-LSTM based neural classifier to classify the Hinglish code-mixed text into one of the three sentiment classes positive, negative, or neutral. The proposed candidate sentence generation and selection based approach show an improvement in the system performance as compared to the Bi-LSTM based neural classifier. We can extend the proposed method to solve other problems with code-mixing in the textual data, such as humor-detection, intent classification, etc.</abstract>
      <url hash="f31d59a2">2020.semeval-1.168</url>
      <bibkey>srivastava-singh-2020-iit</bibkey>
      <doi>10.18653/v1/2020.semeval-1.168</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/phinc">PHINC</pwcdataset>
    </paper>
    <paper id="169">
      <title><fixed-case>IRL</fixed-case>ab_<fixed-case>DAIICT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Machine Learning and Deep Learning Methods for Sentiment Analysis of Code-Mixed Tweets</title>
      <author><first>Apurva</first><last>Parikh</last></author>
      <author><first>Abhimanyu Singh</first><last>Bisht</last></author>
      <author><first>Prasenjit</first><last>Majumder</last></author>
      <pages>1265–1269</pages>
      <abstract>The paper describes systems that our team IRLab_DAIICT employed for the shared task Sentiment Analysis for Code-Mixed Social Media Text in SemEval 2020. We conducted our experiments on a Hindi-English CodeMixed Tweet dataset which was annotated with sentiment labels. F1-score was the official evaluation metric and our best approach, an ensemble of Logistic Regression, Random Forest and BERT, achieved an F1-score of 0.693.</abstract>
      <url hash="c53b0f54">2020.semeval-1.169</url>
      <bibkey>parikh-etal-2020-irlab</bibkey>
      <doi>10.18653/v1/2020.semeval-1.169</doi>
    </paper>
    <paper id="170">
      <title><fixed-case>IUST</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Sentiment Analysis for Code-Mixed Social Media Text Using Deep Neural Networks and Linear Baselines</title>
      <author><first>Soroush</first><last>Javdan</last></author>
      <author><first>Taha</first><last>Shangipour ataei</last></author>
      <author><first>Behrouz</first><last>Minaei-Bidgoli</last></author>
      <pages>1270–1275</pages>
      <abstract>Sentiment Analysis is a well-studied field of Natural Language Processing. However, the rapid growth of social media and noisy content within them poses significant challenges in addressing this problem with well-established methods and tools. One of these challenges is code-mixing, which means using different languages to convey thoughts in social media texts. Our group, with the name of IUST(username: TAHA), participated at the SemEval-2020 shared task 9 on Sentiment Analysis for Code-Mixed Social Media Text, and we have attempted to develop a system to predict the sentiment of a given code-mixed tweet. We used different preprocessing techniques and proposed to use different methods that vary from NBSVM to more complicated deep neural network models. Our best performing method obtains an F1 score of 0.751 for the Spanish-English sub-task and 0.706 over the Hindi-English sub-task.</abstract>
      <url hash="94093d17">2020.semeval-1.170</url>
      <bibkey>javdan-etal-2020-iust</bibkey>
      <doi>10.18653/v1/2020.semeval-1.170</doi>
    </paper>
    <paper id="171">
      <title><fixed-case>JUNLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Sentiment Analysis of <fixed-case>H</fixed-case>indi-<fixed-case>E</fixed-case>nglish Code Mixed Data Using Grid Search Cross Validation</title>
      <author><first>Avishek</first><last>Garain</last></author>
      <author><first>Sainik</first><last>Mahata</last></author>
      <author><first>Dipankar</first><last>Das</last></author>
      <pages>1276–1280</pages>
      <abstract>Code-mixing is a phenomenon which arises mainly in multilingual societies. Multilingual people, who are well versed in their native languages and also English speakers, tend to code-mix using English-based phonetic typing and the insertion of anglicisms in their main language. This linguistic phenomenon poses a great challenge to conventional NLP domains such as Sentiment Analysis, Machine Translation, and Text Summarization, to name a few. In this work, we focus on working out a plausible solution to the domain of Code-Mixed Sentiment Analysis. This work was done as participation in the SemEval-2020 Sentimix Task, where we focused on the sentiment analysis of English-Hindi code-mixed sentences. our username for the submission was “sainik.mahata” and team name was “JUNLP”. We used feature extraction algorithms in conjunction with traditional machine learning algorithms such as SVR and Grid Search in an attempt to solve the task. Our approach garnered an f1-score of 66.2% when tested using metrics prepared by the organizers of the task.</abstract>
      <url hash="612ea82a">2020.semeval-1.171</url>
      <bibkey>garain-etal-2020-junlp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.171</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="172">
      <title><fixed-case>LIMSI</fixed-case>_<fixed-case>UPV</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Recurrent Convolutional Neural Network for Code-mixed Sentiment Analysis</title>
      <author><first>Somnath</first><last>Banerjee</last></author>
      <author><first>Sahar</first><last>Ghannay</last></author>
      <author><first>Sophie</first><last>Rosset</last></author>
      <author><first>Anne</first><last>Vilnat</last></author>
      <author><first>Paolo</first><last>Rosso</last></author>
      <pages>1281–1287</pages>
      <abstract>This paper describes the participation of LIMSI_UPV team in SemEval-2020 Task 9: Sentiment Analysis for Code-Mixed Social Media Text. The proposed approach competed in SentiMix HindiEnglish subtask, that addresses the problem of predicting the sentiment of a given Hindi-English code-mixed tweet. We propose Recurrent Convolutional Neural Network that combines both the recurrent neural network and the convolutional network to better capture the semantics of the text, for code-mixed sentiment analysis. The proposed system obtained 0.69 (best run) in terms of F1 score on the given test data and achieved the 9th place (Codalab username: somban) in the SentiMix Hindi-English subtask.</abstract>
      <url hash="7787e4d7">2020.semeval-1.172</url>
      <bibkey>banerjee-etal-2020-limsi</bibkey>
      <doi>10.18653/v1/2020.semeval-1.172</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="173">
      <title><fixed-case>LT</fixed-case>3 at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Cross-lingual Embeddings for Sentiment Analysis of <fixed-case>H</fixed-case>inglish Social Media Text</title>
      <author><first>Pranaydeep</first><last>Singh</last></author>
      <author><first>Els</first><last>Lefever</last></author>
      <pages>1288–1293</pages>
      <abstract>This paper describes our contribution to the SemEval-2020 Task 9 on Sentiment Analysis for Code-mixed Social Media Text. We investigated two approaches to solve the task of Hinglish sentiment analysis. The first approach uses cross-lingual embeddings resulting from projecting Hinglish and pre-trained English FastText word embeddings in the same space. The second approach incorporates pre-trained English embeddings that are incrementally retrained with a set of Hinglish tweets. The results show that the second approach performs best, with an F1-score of 70.52% on the held-out test data.</abstract>
      <url hash="71239099">2020.semeval-1.173</url>
      <bibkey>singh-lefever-2020-lt3</bibkey>
      <doi>10.18653/v1/2020.semeval-1.173</doi>
    </paper>
    <paper id="174">
      <title><fixed-case>M</fixed-case>eister<fixed-case>M</fixed-case>orxrc at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Fine-Tune Bert and Multitask Learning for Sentiment Analysis of Code-Mixed Tweets</title>
      <author><first>Qi</first><last>Wu</last></author>
      <author><first>Peng</first><last>Wang</last></author>
      <author><first>Chenghao</first><last>Huang</last></author>
      <pages>1294–1297</pages>
      <abstract>Natural language processing (NLP) has been applied to various fields including text classification and sentiment analysis. In the shared task of sentiment analysis of code-mixed tweets, which is a part of the SemEval-2020 competition, we preprocess datasets by replacing emoji and deleting uncommon characters and so on, and then fine-tune the Bidirectional Encoder Representation from Transformers(BERT) to perform the best. After exhausting top3 submissions, Our team MeisterMorxrc achieves an averaged F1 score of 0.730 in this task, and and our codalab username is MeisterMorxrc</abstract>
      <url hash="fadd8bba">2020.semeval-1.174</url>
      <bibkey>wu-etal-2020-meistermorxrc</bibkey>
      <doi>10.18653/v1/2020.semeval-1.174</doi>
    </paper>
    <paper id="175">
      <title><fixed-case>NITS</fixed-case>-<fixed-case>H</fixed-case>inglish-<fixed-case>S</fixed-case>enti<fixed-case>M</fixed-case>ix at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Sentiment Analysis for Code-Mixed Social Media Text Using an Ensemble Model</title>
      <author><first>Subhra Jyoti</first><last>Baroi</last></author>
      <author><first>Nivedita</first><last>Singh</last></author>
      <author><first>Ringki</first><last>Das</last></author>
      <author><first>Thoudam Doren</first><last>Singh</last></author>
      <pages>1298–1303</pages>
      <abstract>Sentiment Analysis refers to the process of interpreting what a sentence emotes and classifying them as positive, negative, or neutral. The widespread popularity of social media has led to the generation of a lot of text data and specifically, in the Indian social media scenario, the code-mixed Hinglish text i.e, the words of Hindi language, written in the Roman script along with other English words is a common sight. The ability to effectively understand the sentiments in these texts is much needed. This paper proposes a system titled NITS-Hinglish to effectively carry out the sentiment analysis of such code-mixed Hinglish text. The system has fared well with a final F-Score of 0.617 on the test data.</abstract>
      <url hash="bc14e35e">2020.semeval-1.175</url>
      <bibkey>baroi-etal-2020-nits</bibkey>
      <doi>10.18653/v1/2020.semeval-1.175</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="176">
      <title>Reed at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Fine-Tuning and Bag-of-Words Approaches to Code-Mixed Sentiment Analysis</title>
      <author><first>Vinay</first><last>Gopalan</last></author>
      <author><first>Mark</first><last>Hopkins</last></author>
      <pages>1304–1309</pages>
      <abstract>We explore the task of sentiment analysis on Hinglish (code-mixed Hindi-English) tweets as participants of Task 9 of the SemEval-2020 competition, known as the SentiMix task. We had two main approaches: 1) applying transfer learning by fine-tuning pre-trained BERT models and 2) training feedforward neural networks on bag-of-words representations. During the evaluation phase of the competition, we obtained an F-score of 71.3% with our best model, which placed 4th out of 62 entries in the official system rankings.</abstract>
      <url hash="05a4a907">2020.semeval-1.176</url>
      <bibkey>gopalan-hopkins-2020-reed</bibkey>
      <doi>10.18653/v1/2020.semeval-1.176</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/glue">GLUE</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="177">
      <title><fixed-case>T</fixed-case>eam_<fixed-case>S</fixed-case>wift at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Tiny Data Specialists through Domain-Specific Pre-training on Code-Mixed Data</title>
      <author><first>Aditya</first><last>Malte</last></author>
      <author><first>Pratik</first><last>Bhavsar</last></author>
      <author><first>Sushant</first><last>Rathi</last></author>
      <pages>1310–1315</pages>
      <abstract>Code-mixing is an interesting phenomenon where the speaker switches between two or more languages in the same text. In this paper, we describe an unconventional approach to tackling the SentiMix Hindi-English challenge (UID: aditya_malte). Instead of directly fine-tuning large contemporary Transformer models, we train our own domain-specific embeddings and make use of them for downstream tasks. We also discuss how this technique provides comparable performance while making for a much more deployable and lightweight model. It should be noted that we have achieved the stated results without using any ensembling techniques, thus respecting a paradigm of efficient and production-ready NLP. All relevant source code shall be made publicly available to encourage the usage and reproduction of the results.</abstract>
      <url hash="c4a37ff9">2020.semeval-1.177</url>
      <bibkey>malte-etal-2020-team</bibkey>
      <doi>10.18653/v1/2020.semeval-1.177</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="178">
      <title><fixed-case>T</fixed-case>ue<fixed-case>M</fixed-case>ix at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Logistic Regression with Linguistic Feature Set</title>
      <author><first>Elizabeth</first><last>Bear</last></author>
      <author><first>Diana Constantina</first><last>Hoefels</last></author>
      <author><first>Mihai</first><last>Manolescu</last></author>
      <pages>1316–1321</pages>
      <abstract>Commonly occurring in settings such as social media platforms, code-mixed content makes the task of identifying sentiment notably more challenging and complex due to the lack of structure and noise present in the data. SemEval-2020 Task 9, SentiMix, was organized with the purpose of detecting the sentiment of a given code-mixed tweet comprising Hindi and English. We tackled this task by comparing the performance of a system, TueMix - a logistic regression algorithm trained with three feature components: TF-IDF n-grams, monolingual sentiment lexicons, and surface features - with a neural network approach. Our results showed that TueMix outperformed the neural network approach and yielded a weighted F1-score of 0.685.</abstract>
      <url hash="58c29d92">2020.semeval-1.178</url>
      <bibkey>bear-etal-2020-tuemix</bibkey>
      <doi>10.18653/v1/2020.semeval-1.178</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="179">
      <title><fixed-case>UPB</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Identifying Sentiment in Code-Mixed Social Media Texts Using Transformers and Multi-Task Learning</title>
      <author><first>George-Eduard</first><last>Zaharia</last></author>
      <author><first>George-Alexandru</first><last>Vlad</last></author>
      <author><first>Dumitru-Clementin</first><last>Cercel</last></author>
      <author><first>Traian</first><last>Rebedea</last></author>
      <author><first>Costin</first><last>Chiru</last></author>
      <pages>1322–1330</pages>
      <abstract>Sentiment analysis is a process widely used in opinion mining campaigns conducted today. This phenomenon presents applications in a variety of fields, especially in collecting information related to the attitude or satisfaction of users concerning a particular subject. However, the task of managing such a process becomes noticeably more difficult when it is applied in cultures that tend to combine two languages in order to express ideas and thoughts. By interleaving words from two languages, the user can express with ease, but at the cost of making the text far less intelligible for those who are not familiar with this technique, but also for standard opinion mining algorithms. In this paper, we describe the systems developed by our team for SemEval-2020 Task 9 that aims to cover two well-known code-mixed languages: Hindi-English and Spanish-English. We intend to solve this issue by introducing a solution that takes advantage of several neural network approaches, as well as pre-trained word embeddings. Our approach (multlingual BERT) achieves promising performance on the Hindi-English task, with an average F1-score of 0.6850, registered on the competition leaderboard, ranking our team 16 out of 62 participants. For the Spanish-English task, we obtained an average F1-score of 0.7064 ranking our team 17th out of 29 participants by using another multilingual Transformer-based model, XLM-RoBERTa.</abstract>
      <url hash="0b8a66fe">2020.semeval-1.179</url>
      <bibkey>zaharia-etal-2020-upb</bibkey>
      <doi>10.18653/v1/2020.semeval-1.179</doi>
    </paper>
    <paper id="180">
      <title>Voice@<fixed-case>SRIB</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Tasks 9 and 12: Stacked Ensemblingmethod for Sentiment and Offensiveness detection in Social Media</title>
      <author><first>Abhishek</first><last>Singh</last></author>
      <author><first>Surya Pratap</first><last>Singh Parmar</last></author>
      <pages>1331–1341</pages>
      <abstract>In social-media platforms such as Twitter, Facebook, and Reddit, people prefer to use code-mixed language such as Spanish-English, Hindi-English to express their opinions. In this paper, we describe different models we used, using the external dataset to train embeddings, ensembling methods for Sentimix, and OffensEval tasks. The use of pre-trained embeddings usually helps in multiple tasks such as sentence classification, and machine translation. In this experiment, we have used our trained code-mixed embeddings and twitter pre-trained embeddings to SemEval tasks. We evaluate our models on macro F1-score, precision, accuracy, and recall on the datasets. We intend to show that hyper-parameter tuning and data pre-processing steps help a lot in improving the scores. In our experiments, we are able to achieve 0.886 F1-Macro on OffenEval Greek language subtask post-evaluation, whereas the highest is 0.852 during the Evaluation Period. We stood third in Spanglish competition with our best F1-score of 0.756. Codalab username is asking28.</abstract>
      <url hash="2d83bc6b">2020.semeval-1.180</url>
      <bibkey>singh-singh-parmar-2020-voice</bibkey>
      <doi>10.18653/v1/2020.semeval-1.180</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/hate-speech-and-offensive-language">Hate Speech and Offensive Language</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/sentimix">SentiMix</pwcdataset>
    </paper>
    <paper id="181">
      <title><fixed-case>WESSA</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Code-Mixed Sentiment Analysis Using Transformers</title>
      <author><first>Ahmed</first><last>Sultan</last></author>
      <author><first>Mahmoud</first><last>Salim</last></author>
      <author><first>Amina</first><last>Gaber</last></author>
      <author><first>Islam</first><last>El Hosary</last></author>
      <pages>1342–1347</pages>
      <abstract>In this paper, we describe our system submitted for SemEval 2020 Task 9, Sentiment Analysis for Code-Mixed Social Media Text alongside other experiments. Our best performing system is a Transfer Learning-based model that fine-tunes XLM-RoBERTa, a transformer-based multilingual masked language model, on monolingual English and Spanish data and Spanish-English code-mixed data. Our system outperforms the official task baseline by achieving a 70.1% average F1-Score on the official leaderboard using the test set. For later submissions, our system manages to achieve a 75.9% average F1-Score on the test set using CodaLab username “ahmed0sultan”.</abstract>
      <url hash="093170e3">2020.semeval-1.181</url>
      <bibkey>sultan-etal-2020-wessa</bibkey>
      <doi>10.18653/v1/2020.semeval-1.181</doi>
    </paper>
    <paper id="182">
      <title>Will_go at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: An Accurate Approach for Sentiment Analysis on <fixed-case>H</fixed-case>indi-<fixed-case>E</fixed-case>nglish Tweets Based on Bert and Pesudo Label Strategy</title>
      <author><first>Wei</first><last>Bao</last></author>
      <author><first>Weilong</first><last>Chen</last></author>
      <author><first>Wei</first><last>Bai</last></author>
      <author><first>Yan</first><last>Zhuang</last></author>
      <author><first>Mingyuan</first><last>Cheng</last></author>
      <author><first>Xiangyu</first><last>Ma</last></author>
      <pages>1348–1353</pages>
      <abstract>Mixing languages are widely used in social media, especially in multilingual societies like India. Detecting the emotions contained in these languages, which is of great significance to the development of society and political trends. In this paper, we propose an ensemble of pesudo-label based Bert model and TFIDF based SGDClassifier model to identify the sentiments of Hindi-English (Hi-En) code-mixed data. The ensemble model combines the strengths of rich semantic information from the Bert model and word frequency information from the probabilistic ngram model to predict the sentiment of a given code-mixed tweet.Finally our team got an average F1 score of 0.731 on the final leaderboard,and our codalab username is will_go.</abstract>
      <url hash="8e125e4d">2020.semeval-1.182</url>
      <bibkey>bao-etal-2020-will-go</bibkey>
      <doi>10.18653/v1/2020.semeval-1.182</doi>
    </paper>
    <paper id="183">
      <title>Zyy1510 Team at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 9: Sentiment Analysis for Code-Mixed Social Media Text with Sub-word Level Representations</title>
      <author><first>Yueying</first><last>Zhu</last></author>
      <author><first>Xiaobing</first><last>Zhou</last></author>
      <author><first>Hongling</first><last>Li</last></author>
      <author><first>Kunjie</first><last>Dong</last></author>
      <pages>1354–1359</pages>
      <abstract>This paper reports the zyy1510 team’s work in the International Workshop on Semantic Evaluation (SemEval-2020) shared task on Sentiment analysis for Code-Mixed (Hindi-English, English-Spanish) Social Media Text. The purpose of this task is to determine the polarity of the text, dividing it into one of the three labels positive, negative and neutral. To achieve this goal, we propose an ensemble model of word n-grams-based Multinomial Naive Bayes (MNB) and sub-word level representations in LSTM (Sub-word LSTM) to identify the sentiments of code-mixed data of Hindi-English and English-Spanish. This ensemble model combines the advantage of rich sequential patterns and the intermediate features after convolution from the LSTM model, and the polarity of keywords from the MNB model to obtain the final sentiment score. We have tested our system on Hindi-English and English-Spanish code-mixed social media data sets released for the task. Our model achieves the F1 score of 0.647 in the Hindi-English task and 0.682 in the English-Spanish task, respectively.</abstract>
      <url hash="fc22ac55">2020.semeval-1.183</url>
      <bibkey>zhu-etal-2020-zyy1510</bibkey>
      <doi>10.18653/v1/2020.semeval-1.183</doi>
    </paper>
    <paper id="184">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: Emphasis Selection for Written Text in Visual Media</title>
      <author><first>Amirreza</first><last>Shirani</last></author>
      <author><first>Franck</first><last>Dernoncourt</last></author>
      <author><first>Nedim</first><last>Lipka</last></author>
      <author><first>Paul</first><last>Asente</last></author>
      <author><first>Jose</first><last>Echevarria</last></author>
      <author><first>Thamar</first><last>Solorio</last></author>
      <pages>1360–1370</pages>
      <abstract>In this paper, we present the main findings and compare the results of SemEval-2020 Task 10, Emphasis Selection for Written Text in Visual Media. The goal of this shared task is to design automatic methods for emphasis selection, i.e. choosing candidates for emphasis in textual content to enable automated design assistance in authoring. The main focus is on short text instances for social media, with a variety of examples, from social media posts to inspirational quotes. Participants were asked to model emphasis using plain text with no additional context from the user or other design considerations. SemEval-2020 Emphasis Selection shared task attracted 197 participants in the early phase and a total of 31 teams made submissions to this task. The highest-ranked submission achieved 0.823 Matchm score. The analysis of systems submitted to the task indicates that BERT and RoBERTa were the most common choice of pre-trained models used, and part of speech tag (POS) was the most useful feature. Full results can be found on the task’s website.</abstract>
      <url hash="ea0a11a3">2020.semeval-1.184</url>
      <bibkey>shirani-etal-2020-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.184</doi>
    </paper>
    <paper id="185">
      <title><fixed-case>IDS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: Does Pre-trained Language Model Know What to Emphasize?</title>
      <author><first>Jaeyoul</first><last>Shin</last></author>
      <author><first>Taeuk</first><last>Kim</last></author>
      <author><first>Sang-goo</first><last>Lee</last></author>
      <pages>1371–1376</pages>
      <abstract>We propose a novel method that enables us to determine words that deserve to be emphasized from written text in visual media, relying only on the information from the self-attention distributions of pre-trained language models (PLMs). With extensive experiments and analyses, we show that 1) our zero-shot approach is superior to a reasonable baseline that adopts TF-IDF and that 2) there exist several attention heads in PLMs specialized for emphasis selection, confirming that PLMs are capable of recognizing important words in sentences.</abstract>
      <url hash="5a4296cd">2020.semeval-1.185</url>
      <bibkey>shin-etal-2020-ids</bibkey>
      <doi>10.18653/v1/2020.semeval-1.185</doi>
    </paper>
    <paper id="186">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Detection of Propaganda Techniques in News Articles</title>
      <author><first>Giovanni</first><last>Da San Martino</last></author>
      <author><first>Alberto</first><last>Barrón-Cedeño</last></author>
      <author><first>Henning</first><last>Wachsmuth</last></author>
      <author><first>Rostislav</first><last>Petrov</last></author>
      <author><first>Preslav</first><last>Nakov</last></author>
      <pages>1377–1414</pages>
      <abstract>We present the results and the main findings of SemEval-2020 Task 11 on Detection of Propaganda Techniques in News Articles. The task featured two subtasks. Subtask SI is about Span Identification: given a plain-text document, spot the specific text fragments containing propaganda. Subtask TC is about Technique Classification: given a specific text fragment, in the context of a full document, determine the propaganda technique it uses, choosing from an inventory of 14 possible propaganda techniques. The task attracted a large number of participants: 250 teams signed up to participate and 44 made a submission on the test set. In this paper, we present the task, analyze the results, and discuss the system submissions and the methods they used. For both subtasks, the best systems used pre-trained Transformers and ensembles.</abstract>
      <award>Best Task Honorable Mention</award>
      <url hash="83ec312e">2020.semeval-1.186</url>
      <bibkey>da-san-martino-etal-2020-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.186</doi>
    </paper>
    <paper id="187">
      <title><fixed-case>A</fixed-case>pplica<fixed-case>AI</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: On <fixed-case>R</fixed-case>o<fixed-case>BERT</fixed-case>a-<fixed-case>CRF</fixed-case>, Span <fixed-case>CLS</fixed-case> and Whether Self-Training Helps Them</title>
      <author><first>Dawid</first><last>Jurkiewicz</last></author>
      <author><first>Łukasz</first><last>Borchmann</last></author>
      <author><first>Izabela</first><last>Kosmala</last></author>
      <author><first>Filip</first><last>Graliński</last></author>
      <pages>1415–1424</pages>
      <abstract>This paper presents the winning system for the propaganda Technique Classification (TC) task and the second-placed system for the propaganda Span Identification (SI) task. The purpose of TC task was to identify an applied propaganda technique given propaganda text fragment. The goal of SI task was to find specific text fragments which contain at least one propaganda technique. Both of the developed solutions used semi-supervised learning technique of self-training. Interestingly, although CRF is barely used with transformer-based language models, the SI task was approached with RoBERTa-CRF architecture. An ensemble of RoBERTa-based models was proposed for the TC task, with one of them making use of Span CLS layers we introduce in the present paper. In addition to describing the submitted systems, an impact of architectural decisions and training schemes is investigated along with remarks regarding training models of the same or better quality with lower computational budget. Finally, the results of error analysis are presented.</abstract>
      <award>Best Paper</award>
      <url hash="f48535c9">2020.semeval-1.187</url>
      <bibkey>jurkiewicz-etal-2020-applicaai</bibkey>
      <doi>10.18653/v1/2020.semeval-1.187</doi>
    </paper>
    <paper id="188">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Multilingual Offensive Language Identification in Social Media (<fixed-case>O</fixed-case>ffens<fixed-case>E</fixed-case>val 2020)</title>
      <author><first>Marcos</first><last>Zampieri</last></author>
      <author><first>Preslav</first><last>Nakov</last></author>
      <author><first>Sara</first><last>Rosenthal</last></author>
      <author><first>Pepa</first><last>Atanasova</last></author>
      <author><first>Georgi</first><last>Karadzhov</last></author>
      <author><first>Hamdy</first><last>Mubarak</last></author>
      <author><first>Leon</first><last>Derczynski</last></author>
      <author><first>Zeses</first><last>Pitenis</last></author>
      <author><first>Çağrı</first><last>Çöltekin</last></author>
      <pages>1425–1447</pages>
      <abstract>We present the results and the main findings of SemEval-2020 Task 12 on Multilingual Offensive Language Identification in Social Media (OffensEval-2020). The task included three subtasks corresponding to the hierarchical taxonomy of the OLID schema from OffensEval-2019, and it was offered in five languages: Arabic, Danish, English, Greek, and Turkish. OffensEval-2020 was one of the most popular tasks at SemEval-2020, attracting a large number of participants across all subtasks and languages: a total of 528 teams signed up to participate in the task, 145 teams submitted official runs on the test data, and 70 teams submitted system description papers.</abstract>
      <url hash="7c06d352">2020.semeval-1.188</url>
      <bibkey>zampieri-etal-2020-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.188</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/dkhate">DKhate</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="189">
      <title>Galileo at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Multi-lingual Learning for Offensive Language Identification Using Pre-trained Language Models</title>
      <author><first>Shuohuan</first><last>Wang</last></author>
      <author><first>Jiaxiang</first><last>Liu</last></author>
      <author><first>Xuan</first><last>Ouyang</last></author>
      <author><first>Yu</first><last>Sun</last></author>
      <pages>1448–1455</pages>
      <abstract>This paper describes Galileo’s performance in SemEval-2020 Task 12 on detecting and categorizing offensive language in social media. For Offensive Language Identification, we proposed a multi-lingual method using Pre-trained Language Models, ERNIE and XLM-R. For offensive language categorization, we proposed a knowledge distillation method trained on soft labels generated by several supervised models. Our team participated in all three sub-tasks. In Sub-task A - Offensive Language Identification, we ranked first in terms of average F1 scores in all languages. We are also the only team which ranked among the top three across all languages. We also took the first place in Sub-task B - Automatic Categorization of Offense Types and Sub-task C - Offence Target Identification.</abstract>
      <url hash="fd7b4056">2020.semeval-1.189</url>
      <bibkey>wang-etal-2020-galileo</bibkey>
      <doi>10.18653/v1/2020.semeval-1.189</doi>
    </paper>
    <paper id="190">
      <title><fixed-case>ERNIE</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: Learning Word Emphasis Selection by Pre-trained Language Model</title>
      <author><first>Zhengjie</first><last>Huang</last></author>
      <author><first>Shikun</first><last>Feng</last></author>
      <author><first>Weiyue</first><last>Su</last></author>
      <author><first>Xuyi</first><last>Chen</last></author>
      <author><first>Shuohuan</first><last>Wang</last></author>
      <author><first>Jiaxiang</first><last>Liu</last></author>
      <author><first>Xuan</first><last>Ouyang</last></author>
      <author><first>Yu</first><last>Sun</last></author>
      <pages>1456–1461</pages>
      <abstract>This paper describes the system designed by ERNIE Team which achieved the first place in SemEval-2020 Task 10: Emphasis Selection For Written Text in Visual Media. Given a sentence, we are asked to find out the most important words as the suggestion for automated design. We leverage the unsupervised pre-training model and finetune these models on our task. After our investigation, we found that the following models achieved an excellent performance in this task: ERNIE 2.0, XLM-ROBERTA, ROBERTA and ALBERT. We combine a pointwise regression loss and a pairwise ranking loss which is more close to the final Match m metric to finetune our models. And we also find that additional feature engineering and data augmentation can help improve the performance. Our best model achieves the highest score of 0.823 and ranks first for all kinds of metrics.</abstract>
      <url hash="98a65683">2020.semeval-1.190</url>
      <bibkey>huang-etal-2020-ernie</bibkey>
      <doi>10.18653/v1/2020.semeval-1.190</doi>
    </paper>
    <paper id="191">
      <title>Aschern at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: It Takes Three to Tango: <fixed-case>R</fixed-case>o<fixed-case>BERT</fixed-case>a, <fixed-case>CRF</fixed-case>, and Transfer Learning</title>
      <author><first>Anton</first><last>Chernyavskiy</last></author>
      <author><first>Dmitry</first><last>Ilvovsky</last></author>
      <author><first>Preslav</first><last>Nakov</last></author>
      <pages>1462–1468</pages>
      <abstract>We describe our system for SemEval-2020 Task 11 on Detection of Propaganda Techniques in News Articles. We developed ensemble models using RoBERTa-based neural architectures, additional CRF layers, transfer learning between the two subtasks, and advanced post-processing to handle the multi-label nature of the task, the consistency between nested spans, repetitions, and labels from similar spans in training. We achieved sizable improvements over baseline fine-tuned RoBERTa models, and the official evaluation ranked our system 3rd (almost tied with the 2nd) out of 36 teams on the span identification subtask with an F1 score of 0.491, and 2nd (almost tied with the 1st) out of 31 teams on the technique classification subtask with an F1 score of 0.62.</abstract>
      <url hash="a197e0fd">2020.semeval-1.191</url>
      <bibkey>chernyavskiy-etal-2020-aschern</bibkey>
      <doi>10.18653/v1/2020.semeval-1.191</doi>
      <pwccode url="https://github.com/aschern/semeval2020_task11" additional="false">aschern/semeval2020_task11</pwccode>
    </paper>
    <paper id="192">
      <title><fixed-case>C</fixed-case>yber<fixed-case>W</fixed-case>all<fixed-case>E</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: An Analysis of Feature Engineering for Ensemble Models for Propaganda Detection</title>
      <author><first>Verena</first><last>Blaschke</last></author>
      <author><first>Maxim</first><last>Korniyenko</last></author>
      <author><first>Sam</first><last>Tureski</last></author>
      <pages>1469–1480</pages>
      <abstract>This paper describes our participation in the SemEval-2020 task Detection of Propaganda Techniques in News Articles. We participate in both subtasks: Span Identification (SI) and Technique Classification (TC). We use a bi-LSTM architecture in the SI subtask and train a complex ensemble model for the TC subtask. Our architectures are built using embeddings from BERT in combination with additional lexical features and extensive label post-processing. Our systems achieve a rank of 8 out of 35 teams in the SI subtask (F1-score: 43.86%) and 8 out of 31 teams in the TC subtask (F1-score: 57.37%).</abstract>
      <url hash="b7208442">2020.semeval-1.192</url>
      <bibkey>blaschke-etal-2020-cyberwalle</bibkey>
      <doi>10.18653/v1/2020.semeval-1.192</doi>
      <pwccode url="https://github.com/cicl-iscl/CyberWallE-propaganda-detection" additional="false">cicl-iscl/CyberWallE-propaganda-detection</pwccode>
    </paper>
    <paper id="193">
      <title>Inno at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Leveraging Pure Transfomer for Multi-Class Propaganda Detection</title>
      <author><first>Dmitry</first><last>Grigorev</last></author>
      <author><first>Vladimir</first><last>Ivanov</last></author>
      <pages>1481–1487</pages>
      <abstract>The paper presents the solution of team ”Inno” to a SEMEVAL 2020 task 11 ”Detection of propaganda techniques in news articles”. The goal of the second subtask is to classify textual segments that correspond to one of the 18 given propaganda techniques in news articles dataset. We tested a pure Transformer-based model with an optimized learning scheme on the ability to distinguish propaganda techniques between each other. Our model showed 0:6 and 0:58 overall F1 score on validation set and test set accordingly and non-zero F1 score on each class on both sets.</abstract>
      <url hash="f79addd6">2020.semeval-1.193</url>
      <bibkey>grigorev-ivanov-2020-inno</bibkey>
      <doi>10.18653/v1/2020.semeval-1.193</doi>
    </paper>
    <paper id="194">
      <title><fixed-case>N</fixed-case>o<fixed-case>P</fixed-case>ropaganda at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: A Borrowed Approach to Sequence Tagging and Text Classification</title>
      <author><first>Ilya</first><last>Dimov</last></author>
      <author><first>Vladislav</first><last>Korzun</last></author>
      <author><first>Ivan</first><last>Smurov</last></author>
      <pages>1488–1494</pages>
      <abstract>This paper describes our contribution to SemEval-2020 Task 11: Detection Of Propaganda Techniques In News Articles. We start with simple LSTM baselines and move to an autoregressive transformer decoder to predict long continuous propaganda spans for the first subtask. We also adopt an approach from relation extraction by enveloping spans mentioned above with special tokens for the second subtask of propaganda technique classification. Our models report an F-score of 44.6% and a micro-averaged F-score of 58.2% for those tasks accordingly.</abstract>
      <url hash="6dbf4bd1">2020.semeval-1.194</url>
      <bibkey>dimov-etal-2020-nopropaganda</bibkey>
      <doi>10.18653/v1/2020.semeval-1.194</doi>
      <pwccode url="https://github.com/hawkeoni/Semeval2020_task11" additional="false">hawkeoni/Semeval2020_task11</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/movienet">MovieNet</pwcdataset>
    </paper>
    <paper id="195">
      <title><fixed-case>NTUAAILS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Propaganda Detection and Classification with bi<fixed-case>LSTM</fixed-case>s and <fixed-case>ELM</fixed-case>o</title>
      <author><first>Anastasios</first><last>Arsenos</last></author>
      <author><first>Georgios</first><last>Siolas</last></author>
      <pages>1495–1501</pages>
      <abstract>This paper describes the NTUAAILS submission for SemEval 2020 Task 11 Detection of Propaganda Techniques in News Articles. This task comprises of two different sub-tasks, namely A: Span Identification (SI), B: Technique Classification (TC). The goal for the SI sub-task is to identify specific fragments, in a given plain text, containing at least one propaganda technique. The TC sub-task aims to identify the applied propaganda technique in a given text fragment. A different model was trained for each sub-task. Our best performing system for the SI task consists of pre-trained ELMo word embeddings followed by residual bidirectional LSTM network. For the TC sub-task pre-trained word embeddings from GloVe fed to a bidirectional LSTM neural network. The models achieved rank 28 among 36 teams with F1 score of 0.335 and rank 25 among 31 teams with 0.463 F1 score for SI and TC sub-tasks respectively. Our results indicate that the proposed deep learning models, although relatively simple in architecture and fast to train, achieve satisfactory results in the tasks on hand.</abstract>
      <url hash="a4e2f88c">2020.semeval-1.195</url>
      <bibkey>arsenos-siolas-2020-ntuaails</bibkey>
      <doi>10.18653/v1/2020.semeval-1.195</doi>
    </paper>
    <paper id="196">
      <title>Team <fixed-case>D</fixed-case>o<fixed-case>N</fixed-case>ot<fixed-case>D</fixed-case>istribute at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Features, Finetuning, and Data Augmentation in Neural Models for Propaganda Detection in News Articles</title>
      <author><first>Michael</first><last>Kranzlein</last></author>
      <author><first>Shabnam</first><last>Behzad</last></author>
      <author><first>Nazli</first><last>Goharian</last></author>
      <pages>1502–1508</pages>
      <abstract>This paper presents our systems for SemEval 2020 Shared Task 11: Detection of Propaganda Techniques in News Articles. We participate in both the span identification and technique classification subtasks and report on experiments using different BERT-based models along with handcrafted features. Our models perform well above the baselines for both tasks, and we contribute ablation studies and discussion of our results to dissect the effectiveness of different features and techniques with the goal of aiding future studies in propaganda detection.</abstract>
      <url hash="1cfb7626">2020.semeval-1.196</url>
      <bibkey>kranzlein-etal-2020-team</bibkey>
      <doi>10.18653/v1/2020.semeval-1.196</doi>
    </paper>
    <paper id="197">
      <title><fixed-case>YNU</fixed-case>-<fixed-case>HPCC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: <fixed-case>LSTM</fixed-case> Network for Detection of Propaganda Techniques in News Articles</title>
      <author><first>Jiaxu</first><last>Dao</last></author>
      <author><first>Jin</first><last>Wang</last></author>
      <author><first>Xuejie</first><last>Zhang</last></author>
      <pages>1509–1515</pages>
      <abstract>This paper summarizes our studies on propaganda detection techniques for news articles in the SemEval-2020 task 11. This task is divided into the SI and TC subtasks. We implemented the GloVe word representation, the BERT pretraining model, and the LSTM model architecture to accomplish this task. Our approach achieved good results for both the SI and TC subtasks. The macro- F 1 - score for the SI subtask is 0.406, and the micro- F 1 - score for the TC subtask is 0.505. Our method significantly outperforms the officially released baseline method, and the SI and TC subtasks rank 17th and 22nd, respectively, for the test set. This paper also compares the performances of different deep learning model architectures, such as the Bi-LSTM, LSTM, BERT, and XGBoost models, on the detection of news promotion techniques.</abstract>
      <url hash="edcec0da">2020.semeval-1.197</url>
      <bibkey>dao-etal-2020-ynu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.197</doi>
      <pwccode url="https://github.com/daojiaxu/semeval_11" additional="false">daojiaxu/semeval_11</pwccode>
    </paper>
    <paper id="198">
      <title><fixed-case>A</fixed-case>delaide<fixed-case>C</fixed-case>y<fixed-case>C</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Ensemble of Classifiers for Offensive Language Detection in Social Media</title>
      <author><first>Mahen</first><last>Herath</last></author>
      <author><first>Thushari</first><last>Atapattu</last></author>
      <author><first>Hoang Anh</first><last>Dung</last></author>
      <author><first>Christoph</first><last>Treude</last></author>
      <author><first>Katrina</first><last>Falkner</last></author>
      <pages>1516–1523</pages>
      <abstract>This paper describes the systems our team (AdelaideCyC) has developed for SemEval Task 12 (OffensEval 2020) to detect offensive language in social media. The challenge focuses on three subtasks – offensive language identification (subtask A), offense type identification (subtask B), and offense target identification (subtask C). Our team has participated in all the three subtasks. We have developed machine learning and deep learning-based ensembles of models. We have achieved F1-scores of 0.906, 0.552, and 0.623 in subtask A, B, and C respectively. While our performance scores are promising for subtask A, the results demonstrate that subtask B and C still remain challenging to classify.</abstract>
      <url hash="929044de">2020.semeval-1.198</url>
      <bibkey>herath-etal-2020-adelaidecyc</bibkey>
      <doi>10.18653/v1/2020.semeval-1.198</doi>
    </paper>
    <paper id="199">
      <title><fixed-case>ANDES</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: A Jointly-trained <fixed-case>BERT</fixed-case> Multilingual Model for Offensive Language Detection</title>
      <author><first>Juan Manuel</first><last>Pérez</last></author>
      <author><first>Aymé</first><last>Arango</last></author>
      <author><first>Franco</first><last>Luque</last></author>
      <pages>1524–1531</pages>
      <abstract>This paper describes our participation in SemEval-2020 Task 12: Multilingual Offensive Language Detection. We jointly-trained a single model by fine-tuning Multilingual BERT to tackle the task across all the proposed languages: English, Danish, Turkish, Greek and Arabic. Our single model had competitive results, with a performance close to top-performing systems in spite of sharing the same parameters across all languages. Zero-shot and few-shot experiments were also conducted to analyze the transference performance among these languages. We make our code public for further research</abstract>
      <url hash="92e7f59d">2020.semeval-1.199</url>
      <bibkey>perez-etal-2020-andes</bibkey>
      <doi>10.18653/v1/2020.semeval-1.199</doi>
      <pwccode url="https://github.com/finiteautomata/offenseval2020" additional="false">finiteautomata/offenseval2020</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="200">
      <title><fixed-case>B</fixed-case>ham<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: An Ensemble of Different Word Embeddings and Emotion Transfer Learning for <fixed-case>A</fixed-case>rabic Offensive Language Identification in Social Media</title>
      <author><first>Abdullah I.</first><last>Alharbi</last></author>
      <author><first>Mark</first><last>Lee</last></author>
      <pages>1532–1538</pages>
      <abstract>Social media platforms such as Twitter offer people an opportunity to publish short posts in which they can share their opinions and perspectives. While these applications can be valuable, they can also be exploited to promote negative opinions, insults, and hatred against a person, race, or group. These opinions can be spread to millions of people at the click of a mouse. As such, there is a need to develop mechanisms by which offensive language can be automatically detected in social media channels and managed in a timely manner. To help achieve this goal, SemEval 2020 offered a shared task (OffensEval 2020) that involved the detection of offensive text in Arabic. We propose an ensemble approach that combines different levels of word embedding models and transfers learning from other sources of emotion-related tasks. The proposed system ranked 9th out of the 52 entries within the Arabic Offensive language identification subtask.</abstract>
      <url hash="51b2d1d6">2020.semeval-1.200</url>
      <bibkey>alharbi-lee-2020-bhamnlp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.200</doi>
    </paper>
    <paper id="201">
      <title><fixed-case>FBK</fixed-case>-<fixed-case>DH</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Using Multi-channel <fixed-case>BERT</fixed-case> for Multilingual Offensive Language Detection</title>
      <author><first>Camilla</first><last>Casula</last></author>
      <author><first>Alessio</first><last>Palmero Aprosio</last></author>
      <author><first>Stefano</first><last>Menini</last></author>
      <author><first>Sara</first><last>Tonelli</last></author>
      <pages>1539–1545</pages>
      <abstract>In this paper we present our submission to sub-task A at SemEval 2020 Task 12: Multilingual Offensive Language Identification in Social Media (OffensEval2). For Danish, Turkish, Arabic and Greek, we develop an architecture based on transfer learning and relying on a two-channel BERT model, in which the English BERT and the multilingual one are combined after creating a machine-translated parallel corpus for each language in the task. For English, instead, we adopt a more standard, single-channel approach. We find that, in a multilingual scenario, with some languages having small training data, using parallel BERT models with machine translated data can give systems more stability, especially when dealing with noisy data. The fact that machine translation on social media data may not be perfect does not hurt the overall classification performance.</abstract>
      <url hash="5eb51a5b">2020.semeval-1.201</url>
      <bibkey>casula-etal-2020-fbk</bibkey>
      <doi>10.18653/v1/2020.semeval-1.201</doi>
      <pwccode url="https://github.com/ca-milla/multi-channel-bert" additional="false">ca-milla/multi-channel-bert</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="202">
      <title><fixed-case>G</fixed-case>ru<fixed-case>P</fixed-case>a<fixed-case>T</fixed-case>o at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Retraining m<fixed-case>BERT</fixed-case> on Social Media and Fine-tuned Offensive Language Models</title>
      <author><first>Davide</first><last>Colla</last></author>
      <author><first>Tommaso</first><last>Caselli</last></author>
      <author><first>Valerio</first><last>Basile</last></author>
      <author><first>Jelena</first><last>Mitrović</last></author>
      <author><first>Michael</first><last>Granitzer</last></author>
      <pages>1546–1554</pages>
      <abstract>We introduce an approach to multilingual Offensive Language Detection based on the mBERT transformer model. We download extra training data from Twitter in English, Danish, and Turkish, and use it to re-train the model. We then fine-tuned the model on the provided training data and, in some configurations, implement transfer learning approach exploiting the typological relatedness between English and Danish. Our systems obtained good results across the three languages (.9036 for EN, .7619 for DA, and .7789 for TR).</abstract>
      <url hash="09931e41">2020.semeval-1.202</url>
      <bibkey>colla-etal-2020-grupato</bibkey>
      <doi>10.18653/v1/2020.semeval-1.202</doi>
    </paper>
    <paper id="203">
      <title><fixed-case>GUIR</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Domain-Tuned Contextualized Models for Offensive Language Detection</title>
      <author><first>Sajad</first><last>Sotudeh</last></author>
      <author><first>Tong</first><last>Xiang</last></author>
      <author><first>Hao-Ren</first><last>Yao</last></author>
      <author><first>Sean</first><last>MacAvaney</last></author>
      <author><first>Eugene</first><last>Yang</last></author>
      <author><first>Nazli</first><last>Goharian</last></author>
      <author><first>Ophir</first><last>Frieder</last></author>
      <pages>1555–1561</pages>
      <abstract>Offensive language detection is an important and challenging task in natural language processing. We present our submissions to the OffensEval 2020 shared task, which includes three English sub-tasks: identifying the presence of offensive language (Sub-task A), identifying the presence of target in offensive language (Sub-task B), and identifying the categories of the target (Sub-task C). Our experiments explore using a domain-tuned contextualized language model (namely, BERT) for this task. We also experiment with different components and configurations (e.g., a multi-view SVM) stacked upon BERT models for specific sub-tasks. Our submissions achieve F1 scores of 91.7% in Sub-task A, 66.5% in Sub-task B, and 63.2% in Sub-task C. We perform an ablation study which reveals that domain tuning considerably improves the classification performance. Furthermore, error analysis shows common misclassification errors made by our model and outlines research directions for future.</abstract>
      <url hash="f32d0e10">2020.semeval-1.203</url>
      <bibkey>sotudeh-etal-2020-guir</bibkey>
      <doi>10.18653/v1/2020.semeval-1.203</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="204">
      <title><fixed-case>IIITG</fixed-case>-<fixed-case>ADBU</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Comparison of <fixed-case>BERT</fixed-case> and <fixed-case>B</fixed-case>i<fixed-case>LSTM</fixed-case> in Detecting Offensive Language</title>
      <author><first>Arup</first><last>Baruah</last></author>
      <author><first>Kaushik</first><last>Das</last></author>
      <author><first>Ferdous</first><last>Barbhuiya</last></author>
      <author><first>Kuntal</first><last>Dey</last></author>
      <pages>1562–1568</pages>
      <abstract>Task 12 of SemEval 2020 consisted of 3 subtasks, namely offensive language identification (Subtask A), categorization of offense type (Subtask B), and offense target identification (Subtask C). This paper presents the results our classifiers obtained for the English language in the 3 subtasks. The classifiers used by us were BERT and BiLSTM. On the test set, our BERT classifier obtained macro F1 score of 0.90707 for subtask A, and 0.65279 for subtask B. The BiLSTM classifier obtained macro F1 score of 0.57565 for subtask C. The paper also performs an analysis of the errors made by our classifiers. We conjecture that the presence of few misleading instances in the dataset is affecting the performance of the classifiers. Our analysis also discusses the need of temporal context and world knowledge to determine the offensiveness of few comments.</abstract>
      <url hash="64833cb4">2020.semeval-1.204</url>
      <bibkey>baruah-etal-2020-iiitg-adbu-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.204</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/hate-speech-and-offensive-language">Hate Speech and Offensive Language</pwcdataset>
    </paper>
    <paper id="205">
      <title><fixed-case>LT</fixed-case>@<fixed-case>H</fixed-case>elsinki at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Multilingual or Language-specific <fixed-case>BERT</fixed-case>?</title>
      <author><first>Marc</first><last>Pàmies</last></author>
      <author><first>Emily</first><last>Öhman</last></author>
      <author><first>Kaisla</first><last>Kajava</last></author>
      <author><first>Jörg</first><last>Tiedemann</last></author>
      <pages>1569–1575</pages>
      <abstract>This paper presents the different models submitted by the LT@Helsinki team for the SemEval 2020 Shared Task 12. Our team participated in sub-tasks A and C; titled offensive language identification and offense target identification, respectively. In both cases we used the so-called Bidirectional Encoder Representation from Transformer (BERT), a model pre-trained by Google and fine-tuned by us on the OLID and SOLID datasets. The results show that offensive tweet classification is one of several language-based tasks where BERT can achieve state-of-the-art results.</abstract>
      <url hash="5a9d9033">2020.semeval-1.205</url>
      <bibkey>pamies-etal-2020-lt</bibkey>
      <doi>10.18653/v1/2020.semeval-1.205</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="206">
      <title><fixed-case>NLPD</fixed-case>ove at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Improving Offensive Language Detection with Cross-lingual Transfer</title>
      <author><first>Hwijeen</first><last>Ahn</last></author>
      <author><first>Jimin</first><last>Sun</last></author>
      <author><first>Chan Young</first><last>Park</last></author>
      <author><first>Jungyun</first><last>Seo</last></author>
      <pages>1576–1586</pages>
      <abstract>This paper describes our approach to the task of identifying offensive languages in a multilingual setting. We investigate two data augmentation strategies: using additional semi-supervised labels with different thresholds and cross-lingual transfer with data selection. Leveraging the semi-supervised dataset resulted in performance improvements compared to the baseline trained solely with the manually-annotated dataset. We propose a new metric, Translation Embedding Distance, to measure the transferability of instances for cross-lingual data selection. We also introduce various preprocessing steps tailored for social media text along with methods to fine-tune the pre-trained multilingual BERT (mBERT) for offensive language identification. Our multilingual systems achieved competitive results in Greek, Danish, and Turkish at OffensEval 2020.</abstract>
      <url hash="2c6978ba">2020.semeval-1.206</url>
      <bibkey>ahn-etal-2020-nlpdove</bibkey>
      <doi>10.18653/v1/2020.semeval-1.206</doi>
      <pwccode url="https://github.com/hwijeen/OffensEval2020" additional="false">hwijeen/OffensEval2020</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="207">
      <title>Nova-Wang at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: <fixed-case>O</fixed-case>ffens<fixed-case>E</fixed-case>mblert: An Ensemble of<fixed-case>O</fixed-case>ffensive Language Classifiers</title>
      <author><first>Susan</first><last>Wang</last></author>
      <author><first>Zita</first><last>Marinho</last></author>
      <pages>1587–1597</pages>
      <abstract>This paper presents our contribution to the Offensive Language Classification Task (English SubTask A) of Semeval 2020. We propose different Bert models trained on several offensive language classification and profanity datasets, and combine their output predictions in an ensemble model. We experimented with different ensemble approaches, such as SVMs, Gradient boosting, AdaBoosting and Logistic Regression. We further propose an under-sampling approach of the current SOLID dataset, which removed the most uncertain partitions of the dataset, increasing the recall of the dataset. Our best model, an average ensemble of four different Bert models, achieved 11th place out of 82 participants with a macro F1 score of 0.91344 in the English SubTask A.</abstract>
      <url hash="92fcdef8">2020.semeval-1.207</url>
      <bibkey>wang-marinho-2020-nova</bibkey>
      <doi>10.18653/v1/2020.semeval-1.207</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="208">
      <title><fixed-case>NUIG</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Pseudo Labelling for Offensive Content Classification</title>
      <author><first>Shardul</first><last>Suryawanshi</last></author>
      <author><first>Mihael</first><last>Arcan</last></author>
      <author><first>Paul</first><last>Buitelaar</last></author>
      <pages>1598–1604</pages>
      <abstract>This work addresses the classification problem defined by sub-task A (English only) of the OffensEval 2020 challenge. We used a semi-supervised approach to classify given tweets into an offensive (OFF) or not-offensive (NOT) class. As the OffensEval 2020 dataset is loosely labelled with confidence scores given by unsupervised models, we used last year’s offensive language identification dataset (OLID) to label the OffensEval 2020 dataset. Our approach uses a pseudo-labelling method to annotate the current dataset. We trained four text classifiers on the OLID dataset and the classifier with the highest macro-averaged F1-score has been used to pseudo label the OffensEval 2020 dataset. The same model which performed best amongst four text classifiers on OLID dataset has been trained on the combined dataset of OLID and pseudo labelled OffensEval 2020. We evaluated the classifiers with precision, recall and macro-averaged F1-score as the primary evaluation metric on the OLID and OffensEval 2020 datasets. This work is licensed under a Creative Commons Attribution 4.0 International Licence. Licence details: <url>http://creativecommons.org/licenses/by/4.0/</url>.</abstract>
      <url hash="d796fa3e">2020.semeval-1.208</url>
      <bibkey>suryawanshi-etal-2020-nuig</bibkey>
      <doi>10.18653/v1/2020.semeval-1.208</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="209">
      <title><fixed-case>PRHLT</fixed-case>-<fixed-case>UPV</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: <fixed-case>BERT</fixed-case> for Multilingual Offensive Language Detection</title>
      <author><first>Gretel Liz</first><last>De la Peña Sarracén</last></author>
      <author><first>Paolo</first><last>Rosso</last></author>
      <pages>1605–1614</pages>
      <abstract>The present paper describes the system submitted by the PRHLT-UPV team for the task 12 of SemEval-2020: OffensEval 2020. The official title of the task is Multilingual Offensive Language Identification in Social Media, and aims to identify offensive language in texts. The languages included in the task are English, Arabic, Danish, Greek and Turkish. We propose a model based on the BERT architecture for the analysis of texts in English. The approach leverages knowledge within a pre-trained model and performs fine-tuning for the particular task. In the analysis of the other languages the Multilingual BERT is used, which has been pre-trained for a large number of languages. In the experiments, the proposed method for English texts is compared with other approaches to analyze the relevance of the architecture used. Furthermore, simple models for the other languages are evaluated to compare them with the proposed one. The experimental results show that the model based on BERT outperforms other approaches. The main contribution of this work lies in this study, despite not obtaining the first positions in most cases of the competition ranking.</abstract>
      <url hash="07f8ce01">2020.semeval-1.209</url>
      <bibkey>de-la-pena-sarracen-rosso-2020-prhlt</bibkey>
      <doi>10.18653/v1/2020.semeval-1.209</doi>
    </paper>
    <paper id="210">
      <title><fixed-case>PUM</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Aggregation of Transformer-based Models’ Features for Offensive Language Recognition</title>
      <author><first>Piotr</first><last>Janiszewski</last></author>
      <author><first>Mateusz</first><last>Skiba</last></author>
      <author><first>Urszula</first><last>Walińska</last></author>
      <pages>1615–1621</pages>
      <abstract>In this paper, we describe the PUM team’s entry to the SemEval-2020 Task 12. Creating our solution involved leveraging two well-known pretrained models used in natural language processing: BERT and XLNet, which achieve state-of-the-art results in multiple NLP tasks. The models were fine-tuned for each subtask separately and features taken from their hidden layers were combinedand fed into a fully connected neural network. The model using aggregated Transformer featurescan serve as a powerful tool for offensive language identification problem. Our team was ranked7th out of 40 in Sub-task C - Offense target identification with 64.727% macro F1-score and 64thout of 85 in Sub-task A - Offensive language identification (89.726% F1-score).</abstract>
      <url hash="ae58ca90">2020.semeval-1.210</url>
      <bibkey>janiszewski-etal-2020-pum</bibkey>
      <doi>10.18653/v1/2020.semeval-1.210</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="211">
      <title><fixed-case>SINAI</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Offensive Language Identification Exploring Transfer Learning Models</title>
      <author><first>Flor Miriam</first><last>Plaza del Arco</last></author>
      <author><first>M. Dolores</first><last>Molina González</last></author>
      <author><first>Alfonso</first><last>Ureña-López</last></author>
      <author><first>Maite</first><last>Martin</last></author>
      <pages>1622–1627</pages>
      <abstract>This paper describes the participation of SINAI team at Task 12: OffensEval 2: Multilingual Offensive Language Identification in Social Media. In particular, the participation in Sub-task A in English which consists of identifying tweets as offensive or not offensive. We preprocess the dataset according to the language characteristics used on social media. Then, we select a small set from the training set provided by the organizers and fine-tune different Transformerbased models in order to test their effectiveness. Our team ranks 20th out of 85 participants in Subtask-A using the XLNet model.</abstract>
      <url hash="23019e51">2020.semeval-1.211</url>
      <bibkey>plaza-del-arco-etal-2020-sinai</bibkey>
      <doi>10.18653/v1/2020.semeval-1.211</doi>
    </paper>
    <paper id="212">
      <title>Team Oulu at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Multilingual Identification of Offensive Language, Type and Target of <fixed-case>T</fixed-case>witter Post Using Translated Datasets</title>
      <author><first>Md Saroar</first><last>Jahan</last></author>
      <pages>1628–1637</pages>
      <abstract>With the proliferation of social media platforms, anonymous discussions together with easy online access, reports on offensive content have caused serious concern to both authorities and research communities. Although there is extensive research in identifying textual offensive language from online content, the dynamic discourse of social media content, as well as the emergence of new forms of offensive language, especially in a multilingual setting, calls for future research in the issue. In this work, we tackled Task A, B, and C of Offensive Language Challenge at SemEval2020. We handled offensive language in five languages: English, Greek, Danish, Arabic, and Turkish. Specifically, we pre-processed all provided datasets and developed an appropriate strategy to handle Tasks (A, B, &amp; C) for identifying the presence/absence, type and the target of offensive language in social media. For this purpose, we used OLID2019, OLID2020 datasets, and generated new datasets, which we made publicly available. We used the provided unsupervised machine learning implementation for automated annotated datasets and the online Google translation tools to create new datasets as well. We discussed the limitations and the success of our machine learning-based approach for all the five different languages. Our results for identifying offensive posts (Task A) yielded satisfactory accuracy of 0.92 for English, 0.81 for Danish, 0.84 for Turkish, 0.85 for Greek, and 0.89 for Arabic. For the type detection (Task B), the results are significantly higher (.87 accuracy) compared to target detection (Task C), which yields .81 accuracy. Moreover, after using automated Google translation, the overall efficiency improved by 2% for Greek, Turkish, and Danish.</abstract>
      <url hash="f29048a6">2020.semeval-1.212</url>
      <bibkey>jahan-2020-team</bibkey>
      <doi>10.18653/v1/2020.semeval-1.212</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="213">
      <title><fixed-case>UHH</fixed-case>-<fixed-case>LT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Fine-Tuning of Pre-Trained Transformer Networks for Offensive Language Detection</title>
      <author><first>Gregor</first><last>Wiedemann</last></author>
      <author><first>Seid Muhie</first><last>Yimam</last></author>
      <author><first>Chris</first><last>Biemann</last></author>
      <pages>1638–1644</pages>
      <abstract>Fine-tuning of pre-trained transformer networks such as BERT yield state-of-the-art results for text classification tasks. Typically, fine-tuning is performed on task-specific training datasets in a supervised manner. One can also fine-tune in unsupervised manner beforehand by further pre-training the masked language modeling (MLM) task. Hereby, in-domain data for unsupervised MLM resembling the actual classification target dataset allows for domain adaptation of the model. In this paper, we compare current pre-trained transformer networks with and without MLM fine-tuning on their performance for offensive language detection. Our MLM fine-tuned RoBERTa-based classifier officially ranks 1st in the SemEval 2020 Shared Task 12 for the English language. Further experiments with the ALBERT model even surpass this result.</abstract>
      <url hash="aeb6b4e3">2020.semeval-1.213</url>
      <bibkey>wiedemann-etal-2020-uhh</bibkey>
      <doi>10.18653/v1/2020.semeval-1.213</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="214">
      <title><fixed-case>EL</fixed-case>-<fixed-case>BERT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: A Multi-Embedding Ensemble Based Approach for Emphasis Selection in Visual Media</title>
      <author><first>Chandresh</first><last>Kanani</last></author>
      <author><first>Sriparna</first><last>Saha</last></author>
      <author><first>Pushpak</first><last>Bhattacharyya</last></author>
      <pages>1645–1651</pages>
      <abstract>In visual media, text emphasis is the strengthening of words in a text to convey the intent of the author. Text emphasis in visual media is generally done by using different colors, backgrounds, or font for the text; it helps in conveying the actual meaning of the message to the readers. Emphasis selection is the task of choosing candidate words for emphasis, it helps in automatically designing posters and other media contents with written text. If we consider only the text and do not know the intent, then there can be multiple valid emphasis selections. We propose the use of ensembles for emphasis selection to improve over single emphasis selection models. We show that the use of multi-embedding helps in enhancing the results for base models. To show the efficacy of proposed approach we have also done a comparison of our results with state-of-the-art models.</abstract>
      <url hash="a4c4fdbc">2020.semeval-1.214</url>
      <bibkey>kanani-etal-2020-el</bibkey>
      <doi>10.18653/v1/2020.semeval-1.214</doi>
    </paper>
    <paper id="215">
      <title><fixed-case>FPAI</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: A Query Enhanced Model with <fixed-case>R</fixed-case>o<fixed-case>BERT</fixed-case>a for Emphasis Selection</title>
      <author><first>Chenyang</first><last>Guo</last></author>
      <author><first>Xiaolong</first><last>Hou</last></author>
      <author><first>Junsong</first><last>Ren</last></author>
      <author><first>Lianxin</first><last>Jiang</last></author>
      <author><first>Yang</first><last>Mo</last></author>
      <author><first>Haiqin</first><last>Yang</last></author>
      <author><first>Jianping</first><last>Shen</last></author>
      <pages>1652–1657</pages>
      <abstract>This paper describes the model we apply in the SemEval-2020 Task 10. We formalize the task of emphasis selection as a simplified query-based machine reading comprehension (MRC) task, i.e. answering a fixed question of “Find candidates for emphasis”. We propose our subword puzzle encoding mechanism and subword fusion layer to align and fuse subwords. By introducing the semantic prior knowledge of the informative query and some other techniques, we attain the 7th place during the evaluation phase and the first place during train phase.</abstract>
      <url hash="65e6f77d">2020.semeval-1.215</url>
      <bibkey>guo-etal-2020-fpai</bibkey>
      <doi>10.18653/v1/2020.semeval-1.215</doi>
    </paper>
    <paper id="216">
      <title>Hitachi at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: Emphasis Distribution Fusion on Fine-Tuned Language Models</title>
      <author><first>Gaku</first><last>Morio</last></author>
      <author><first>Terufumi</first><last>Morishita</last></author>
      <author><first>Hiroaki</first><last>Ozaki</last></author>
      <author><first>Toshinori</first><last>Miyoshi</last></author>
      <pages>1658–1664</pages>
      <abstract>This paper shows our system for SemEval-2020 task 10, Emphasis Selection for Written Text in Visual Media. Our strategy is two-fold. First, we propose fine-tuning many pre-trained language models, predicting an emphasis probability distribution over tokens. Then, we propose stacking a trainable distribution fusion DistFuse system to fuse the predictions of the fine-tuned models. Experimental results show tha DistFuse is comparable or better when compared with a naive average ensemble. As a result, we were ranked 2nd amongst 31 teams.</abstract>
      <url hash="88f248d8">2020.semeval-1.216</url>
      <bibkey>morio-etal-2020-hitachi</bibkey>
      <doi>10.18653/v1/2020.semeval-1.216</doi>
    </paper>
    <paper id="217">
      <title><fixed-case>IITK</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: Transformers for Emphasis Selection</title>
      <author><first>Vipul</first><last>Singhal</last></author>
      <author><first>Sahil</first><last>Dhull</last></author>
      <author><first>Rishabh</first><last>Agarwal</last></author>
      <author><first>Ashutosh</first><last>Modi</last></author>
      <pages>1665–1670</pages>
      <abstract>We propose an end-to-end model that takes as input the text and corresponding to each word gives the probability of the word to be emphasized. Our results show that transformer-based models are particularly effective in this task. We achieved an evaluation score of 0.810 and were ranked third on the leaderboard.</abstract>
      <url hash="70728873">2020.semeval-1.217</url>
      <bibkey>singhal-etal-2020-iitk</bibkey>
      <doi>10.18653/v1/2020.semeval-1.217</doi>
      <pwccode url="https://github.com/SahilDhull/emphasis_selection" additional="false">SahilDhull/emphasis_selection</pwccode>
    </paper>
    <paper id="218">
      <title><fixed-case>LAST</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: Finding Tokens to Emphasise in Short Written Texts with Precomputed Embedding Models and <fixed-case>L</fixed-case>ight<fixed-case>GBM</fixed-case></title>
      <author><first>Yves</first><last>Bestgen</last></author>
      <pages>1671–1677</pages>
      <abstract>To select tokens to be emphasised in short texts, a system mainly based on precomputed embedding models, such as BERT and ELMo, and LightGBM is proposed. Its performance is low. Additional analyzes suggest that its effectiveness is poor at predicting the highest emphasis scores while they are the most important for the challenge and that it is very sensitive to the specific instances provided during learning.</abstract>
      <url hash="f6a1f955">2020.semeval-1.218</url>
      <bibkey>bestgen-2020-last</bibkey>
      <doi>10.18653/v1/2020.semeval-1.218</doi>
    </paper>
    <paper id="219">
      <title><fixed-case>MIDAS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: Emphasis Selection Using Label Distribution Learning and Contextual Embeddings</title>
      <author><first>Sarthak</first><last>Anand</last></author>
      <author><first>Pradyumna</first><last>Gupta</last></author>
      <author><first>Hemant</first><last>Yadav</last></author>
      <author><first>Debanjan</first><last>Mahata</last></author>
      <author><first>Rakesh</first><last>Gosangi</last></author>
      <author><first>Haimin</first><last>Zhang</last></author>
      <author><first>Rajiv Ratn</first><last>Shah</last></author>
      <pages>1678–1684</pages>
      <abstract>This paper presents our submission to the SemEval 2020 - Task 10 on emphasis selection in written text. We approach this emphasis selection problem as a sequence labeling task where we represent the underlying text with various contextual embedding models. We also employ label distribution learning to account for annotator disagreements. We experiment with the choice of model architectures, trainability of layers, and different contextual embeddings. Our best performing architecture is an ensemble of different models, which achieved an overall matching score of 0.783, placing us 15th out of 31 participating teams. Lastly, we analyze the results in terms of parts of speech tags, sentence lengths, and word ordering.</abstract>
      <url hash="e36c3dc5">2020.semeval-1.219</url>
      <bibkey>anand-etal-2020-midas</bibkey>
      <doi>10.18653/v1/2020.semeval-1.219</doi>
    </paper>
    <paper id="220">
      <title>Randomseed19 at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: Emphasis Selection for Written Text in Visual Media</title>
      <author><first>Aleksandr</first><last>Shatilov</last></author>
      <author><first>Denis</first><last>Gordeev</last></author>
      <author><first>Alexey</first><last>Rey</last></author>
      <pages>1685–1690</pages>
      <abstract>This paper describes our approach to emphasis selection for written text in visual media as a solution for SemEval 2020 Task 10. We used an ensemble of several different Transformer-based models and cast the task as a sequence labeling problem with two tags: ‘I’ as ‘emphasized’ and ‘O’ as ‘non-emphasized’ for each token in the text.</abstract>
      <url hash="aab27287">2020.semeval-1.220</url>
      <bibkey>shatilov-etal-2020-randomseed19</bibkey>
      <doi>10.18653/v1/2020.semeval-1.220</doi>
    </paper>
    <paper id="221">
      <title><fixed-case>T</fixed-case>ext<fixed-case>L</fixed-case>earner at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: A Contextualized Ranking System in Solving Emphasis Selection in Text</title>
      <author><first>Zhishen</first><last>Yang</last></author>
      <author><first>Lars</first><last>Wolfsteller</last></author>
      <author><first>Naoaki</first><last>Okazaki</last></author>
      <pages>1691–1697</pages>
      <abstract>This paper describes the emphasis selection system of the team TextLearner for SemEval 2020 Task 10: Emphasis Selection For Written Text in Visual Media. The system aims to learn the emphasis selection distribution using contextual representations extracted from pre-trained language models and a two-staged ranking model. The experimental results demonstrate the strong contextual representation power of the recent advanced transformer-based language model RoBERTa, which can be exploited using a simple but effective architecture on top.</abstract>
      <url hash="008b3d7b">2020.semeval-1.221</url>
      <bibkey>yang-etal-2020-textlearner</bibkey>
      <doi>10.18653/v1/2020.semeval-1.221</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/multinli">MultiNLI</pwcdataset>
    </paper>
    <paper id="222">
      <title><fixed-case>T</fixed-case>ë<fixed-case>X</fixed-case>tmarkers at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: Emphasis Selection with Agreement Dependent Crowd Layers</title>
      <author><first>Kevin</first><last>Glocker</last></author>
      <author><first>Stefanos Andreas</first><last>Markianos Wright</last></author>
      <pages>1698–1703</pages>
      <abstract>In visual communication, the ability of a short piece of text to catch someone’s eye in a single glance or from a distance is of paramount importance. In our approach to the SemEval-2020 task “Emphasis Selection For Written Text in Visual Media”, we use contextualized word representations from a pretrained model of the state-of-the-art BERT architecture together with a stacked bidirectional GRU network to predict token-level emphasis probabilities. For tackling low inter-annotator agreement in the dataset, we attempt to model multiple annotators jointly by introducing initialization with agreement dependent noise to a crowd layer architecture. We found our approach to both perform substantially better than initialization with identities for this purpose and to outperform a baseline trained with token level majority voting. Our submission system reaches substantially higher Match m on the development set than the task baseline (0.779), but only slightly outperforms the test set baseline (0.754) using a three model ensemble.</abstract>
      <url hash="56f82444">2020.semeval-1.222</url>
      <bibkey>glocker-markianos-wright-2020-textmarkers</bibkey>
      <doi>10.18653/v1/2020.semeval-1.222</doi>
    </paper>
    <paper id="223">
      <title><fixed-case>UIC</fixed-case>-<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: Exploring an Alternate Perspective on Evaluation</title>
      <author><first>Philip</first><last>Hossu</last></author>
      <author><first>Natalie</first><last>Parde</last></author>
      <pages>1704–1709</pages>
      <abstract>In this work we describe and analyze a supervised learning system for word emphasis selection in phrases drawn from visual media as a part of the Semeval 2020 Shared Task 10. More specifically, we begin by briefly introducing the shared task problem and provide an analysis of interesting and relevant features present in the training dataset. We then introduce our LSTM-based model and describe its structure, input features, and limitations. Our model ultimately failed to beat the benchmark score, achieving an average match() score of 0.704 on the validation data (0.659 on the test data) but predicted 84.8% of words correctly considering a 0.5 threshold. We conclude with a thorough analysis and discussion of erroneous predictions with many examples and visualizations.</abstract>
      <url hash="e7a44b6d">2020.semeval-1.223</url>
      <bibkey>hossu-parde-2020-uic</bibkey>
      <doi>10.18653/v1/2020.semeval-1.223</doi>
    </paper>
    <paper id="224">
      <title><fixed-case>YNU</fixed-case>-<fixed-case>HPCC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 10: Using a Multi-granularity Ordinal Classification of the <fixed-case>B</fixed-case>i<fixed-case>LSTM</fixed-case> Model for Emphasis Selection</title>
      <author><first>Dawei</first><last>Liao</last></author>
      <author><first>Jin</first><last>Wang</last></author>
      <author><first>Xuejie</first><last>Zhang</last></author>
      <pages>1710–1715</pages>
      <abstract>In this study, we propose a multi-granularity ordinal classification method to address the problem of emphasis selection. In detail, the word embedding is learned from Embeddings from Language Model (ELMO) to extract feature vector representation. Then, the ordinal classifica-tions are implemented on four different multi-granularities to approximate the continuous em-phasize values. Comparative experiments were conducted to compare the model with baseline in which the problem is transformed to label distribution problem.</abstract>
      <url hash="daa59896">2020.semeval-1.224</url>
      <bibkey>liao-etal-2020-ynu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.224</doi>
    </paper>
    <paper id="225">
      <title>3218<fixed-case>IR</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: <fixed-case>C</fixed-case>onv1<fixed-case>D</fixed-case> and Word Embedding in Propaganda Span Identification at News Articles</title>
      <author><first>Dimas Sony</first><last>Dewantara</last></author>
      <author><first>Indra</first><last>Budi</last></author>
      <author><first>Muhammad Okky</first><last>Ibrohim</last></author>
      <pages>1716–1721</pages>
      <abstract>In this paper, we present the result of our experiment with a variant of 1 Dimensional Convolutional Neural Network (Conv1D) hyper-parameters value. We describe the system entered by the team of Information Retrieval Lab. Universitas Indonesia (3218IR) in the SemEval 2020 Task 11 Sub Task 1 about propaganda span identification in news articles. The best model obtained an F1 score of 0.24 in the development set and 0.23 in the test set. We show that there is a potential for performance improvement through the use of models with appropriate hyper-parameters. Our system uses a combination of Conv1D and GloVe as Word Embedding to detect propaganda in the fragment text level.</abstract>
      <url hash="658380f1">2020.semeval-1.225</url>
      <bibkey>dewantara-etal-2020-3218ir</bibkey>
      <doi>10.18653/v1/2020.semeval-1.225</doi>
    </paper>
    <paper id="226">
      <title><fixed-case>BPGC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Propaganda Detection in News Articles with Multi-Granularity Knowledge Sharing and Linguistic Features Based Ensemble Learning</title>
      <author><first>Rajaswa</first><last>Patil</last></author>
      <author><first>Somesh</first><last>Singh</last></author>
      <author><first>Swati</first><last>Agarwal</last></author>
      <pages>1722–1731</pages>
      <abstract>Propaganda spreads the ideology and beliefs of like-minded people, brainwashing their audiences, and sometimes leading to violence. SemEval 2020 Task-11 aims to design automated systems for news propaganda detection. Task-11 consists of two sub-tasks, namely, Span Identification - given any news article, the system tags those specific fragments which contain at least one propaganda technique; and Technique Classification - correctly classify a given propagandist statement amongst 14 propaganda techniques. For sub-task 1, we use contextual embeddings extracted from pre-trained transformer models to represent the text data at various granularities and propose a multi-granularity knowledge sharing approach. For sub-task 2, we use an ensemble of BERT and logistic regression classifiers with linguistic features. Our results reveal that the linguistic features are the strong indicators for covering minority classes in a highly imbalanced dataset.</abstract>
      <url hash="032578a0">2020.semeval-1.226</url>
      <bibkey>patil-etal-2020-bpgc</bibkey>
      <doi>10.18653/v1/2020.semeval-1.226</doi>
    </paper>
    <paper id="227">
      <title><fixed-case>DUTH</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: <fixed-case>BERT</fixed-case> with Entity Mapping for Propaganda Classification</title>
      <author><first>Anastasios</first><last>Bairaktaris</last></author>
      <author><first>Symeon</first><last>Symeonidis</last></author>
      <author><first>Avi</first><last>Arampatzis</last></author>
      <pages>1732–1738</pages>
      <abstract>This report describes the methods employed by the Democritus University of Thrace (DUTH) team for participating in SemEval-2020 Task 11: Detection of Propaganda Techniques in News Articles. Our team dealt with Subtask 2: Technique Classification. We used shallow Natural Language Processing (NLP) preprocessing techniques to reduce the noise in the dataset, feature selection methods, and common supervised machine learning algorithms. Our final model is based on using the BERT system with entity mapping. To improve our model’s accuracy, we mapped certain words into five distinct categories by employing word-classes and entity recognition</abstract>
      <url hash="d56d661a">2020.semeval-1.227</url>
      <bibkey>bairaktaris-etal-2020-duth</bibkey>
      <doi>10.18653/v1/2020.semeval-1.227</doi>
      <pwccode url="https://github.com/anasbair/SemEval2020-groups" additional="false">anasbair/SemEval2020-groups</pwccode>
    </paper>
    <paper id="228">
      <title>Hitachi at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: An Empirical Study of Pre-Trained Transformer Family for Propaganda Detection</title>
      <author><first>Gaku</first><last>Morio</last></author>
      <author><first>Terufumi</first><last>Morishita</last></author>
      <author><first>Hiroaki</first><last>Ozaki</last></author>
      <author><first>Toshinori</first><last>Miyoshi</last></author>
      <pages>1739–1748</pages>
      <abstract>In this paper, we show our system for SemEval-2020 task 11, where we tackle propaganda span identification (SI) and technique classification (TC). We investigate heterogeneous pre-trained language models (PLMs) such as BERT, GPT-2, XLNet, XLM, RoBERTa, and XLM-RoBERTa for SI and TC fine-tuning, respectively. In large-scale experiments, we found that each of the language models has a characteristic property, and using an ensemble model with them is promising. Finally, the ensemble model was ranked 1st amongst 35 teams for SI and 3rd amongst 31 teams for TC.</abstract>
      <url hash="8affb863">2020.semeval-1.228</url>
      <bibkey>morio-etal-2020-hitachi-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.228</doi>
    </paper>
    <paper id="229">
      <title><fixed-case>JUST</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Detecting Propaganda Techniques Using <fixed-case>BERT</fixed-case> Pre-trained Model</title>
      <author><first>Ola</first><last>Altiti</last></author>
      <author><first>Malak</first><last>Abdullah</last></author>
      <author><first>Rasha</first><last>Obiedat</last></author>
      <pages>1749–1755</pages>
      <abstract>This paper presents the submission to semeval-2020 task 11, Detection of Propaganda Techniques in News Articles. Knowing that there are two subtasks in this competition, we have participated in the Technique Classification subtask (TC), which aims to identify the propaganda techniques used in a specific propaganda span. We have used and implemented various models to detect propaganda. Our proposed model is based on BERT uncased pre-trained language model as it has achieved state-of-the-art performance on multiple NLP benchmarks. The performance results of our proposed model have scored 0.55307 F1-Score, which outperforms the baseline model provided by the organizers with 0.2519 F1-Score, and our model is 0.07 away from the best performing team. Compared to other participating systems, our submission is ranked 15th out of 31 participants.</abstract>
      <url hash="bdfcdc1e">2020.semeval-1.229</url>
      <bibkey>altiti-etal-2020-just</bibkey>
      <doi>10.18653/v1/2020.semeval-1.229</doi>
    </paper>
    <paper id="230">
      <title><fixed-case>LTI</fixed-case>at<fixed-case>CMU</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Incorporating Multi-Level Features for Multi-Granular Propaganda Span Identification</title>
      <author><first>Sopan</first><last>Khosla</last></author>
      <author><first>Rishabh</first><last>Joshi</last></author>
      <author><first>Ritam</first><last>Dutt</last></author>
      <author><first>Alan W</first><last>Black</last></author>
      <author><first>Yulia</first><last>Tsvetkov</last></author>
      <pages>1756–1763</pages>
      <abstract>In this paper we describe our submission for the task of Propaganda Span Identification in news articles. We introduce a BERT-BiLSTM based span-level propaganda classification model that identifies which token spans within the sentence are indicative of propaganda. The ”multi-granular” model incorporates linguistic knowledge at various levels of text granularity, including word, sentence and document level syntactic, semantic and pragmatic affect features, which significantly improve model performance, compared to its language-agnostic variant. To facilitate better representation learning, we also collect a corpus of 10k news articles, and use it for fine-tuning the model. The final model is a majority-voting ensemble which learns different propaganda class boundaries by leveraging different subsets of incorporated knowledge.</abstract>
      <url hash="b21011a4">2020.semeval-1.230</url>
      <bibkey>khosla-etal-2020-ltiatcmu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.230</doi>
    </paper>
    <paper id="231">
      <title>news<fixed-case>S</fixed-case>weeper at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Context-Aware Rich Feature Representations for Propaganda Classification</title>
      <author><first>Paramansh</first><last>Singh</last></author>
      <author><first>Siraj</first><last>Sandhu</last></author>
      <author><first>Subham</first><last>Kumar</last></author>
      <author><first>Ashutosh</first><last>Modi</last></author>
      <pages>1764–1770</pages>
      <abstract>This paper describes our submissions to SemEval 2020 Task 11: Detection of Propaganda Techniques in News Articles for each of the two subtasks of Span Identification and Technique Classification. We make use of pre-trained BERT language model enhanced with tagging techniques developed for the task of Named Entity Recognition (NER), to develop a system for identifying propaganda spans in the text. For the second subtask, we incorporate contextual features in a pre-trained RoBERTa model for the classification of propaganda techniques. We were ranked 5th in the propaganda technique classification subtask.</abstract>
      <url hash="85a1ddaa">2020.semeval-1.231</url>
      <bibkey>singh-etal-2020-newssweeper</bibkey>
      <doi>10.18653/v1/2020.semeval-1.231</doi>
      <pwccode url="https://github.com/paramansh/propaganda_detection" additional="false">paramansh/propaganda_detection</pwccode>
    </paper>
    <paper id="232">
      <title><fixed-case>NLFIIT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Neural Network Architectures for Detection of Propaganda Techniques in News Articles</title>
      <author><first>Matej</first><last>Martinkovic</last></author>
      <author><first>Samuel</first><last>Pecar</last></author>
      <author><first>Marian</first><last>Simko</last></author>
      <pages>1771–1778</pages>
      <abstract>Since propaganda became more common technique in news, it is very important to look for possibilities of its automatic detection. In this paper, we present neural model architecture submitted to the SemEval-2020 Task 11 competition: “Detection of Propaganda Techniques in News Articles”. We participated in both subtasks, propaganda span identification and propaganda technique classification. Our model utilizes recurrent Bi-LSTM layers with pre-trained word representations and also takes advantage of self-attention mechanism. Our model managed to achieve score 0.405 F1 for subtask 1 and 0.553 F1 for subtask 2 on test set resulting in 17th and 16th place in subtask 1 and subtask 2, respectively.</abstract>
      <url hash="a6ad55e6">2020.semeval-1.232</url>
      <bibkey>martinkovic-etal-2020-nlfiit</bibkey>
      <doi>10.18653/v1/2020.semeval-1.232</doi>
    </paper>
    <paper id="233">
      <title><fixed-case>P</fixed-case>suedo<fixed-case>P</fixed-case>rop at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Propaganda Span Detection Using <fixed-case>BERT</fixed-case>-<fixed-case>CRF</fixed-case> and Ensemble Sentence Level Classifier</title>
      <author><first>Aniruddha</first><last>Chauhan</last></author>
      <author><first>Harshita</first><last>Diddee</last></author>
      <pages>1779–1785</pages>
      <abstract>This paper explains our teams’ submission to the Shared Task of Fine-Grained Propaganda Detection in which we propose a sequential BERT-CRF based Span Identification model where the fine-grained detection is carried out only on the articles that are flagged as containing propaganda by an ensemble SLC model. We propose this setup bearing in mind the practicality of this approach in identifying propaganda spans in the exponentially increasing content base where the fine-tuned analysis of the entire data repository may not be the optimal choice due to its massive computational resource requirements. We present our analysis on different voting ensembles for the SLC model. Our system ranks 14th on the test set and 22nd on the development set and with an F1 score of 0.41 and 0.39 respectively.</abstract>
      <url hash="f8778a6e">2020.semeval-1.233</url>
      <bibkey>chauhan-diddee-2020-psuedoprop</bibkey>
      <doi>10.18653/v1/2020.semeval-1.233</doi>
    </paper>
    <paper id="234">
      <title><fixed-case>S</fixed-case>koltech<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Exploring Unsupervised Text Augmentation for Propaganda Detection</title>
      <author><first>Daryna</first><last>Dementieva</last></author>
      <author><first>Igor</first><last>Markov</last></author>
      <author><first>Alexander</first><last>Panchenko</last></author>
      <pages>1786–1792</pages>
      <abstract>This paper presents a solution for the Span Identification (SI) task in the “Detection of Propaganda Techniques in News Articles” competition at SemEval-2020. The goal of the SI task is to identify specific fragments of each article which contain the use of at least one propaganda technique. This is a binary sequence tagging task. We tested several approaches finally selecting a fine-tuned BERT model as our baseline model. Our main contribution is an investigation of several unsupervised data augmentation techniques based on distributional semantics expanding the original small training dataset as applied to this BERT-based sequence tagger. We explore various expansion strategies and show that they can substantially shift the balance between precision and recall, while maintaining comparable levels of the F1 score.</abstract>
      <url hash="852acda9">2020.semeval-1.234</url>
      <bibkey>dementieva-etal-2020-skoltechnlp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.234</doi>
    </paper>
    <paper id="235">
      <title><fixed-case>S</fixed-case>oc<fixed-case>C</fixed-case>og<fixed-case>C</fixed-case>om at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Characterizing and Detecting Propaganda Using Sentence-Level Emotional Salience Features</title>
      <author><first>Gangeshwar</first><last>Krishnamurthy</last></author>
      <author><first>Raj Kumar</first><last>Gupta</last></author>
      <author><first>Yinping</first><last>Yang</last></author>
      <pages>1793–1801</pages>
      <abstract>This paper describes a system developed for detecting propaganda techniques from news articles. We focus on examining how emotional salience features extracted from a news segment can help to characterize and predict the presence of propaganda techniques. Correlation analyses surfaced interesting patterns that, for instance, the “loaded language” and “slogan” techniques are negatively associated with valence and joy intensity but are positively associated with anger, fear and sadness intensity. In contrast, “flag waving” and “appeal to fear-prejudice” have the exact opposite pattern. Through predictive experiments, results further indicate that whereas BERT-only features obtained F1-score of 0.548, emotion intensity features and BERT hybrid features were able to obtain F1-score of 0.570, when a simple feedforward network was used as the classifier in both settings. On gold test data, our system obtained micro-averaged F1-score of 0.558 on overall detection efficacy over fourteen propaganda techniques. It performed relatively well in detecting “loaded language” (F1 = 0.772), “name calling and labeling” (F1 = 0.673), “doubt” (F1 = 0.604) and “flag waving” (F1 = 0.543).</abstract>
      <url hash="049d5512">2020.semeval-1.235</url>
      <bibkey>krishnamurthy-etal-2020-soccogcom</bibkey>
      <doi>10.18653/v1/2020.semeval-1.235</doi>
      <pwccode url="https://github.com/gangeshwark/PropagandaNews" additional="false">gangeshwark/PropagandaNews</pwccode>
    </paper>
    <paper id="236">
      <title><fixed-case>S</fixed-case>olomon at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Ensemble Architecture for Fine-Tuned Propaganda Detection in News Articles</title>
      <author><first>Mayank</first><last>Raj</last></author>
      <author><first>Ajay</first><last>Jaiswal</last></author>
      <author><first>Rohit</first><last>R.R</last></author>
      <author><first>Ankita</first><last>Gupta</last></author>
      <author><first>Sudeep Kumar</first><last>Sahoo</last></author>
      <author><first>Vertika</first><last>Srivastava</last></author>
      <author><first>Yeon Hyang</first><last>Kim</last></author>
      <pages>1802–1807</pages>
      <abstract>This paper describes our system (Solomon) details and results of participation in the SemEval 2020 Task 11 ”Detection of Propaganda Techniques in News Articles”. We participated in Task ”Technique Classification” (TC) which is a multi-class classification task. To address the TC task, we used RoBERTa based transformer architecture for fine-tuning on the propaganda dataset. The predictions of RoBERTa were further fine-tuned by class-dependent-minority-class classifiers. A special classifier, which employs dynamically adapted Least Common Sub-sequence algorithm, is used to adapt to the intricacies of repetition class. Compared to the other participating systems, our submission is ranked 4th on the leaderboard.</abstract>
      <url hash="7ea233c2">2020.semeval-1.236</url>
      <bibkey>raj-etal-2020-solomon</bibkey>
      <doi>10.18653/v1/2020.semeval-1.236</doi>
    </paper>
    <paper id="237">
      <title>syrapropa at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: <fixed-case>BERT</fixed-case>-based Models Design for Propagandistic Technique and Span Detection</title>
      <author><first>Jinfen</first><last>Li</last></author>
      <author><first>Lu</first><last>Xiao</last></author>
      <pages>1808–1816</pages>
      <abstract>This paper describes the BERT-based models proposed for two subtasks in SemEval-2020 Task 11: Detection of Propaganda Techniques in News Articles. We first build the model for Span Identification (SI) based on SpanBERT, and facilitate the detection by a deeper model and a sentence-level representation. We then develop a hybrid model for the Technique Classification (TC). The hybrid model is composed of three submodels including two BERT models with different training methods, and a feature-based Logistic Regression model. We endeavor to deal with imbalanced dataset by adjusting cost function. We are in the seventh place in SI subtask (0.4711 of F1-measure), and in the third place in TC subtask (0.6783 of F1-measure) on the development set.</abstract>
      <url hash="4cbddd57">2020.semeval-1.237</url>
      <bibkey>li-xiao-2020-syrapropa</bibkey>
      <doi>10.18653/v1/2020.semeval-1.237</doi>
    </paper>
    <paper id="238">
      <title>Team <fixed-case>D</fixed-case>i<fixed-case>S</fixed-case>aster at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Combining <fixed-case>BERT</fixed-case> and Hand-crafted Features for Identifying Propaganda Techniques in News</title>
      <author><first>Anders</first><last>Kaas</last></author>
      <author><first>Viktor Torp</first><last>Thomsen</last></author>
      <author><first>Barbara</first><last>Plank</last></author>
      <pages>1817–1822</pages>
      <abstract>The identification of communication techniques in news articles such as propaganda is important, as such techniques can influence the opinions of large numbers of people. Most work so far focused on the identification at the news article level. Recently, a new dataset and shared task has been proposed for the identification of propaganda techniques at the finer-grained span level. This paper describes our system submission to the subtask of technique classification (TC) for the SemEval 2020 shared task on detection of propaganda techniques in news articles. We propose a method of combining neural BERT representations with hand-crafted features via stacked generalization. Our model has the added advantage that it combines the power of contextual representations from BERT with simple span-based and article-based global features. We present an ablation study which shows that even though BERT representations are very powerful also for this task, BERT still benefits from being combined with carefully designed task-specific features.</abstract>
      <url hash="753aa8ba">2020.semeval-1.238</url>
      <bibkey>kaas-etal-2020-team</bibkey>
      <doi>10.18653/v1/2020.semeval-1.238</doi>
    </paper>
    <paper id="239">
      <title>Transformers at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Propaganda Fragment Detection Using Diversified <fixed-case>BERT</fixed-case> Architectures Based Ensemble Learning</title>
      <author><first>Ekansh</first><last>Verma</last></author>
      <author><first>Vinodh</first><last>Motupalli</last></author>
      <author><first>Souradip</first><last>Chakraborty</last></author>
      <pages>1823–1828</pages>
      <abstract>In this paper, we present our approach for the ’Detection of Propaganda Techniques in News Articles’ task as a part of the 2020 edition of International Workshop on Semantic Evaluation. The specific objective of this task is to identify and extract the text segments in which propaganda techniques are used. We propose a multi-system deep learning framework that can be used to identify the presence of propaganda fragments in a news article and also deep dive into the diverse enhancements of BERT architecture which are part of the final solution. Our proposed final model gave an F1-score of 0.48 on the test dataset.</abstract>
      <url hash="2170ab29">2020.semeval-1.239</url>
      <bibkey>verma-etal-2020-transformers</bibkey>
      <doi>10.18653/v1/2020.semeval-1.239</doi>
    </paper>
    <paper id="240">
      <title><fixed-case>TTUI</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Propaganda Detection with Transfer Learning and Ensembles</title>
      <author><first>Moonsung</first><last>Kim</last></author>
      <author><first>Steven</first><last>Bethard</last></author>
      <pages>1829–1834</pages>
      <abstract>In this paper, we describe our approaches and systems for the SemEval-2020 Task 11 on propaganda technique detection. We fine-tuned BERT and RoBERTa pre-trained models then merged them with an average ensemble. We conducted several experiments for input representations dealing with long texts and preserving context as well as for the imbalanced class problem. Our system ranked 20th out of 36 teams with 0.398 F1 in the SI task and 14th out of 31 teams with 0.556 F1 in the TC task.</abstract>
      <url hash="78cb2802">2020.semeval-1.240</url>
      <bibkey>kim-bethard-2020-ttui</bibkey>
      <doi>10.18653/v1/2020.semeval-1.240</doi>
    </paper>
    <paper id="241">
      <title><fixed-case>UAIC</fixed-case>1860 at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Detection of Propaganda Techniques in News Articles</title>
      <author><first>Vlad</first><last>Ermurachi</last></author>
      <author><first>Daniela</first><last>Gifu</last></author>
      <pages>1835–1840</pages>
      <abstract>The “Detection of Propaganda Techniques in News Articles” task at the SemEval 2020 competition focuses on detecting and classifying propaganda, pervasive in news article. In this paper, we present a system able to evaluate on sentence level, three traditional text representation techniques for these study goals, using: tf*idf, word and character n-grams. Firstly, we built a binary classifier able to provide corresponding propaganda labels, propaganda or non-propaganda. Secondly, we build a multilabel multiclass model to identify applied propaganda.</abstract>
      <url hash="38229a7c">2020.semeval-1.241</url>
      <bibkey>ermurachi-gifu-2020-uaic1860</bibkey>
      <doi>10.18653/v1/2020.semeval-1.241</doi>
    </paper>
    <paper id="242">
      <title><fixed-case>UMSIF</fixed-case>oreseer at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Propaganda Detection by Fine-Tuning <fixed-case>BERT</fixed-case> with Resampling and Ensemble Learning</title>
      <author><first>Yunzhe</first><last>Jiang</last></author>
      <author><first>Cristina</first><last>Garbacea</last></author>
      <author><first>Qiaozhu</first><last>Mei</last></author>
      <pages>1841–1846</pages>
      <abstract>We describe our participation at the SemEval 2020 “Detection of Propaganda Techniques in News Articles” - Techniques Classification (TC) task, designed to categorize textual fragments into one of the 14 given propaganda techniques. Our solution leverages pre-trained BERT models. We present our model implementations, evaluation results and analysis of these results. We also investigate the potential of combining language models with resampling and ensemble learning methods to deal with data imbalance and improve performance.</abstract>
      <url hash="95d18f74">2020.semeval-1.242</url>
      <bibkey>jiang-etal-2020-umsiforeseer</bibkey>
      <doi>10.18653/v1/2020.semeval-1.242</doi>
    </paper>
    <paper id="243">
      <title><fixed-case>UNTL</fixed-case>ing at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Detection of Propaganda Techniques in <fixed-case>E</fixed-case>nglish News Articles</title>
      <author><first>Maia</first><last>Petee</last></author>
      <author><first>Alexis</first><last>Palmer</last></author>
      <pages>1847–1852</pages>
      <abstract>Our system for the PropEval task explores the ability of semantic features to detect and label propagandistic rhetorical techniques in English news articles. For Subtask 2, labeling identified propagandistic fragments with one of fourteen technique labels, our system attains a micro-averaged F1 of 0.40; in this paper, we take a detailed look at the fourteen labels and how well our semantically-focused model detects each of them. We also propose strategies to fill the gaps.</abstract>
      <url hash="6bdf11e1">2020.semeval-1.243</url>
      <bibkey>petee-palmer-2020-untling</bibkey>
      <doi>10.18653/v1/2020.semeval-1.243</doi>
    </paper>
    <paper id="244">
      <title><fixed-case>UPB</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Propaganda Detection with Domain-Specific Trained <fixed-case>BERT</fixed-case></title>
      <author><first>Andrei</first><last>Paraschiv</last></author>
      <author><first>Dumitru-Clementin</first><last>Cercel</last></author>
      <author><first>Mihai</first><last>Dascalu</last></author>
      <pages>1853–1857</pages>
      <abstract>Manipulative and misleading news have become a commodity for some online news outlets and these news have gained a significant impact on the global mindset of people. Propaganda is a frequently employed manipulation method having as goal to influence readers by spreading ideas meant to distort or manipulate their opinions. This paper describes our participation in the SemEval-2020, Task 11: Detection of PropagandaTechniques in News Articles competition. Our approach considers specializing a pre-trained BERT model on propagandistic and hyperpartisan news articles, enabling it to create more adequate representations for the two subtasks, namely propaganda Span Identification (SI) and propaganda Technique Classification (TC). Our proposed system achieved a F1-score of 46.060% in subtask SI, ranking 5th in the leaderboard from 36 teams and a micro-averaged F1 score of 54.302% for subtask TC, ranking 19th from 32 teams.</abstract>
      <url hash="143d8f13">2020.semeval-1.244</url>
      <bibkey>paraschiv-etal-2020-upb</bibkey>
      <doi>10.18653/v1/2020.semeval-1.244</doi>
    </paper>
    <paper id="245">
      <title><fixed-case>UTMN</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: A Kitchen Solution to Automatic Propaganda Detection</title>
      <author><first>Elena</first><last>Mikhalkova</last></author>
      <author><first>Nadezhda</first><last>Ganzherli</last></author>
      <author><first>Anna</first><last>Glazkova</last></author>
      <author><first>Yuliya</first><last>Bidulya</last></author>
      <pages>1858–1864</pages>
      <abstract>The article describes a fast solution to propaganda detection at SemEval-2020 Task 11, based on feature adjustment. We use per-token vectorization of features and a simple Logistic Regression classifier to quickly test different hypotheses about our data. We come up with what seems to us the best solution, however, we are unable to align it with the result of the metric suggested by the organizers of the task. We test how our system handles class and feature imbalance by varying the number of samples of two classes (Propaganda and None) in the training set, the size of a context window in which a token is vectorized and combination of vectorization means. The result of our system at SemEval2020 Task 11 is F-score=0.37.</abstract>
      <url hash="df4344b0">2020.semeval-1.245</url>
      <bibkey>mikhalkova-etal-2020-utmn</bibkey>
      <doi>10.18653/v1/2020.semeval-1.245</doi>
      <pwccode url="https://github.com/evrog/Propaganda-Detection-at-SemEval-2020" additional="false">evrog/Propaganda-Detection-at-SemEval-2020</pwccode>
    </paper>
    <paper id="246">
      <title><fixed-case>WMD</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Tasks 7 and 11: Assessing Humor and Propaganda Using Unsupervised Data Augmentation</title>
      <author><first>Guillaume</first><last>Daval-Frerot</last></author>
      <author><first>Yannick</first><last>Weis</last></author>
      <pages>1865–1874</pages>
      <abstract>In this work, we combine the state-of-the-art BERT architecture with the semi-supervised learning technique UDA in order to exploit unlabeled raw data to assess humor and detect propaganda in the tasks 7 and 11 of the SemEval-2020 competition. The use of UDA shows promising results with a systematic improvement of the performances over the four different subtasks, and even outperforms supervised learning with the additional labels of the Funlines dataset.</abstract>
      <url hash="b2c6a6ac">2020.semeval-1.246</url>
      <bibkey>daval-frerot-weis-2020-wmd</bibkey>
      <doi>10.18653/v1/2020.semeval-1.246</doi>
    </paper>
    <paper id="247">
      <title><fixed-case>YNU</fixed-case>taoxin at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 11: Identification Fragments of Propaganda Technique by Neural Sequence Labeling Models with Different Tagging Schemes and Pre-trained Language Model</title>
      <author><first>Xin</first><last>Tao</last></author>
      <author><first>Xiaobing</first><last>Zhou</last></author>
      <pages>1875–1880</pages>
      <abstract>We only participated in the first subtask, and a neural sequence model was used to perform the sequence tagging task. We investigated the effects of different markup strategies on model performance. Bert that performed very well in NLP was used as a feature extractor.</abstract>
      <url hash="28f7a843">2020.semeval-1.247</url>
      <bibkey>tao-zhou-2020-ynutaoxin</bibkey>
      <doi>10.18653/v1/2020.semeval-1.247</doi>
    </paper>
    <paper id="248">
      <title><fixed-case>A</fixed-case>lex<fixed-case>U</fixed-case>-<fixed-case>B</fixed-case>ack<fixed-case>T</fixed-case>ranslation-<fixed-case>TL</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Improving Offensive Language Detection Using Data Augmentation and Transfer Learning</title>
      <author><first>Mai</first><last>Ibrahim</last></author>
      <author><first>Marwan</first><last>Torki</last></author>
      <author><first>Nagwa</first><last>El-Makky</last></author>
      <pages>1881–1890</pages>
      <abstract>Social media platforms, online news commenting spaces, and many other public forums have become widely known for issues of abusive behavior such as cyber-bullying and personal attacks. In this paper, we use the annotated tweets of the Offensive Language Identification Dataset (OLID) to train three levels of deep learning classifiers to solve the three sub-tasks associated with the dataset. Sub-task A is to determine if the tweet is toxic or not. Then, for offensive tweets, sub-task B requires determining whether the toxicity is targeted. Finally, for sub-task C, we predict the target of the offense; i.e. a group, individual, or other entity. In our solution, we tackle the problem of class imbalance in the dataset by using back translation for data augmentation and utilizing the fine-tuned BERT model in an ensemble of deep learning classifiers. We used this solution to participate in the three English sub-tasks of SemEval-2020 task 12. The proposed solution achieved 0.91393, 0.6300, and 0.57607 macro F1-average in sub-tasks A, B, and C respectively. We achieved the 9th, 14th, and 22nd places for sub-tasks A, B and C respectively.</abstract>
      <url hash="e5e96dc0">2020.semeval-1.248</url>
      <bibkey>ibrahim-etal-2020-alexu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.248</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="249">
      <title><fixed-case>ALT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: <fixed-case>A</fixed-case>rabic and <fixed-case>E</fixed-case>nglish Offensive Language Identification in Social Media</title>
      <author><first>Sabit</first><last>Hassan</last></author>
      <author><first>Younes</first><last>Samih</last></author>
      <author><first>Hamdy</first><last>Mubarak</last></author>
      <author><first>Ahmed</first><last>Abdelali</last></author>
      <pages>1891–1897</pages>
      <abstract>This paper describes the systems submitted by the Arabic Language Technology group (ALT) at SemEval-2020 Task 12: Multilingual Offensive Language Identification in Social Media. We focus on sub-task A (Offensive Language Identification) for two languages: Arabic and English. Our efforts for both languages achieved more than 90% macro-averaged F1-score on the official test set. For Arabic, the best results were obtained by a system combination of Support Vector Machine, Deep Neural Network, and fine-tuned Bidirectional Encoder Representations from Transformers (BERT). For English, the best results were obtained by fine-tuning BERT.</abstract>
      <url hash="d4018169">2020.semeval-1.249</url>
      <bibkey>hassan-etal-2020-alt-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.249</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/wikidetox">WikiDetox</pwcdataset>
    </paper>
    <paper id="250">
      <title>Amsqr at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Offensive Language Detection Using Neural Networks and Anti-adversarial Features</title>
      <author><first>Alejandro</first><last>Mosquera</last></author>
      <pages>1898–1905</pages>
      <abstract>This paper describes a method and system to solve the problem of detecting offensive language in social media using anti-adversarial features. Our submission to the SemEval-2020 task 12 challenge was generated by an stacked ensemble of neural networks fine-tuned on the OLID dataset and additional external sources. For Task-A (English), text normalisation filters were applied at both graphical and lexical level. The normalisation step effectively mitigates not only the natural presence of lexical variants but also intentional attempts to bypass moderation by introducing out of vocabulary words. Our approach provides strong F1 scores for both 2020 (0.9134) and 2019 (0.8258) challenges.</abstract>
      <url hash="3950af80">2020.semeval-1.250</url>
      <bibkey>mosquera-2020-amsqr</bibkey>
      <doi>10.18653/v1/2020.semeval-1.250</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/imdb-movie-reviews">IMDb Movie Reviews</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="251">
      <title><fixed-case>BRUMS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Transformer Based Multilingual Offensive Language Identification in Social Media</title>
      <author><first>Tharindu</first><last>Ranasinghe</last></author>
      <author><first>Hansi</first><last>Hettiarachchi</last></author>
      <pages>1906–1915</pages>
      <abstract>In this paper, we describe the team <i>BRUMS</i> entry to OffensEval 2: Multilingual Offensive Language Identification in Social Media in SemEval-2020. The OffensEval organizers provided participants with annotated datasets containing posts from social media in Arabic, Danish, English, Greek and Turkish. We present a multilingual deep learning model to identify offensive language in social media. Overall, the approach achieves acceptable evaluation scores, while maintaining flexibility between languages.</abstract>
      <url hash="cb1a626f">2020.semeval-1.251</url>
      <bibkey>ranasinghe-hettiarachchi-2020-brums</bibkey>
      <doi>10.18653/v1/2020.semeval-1.251</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="252">
      <title><fixed-case>C</fixed-case>o<fixed-case>L</fixed-case>i at <fixed-case>U</fixed-case>d<fixed-case>S</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Offensive Tweet Detection with Ensembling</title>
      <author><first>Kathryn</first><last>Chapman</last></author>
      <author><first>Johannes</first><last>Bernhard</last></author>
      <author><first>Dietrich</first><last>Klakow</last></author>
      <pages>1916–1924</pages>
      <abstract>We present our submission and results for SemEval-2020 Task 12: Multilingual Offensive Language Identification in Social Media (OffensEval 2020) where we participated in offensive tweet classification tasks in English, Arabic, Greek, Turkish and Danish. Our approach included classical machine learning architectures such as support vector machines and logistic regression combined in an ensemble with a multilingual transformer-based model (XLM-R). The transformer model is trained on all languages combined in order to create a fully multilingual model which can leverage knowledge between languages. The machine learning model hyperparameters are fine-tuned and the statistically best performing ones included in the final ensemble.</abstract>
      <url hash="cd8eed5f">2020.semeval-1.252</url>
      <bibkey>chapman-etal-2020-coli</bibkey>
      <doi>10.18653/v1/2020.semeval-1.252</doi>
    </paper>
    <paper id="253">
      <title><fixed-case>C</fixed-case>yber<fixed-case>T</fixed-case>ronics at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Multilingual Offensive Language Identification over Social Media</title>
      <author><first>Sayanta</first><last>Paul</last></author>
      <author><first>Sriparna</first><last>Saha</last></author>
      <author><first>Mohammed</first><last>Hasanuzzaman</last></author>
      <pages>1925–1931</pages>
      <abstract>The SemEval-2020 Task 12 (OffensEval) challenge focuses on detection of signs of offensiveness using posts or comments over social media. This task has been organized for several languages, e.g., Arabic, Danish, English, Greek and Turkish. It has featured three related sub-tasks for English language: sub-task A was to discriminate between offensive and non-offensive posts, the focus of sub-task B was on the type of offensive content in the post and finally, in sub-task C, proposed systems had to identify the target of the offensive posts. The corpus for each of the languages is developed using the posts and comments over Twitter, a popular social media platform. We have participated in this challenge and submitted results for different languages. The current work presents different machine learning and deep learning techniques and analyzes their performance for offensiveness prediction which involves various classifiers and feature engineering schemes. The experimental analysis on the training set shows that SVM using language specific pre-trained word embedding (Fasttext) outperforms the other methods. Our system achieves a macro-averaged F1 score of 0.45 for Arabic language, 0.43 for Greek language and 0.54 for Turkish language.</abstract>
      <url hash="294dfc87">2020.semeval-1.253</url>
      <bibkey>paul-etal-2020-cybertronics</bibkey>
      <doi>10.18653/v1/2020.semeval-1.253</doi>
    </paper>
    <paper id="254">
      <title><fixed-case>D</fixed-case>o<fixed-case>T</fixed-case>he<fixed-case>M</fixed-case>ath at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12 : Deep Neural Networks with Self Attention for <fixed-case>A</fixed-case>rabic Offensive Language Detection</title>
      <author><first>Zoher</first><last>Orabe</last></author>
      <author><first>Bushr</first><last>Haddad</last></author>
      <author><first>Nada</first><last>Ghneim</last></author>
      <author><first>Anas</first><last>Al-Abood</last></author>
      <pages>1932–1937</pages>
      <abstract>This paper describes our team work and submission for the SemEval 2020 (Sub-Task A) “Offensive Eval: Identifying and Categorizing Offensive Arabic Language in Arabic Social Media”. Our two baseline models were based on different levels of representation: character vs. word level. In word level based representation we implemented a convolutional neural network model and a bi-directional GRU model. In character level based representation we implemented a hyper CNN and LSTM model. All of these models have been further augmented with attention layers for a better performance on our task. We also experimented with three types of static word embeddings: word2vec, FastText, and Glove, in addition to emoji embeddings, and compared the performance of the different deep learning models on the dataset provided by this task. The bi-directional GRU model with attention has achieved the highest score (0.85% F1 score) among all other models.</abstract>
      <url hash="63d62dfa">2020.semeval-1.254</url>
      <bibkey>orabe-etal-2020-dothemath</bibkey>
      <doi>10.18653/v1/2020.semeval-1.254</doi>
    </paper>
    <paper id="255">
      <title><fixed-case>D</fixed-case>uluth at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Offensive Tweet Identification in <fixed-case>E</fixed-case>nglish with Logistic Regression</title>
      <author><first>Ted</first><last>Pedersen</last></author>
      <pages>1938–1946</pages>
      <abstract>This paper describes the Duluth systems that participated in SemEval–2020 Task 12, Multilingual Offensive Language Identification in Social Media (OffensEval–2020). We participated in the three English language tasks. Our systems provide a simple machine learning baseline using logistic regression. We trained our models on the distantly supervised training data made available by the task organizers and used no other resources. As might be expected we did not rank highly in the comparative evaluation: 79th of 85 in task A, 34th of 43 in task B, and 24th of 39 in task C. We carried out a qualitative analysis of our results and found that the class labels in the gold standard data are somewhat noisy. We hypothesize that the extremely high accuracy (&gt;$ 90%) of the top ranked systems may reflect methods that learn the training data very well but may not generalize to the task of identifying offensive language in English. This analysis includes examples of tweets that despite being mildly redacted are still offensive.</abstract>
      <url hash="1e4b442c">2020.semeval-1.255</url>
      <bibkey>pedersen-2020-duluth</bibkey>
      <doi>10.18653/v1/2020.semeval-1.255</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="256">
      <title>Ferryman at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: <fixed-case>BERT</fixed-case>-Based Model with Advanced Improvement Methods for Multilingual Offensive Language Identification</title>
      <author><first>Weilong</first><last>Chen</last></author>
      <author><first>Peng</first><last>Wang</last></author>
      <author><first>Jipeng</first><last>Li</last></author>
      <author><first>Yuanshuai</first><last>Zheng</last></author>
      <author><first>Yan</first><last>Wang</last></author>
      <author><first>Yanru</first><last>Zhang</last></author>
      <pages>1947–1952</pages>
      <abstract>Indiscriminately posting offensive remarks on social media may promote the occurrence of negative events such as violence, crime, and hatred. This paper examines different approaches and models for solving offensive tweet classification, which is a part of the OffensEval 2020 competition. The dataset is Offensive Language Identification Dataset (OLID), which draws 14,200 annotated English Tweet comments. The main challenge of data preprocessing is the unbalanced class distribution, abbreviation, and emoji. To overcome these issues, methods such as hashtag segmentation, abbreviation replacement, and emoji replacement have been adopted for data preprocessing approaches. The main task can be divided into three sub-tasks, and are solved by Term Frequency–Inverse Document Frequency(TF-IDF), Bidirectional Encoder Representation from Transformer (BERT), and Multi-dropout respectively. Meanwhile, we applied different learning rates for different languages and tasks based on BERT and non-BERTmodels in order to obtain better results. Our team Ferryman ranked the 18th, 8th, and 21st with F1-score of 0.91152 on the English Sub-task A, Sub-task B, and Sub-task C, respectively. Furthermore, our team also ranked in the top 20 on the Sub-task A of other languages.</abstract>
      <url hash="fae12995">2020.semeval-1.256</url>
      <bibkey>chen-etal-2020-ferryman-semeval-2020-task</bibkey>
      <doi>10.18653/v1/2020.semeval-1.256</doi>
    </paper>
    <paper id="257">
      <title>Garain at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Sequence Based Deep Learning for Categorizing Offensive Language in Social Media</title>
      <author><first>Avishek</first><last>Garain</last></author>
      <pages>1953–1960</pages>
      <abstract>SemEval-2020 Task 12 was OffenseEval: Multilingual Offensive Language Identification inSocial Media (Zampieri et al., 2020). The task was subdivided into multiple languages anddatasets were provided for each one. The task was further divided into three sub-tasks: offensivelanguage identification, automatic categorization of offense types, and offense target identification.I participated in the task-C, that is, offense target identification. For preparing the proposed system,I made use of Deep Learning networks like LSTMs and frameworks like Keras which combine thebag of words model with automatically generated sequence based features and manually extractedfeatures from the given dataset. My system on training on 25% of the whole dataset achieves macro averaged f1 score of 47.763%.</abstract>
      <url hash="b4e15a2a">2020.semeval-1.257</url>
      <bibkey>garain-2020-garain</bibkey>
      <doi>10.18653/v1/2020.semeval-1.257</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="258">
      <title>Hitachi at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Offensive Language Identification with Noisy Labels Using Statistical Sampling and Post-Processing</title>
      <author><first>Manikandan</first><last>Ravikiran</last></author>
      <author><first>Amin Ekant</first><last>Muljibhai</last></author>
      <author><first>Toshinori</first><last>Miyoshi</last></author>
      <author><first>Hiroaki</first><last>Ozaki</last></author>
      <author><first>Yuta</first><last>Koreeda</last></author>
      <author><first>Sakata</first><last>Masayuki</last></author>
      <pages>1961–1967</pages>
      <abstract>In this paper, we present our participation in SemEval-2020 Task-12 Subtask-A (English Language) which focuses on offensive language identification from noisy labels. To this end, we developed a hybrid system with the BERT classifier trained with tweets selected using Statistical Sampling Algorithm (SA) and Post-Processed (PP) using an offensive wordlist. Our developed system achieved 34th position with Macro-averaged F1-score (Macro-F1) of 0.90913 over both offensive and non-offensive classes. We further show comprehensive results and error analysis to assist future research in offensive language identification with noisy labels.</abstract>
      <url hash="0a6cca3d">2020.semeval-1.258</url>
      <bibkey>ravikiran-etal-2020-hitachi</bibkey>
      <doi>10.18653/v1/2020.semeval-1.258</doi>
    </paper>
    <paper id="259">
      <title><fixed-case>I</fixed-case>2<fixed-case>C</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Simple but Effective Approaches to Offensive Speech Detection in <fixed-case>T</fixed-case>witter</title>
      <author><first>Victoria</first><last>Pachón Álvarez</last></author>
      <author><first>Jacinto</first><last>Mata Vázquez</last></author>
      <author><first>José Manuel</first><last>López Betanzos</last></author>
      <author><first>José Luis</first><last>Arjona Fernández</last></author>
      <pages>1968–1977</pages>
      <abstract>This paper describes the systems developed for I2C Group to participate on Subtasks A and B in English, and Subtask A in Turkish and Arabic in OffensEval (Task 12 of SemEval 2020). In our experiments we compare three architectures we have developed, two based on Transformer and the other based on classical machine learning algorithms. In this paper, the proposed architectures are described, and the results obtained by our systems are presented.</abstract>
      <url hash="4fe96e39">2020.semeval-1.259</url>
      <bibkey>pachon-alvarez-etal-2020-i2c</bibkey>
      <doi>10.18653/v1/2020.semeval-1.259</doi>
    </paper>
    <paper id="260">
      <title>i<fixed-case>C</fixed-case>ompass at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: From a Syntax-ignorant N-gram Embeddings Model to a Deep Bidirectional Language Model</title>
      <author><first>Abir</first><last>Messaoudi</last></author>
      <author><first>Hatem</first><last>Haddad</last></author>
      <author><first>Moez</first><last>Ben Haj Hmida</last></author>
      <pages>1978–1982</pages>
      <abstract>We describe our submitted system to the SemEval 2020. We tackled Task 12 entitled “Multilingual Offensive Language Identification in Social Media”, specifically subtask 4A-Arabic. We propose three Arabic offensive language identification models: Tw-StAR, BERT and BERT+BiLSTM. Two Arabic abusive/hate datasets were added to the training dataset: L-HSAB and T-HSAB. The final submission was chosen based on the best performances which was achieved by the BERT+BiLSTM model.</abstract>
      <url hash="bbe65058">2020.semeval-1.260</url>
      <bibkey>messaoudi-etal-2020-icompass</bibkey>
      <doi>10.18653/v1/2020.semeval-1.260</doi>
    </paper>
    <paper id="261">
      <title><fixed-case>IITP</fixed-case>-<fixed-case>AINLPML</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Offensive Tweet Identification and Target Categorization in a Multitask Environment</title>
      <author><first>Soumitra</first><last>Ghosh</last></author>
      <author><first>Asif</first><last>Ekbal</last></author>
      <author><first>Pushpak</first><last>Bhattacharyya</last></author>
      <pages>1983–1991</pages>
      <abstract>In this paper, we describe the participation of IITP-AINLPML team in the SemEval-2020 SharedTask 12 on Offensive Language Identification and Target Categorization in English Twitter data. Our proposed model learns to extract textual features using a BiGRU-based deep neural network supported by a Hierarchical Attention architecture to focus on the most relevant areas in the text. We leverage the effectiveness of multitask learning while building our models for sub-task A and B. We do necessary undersampling of the over-represented classes in the sub-tasks A and C.During training, we consider a threshold of 0.5 as the separation margin between the instances belonging to classes OFF and NOT in sub-task A and UNT and TIN in sub-task B. For sub-task C, the class corresponding to the maximum score among the given confidence scores of the classes(IND, GRP and OTH) is considered as the final label for an instance. Our proposed model obtains the macro F1-scores of 90.95%, 55.69% and 63.88% in sub-task A, B and C, respectively.</abstract>
      <url hash="900e1845">2020.semeval-1.261</url>
      <bibkey>ghosh-etal-2020-iitp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.261</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="262">
      <title><fixed-case>INGEOTEC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Multilingual Classification of Offensive Text</title>
      <author><first>Sabino</first><last>Miranda-Jiménez</last></author>
      <author><first>Eric S.</first><last>Tellez</last></author>
      <author><first>Mario</first><last>Graff</last></author>
      <author><first>Daniela</first><last>Moctezuma</last></author>
      <pages>1992–1997</pages>
      <abstract>This paper describes our participation in OffensEval challenges for English, Arabic, Danish, Turkish, and Greek languages. We used several approaches, such as μTC, TextCategorization, and EvoMSA. Best results were achieved with EvoMSA, which is a multilingual and domain-independent architecture that combines the prediction from different knowledge sources to solve text classification problems.</abstract>
      <url hash="8a665cde">2020.semeval-1.262</url>
      <bibkey>miranda-jimenez-etal-2020-ingeotec</bibkey>
      <doi>10.18653/v1/2020.semeval-1.262</doi>
    </paper>
    <paper id="263">
      <title><fixed-case>IR</fixed-case>3218-<fixed-case>UI</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Emoji Effects on Offensive Language <fixed-case>I</fixed-case>dentifi<fixed-case>C</fixed-case>ation</title>
      <author><first>Sandy</first><last>Kurniawan</last></author>
      <author><first>Indra</first><last>Budi</last></author>
      <author><first>Muhammad Okky</first><last>Ibrohim</last></author>
      <pages>1998–2005</pages>
      <abstract>In this paper, we present our approach and the results of our participation in OffensEval 2020. There are three sub-tasks in OffensEval 2020 namely offensive language identification (sub-task A), automatic categorization of offense types (sub-task B), and offense target identification (sub-task C). We participated in sub-task A of English OffensEval 2020. Our approach emphasizes on how the emoji affects offensive language identification. Our model used LSTM combined with GloVe pre-trained word vectors to identify offensive language on social media. The best model obtained macro F1-score of 0.88428.</abstract>
      <url hash="faa9f188">2020.semeval-1.263</url>
      <bibkey>kurniawan-etal-2020-ir3218</bibkey>
      <doi>10.18653/v1/2020.semeval-1.263</doi>
    </paper>
    <paper id="264">
      <title><fixed-case>IRL</fixed-case>ab_<fixed-case>DAIICT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Machine Learning and Deep Learning Methods for Offensive Language Identification</title>
      <author><first>Apurva</first><last>Parikh</last></author>
      <author><first>Abhimanyu Singh</first><last>Bisht</last></author>
      <author><first>Prasenjit</first><last>Majumder</last></author>
      <pages>2006–2011</pages>
      <abstract>The paper describes systems that our team IRLab_DAIICT employed for shared task OffensEval2020: Multilingual Offensive Language Identification in Social Media shared task. We conducted experiments on the English language dataset which contained weakly labelled data. There were three sub-tasks but we only participated in sub-tasks A and B. We employed Machine learning techniques like Logistic Regression, Support Vector Machine, Random Forest and Deep learning techniques like Convolutional Neural Network and BERT. Our best approach achieved a MacroF1 score of 0.91 for sub-task A and 0.64 for sub-task B.</abstract>
      <url hash="c789a7dd">2020.semeval-1.264</url>
      <bibkey>parikh-etal-2020-irlab-daiict</bibkey>
      <doi>10.18653/v1/2020.semeval-1.264</doi>
    </paper>
    <paper id="265">
      <title><fixed-case>IR</fixed-case>lab@<fixed-case>IITV</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Multilingual Offensive Language Identification in Social Media Using <fixed-case>SVM</fixed-case></title>
      <author><first>Anita</first><last>Saroj</last></author>
      <author><first>Supriya</first><last>Chanda</last></author>
      <author><first>Sukomal</first><last>Pal</last></author>
      <pages>2012–2016</pages>
      <abstract>This paper describes the IRlab@IIT-BHU system for the OffensEval 2020. We take the SVM with TF-IDF features to identify and categorize hate speech and offensive language in social media for two languages. In subtask A, we used a linear SVM classifier to detect abusive content in tweets, achieving a macro <tex-math>F_1</tex-math> score of 0.779 and 0.718 for Arabic and Greek, respectively.</abstract>
      <url hash="a8601d00">2020.semeval-1.265</url>
      <bibkey>saroj-etal-2020-irlab</bibkey>
      <doi>10.18653/v1/2020.semeval-1.265</doi>
    </paper>
    <paper id="266">
      <title><fixed-case>JCT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Offensive Language Detection in Tweets Using Preprocessing Methods, Character and Word N-grams</title>
      <author><first>Moshe</first><last>Uzan</last></author>
      <author><first>Yaakov</first><last>HaCohen-Kerner</last></author>
      <pages>2017–2022</pages>
      <abstract>In this paper, we describe our submissions to SemEval-2020 contest. We tackled subtask 12 - “Multilingual Offensive Language Identification in Social Media”. We developed different models for four languages: Arabic, Danish, Greek, and Turkish. We applied three supervised machine learning methods using various combinations of character and word n-gram features. In addition, we applied various combinations of basic preprocessing methods. Our best submission was a model we built for offensive language identification in Danish using Random Forest. This model was ranked at the 6 position out of 39 submissions. Our result is lower by only 0.0025 than the result of the team that won the 4 place using entirely non-neural methods. Our experiments indicate that char ngram features are more helpful than word ngram features. This phenomenon probably occurs because tweets are more characterized by characters than by words, tweets are short, and contain various special sequences of characters, e.g., hashtags, shortcuts, slang words, and typos.</abstract>
      <url hash="7c457f64">2020.semeval-1.266</url>
      <bibkey>uzan-hacohen-kerner-2020-jct</bibkey>
      <doi>10.18653/v1/2020.semeval-1.266</doi>
    </paper>
    <paper id="267">
      <title><fixed-case>KAFK</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Checkpoint Ensemble of Transformers for Hate Speech Classification</title>
      <author><first>Kaushik Amar</first><last>Das</last></author>
      <author><first>Arup</first><last>Baruah</last></author>
      <author><first>Ferdous Ahmed</first><last>Barbhuiya</last></author>
      <author><first>Kuntal</first><last>Dey</last></author>
      <pages>2023–2029</pages>
      <abstract>This paper presents the approach of Team KAFK for the English edition of SemEval-2020 Task 12. We use checkpoint ensembling to create ensembles of BERT-based transformers and show that it can improve the performance of classification systems. We explore attention mask dropout to mitigate for the poor constructs of social media texts. Our classifiers scored macro-f1 of 0.909, 0.551 and 0.616 for subtasks A, B and C respectively. The code is publicly released online.</abstract>
      <url hash="4c9e9746">2020.semeval-1.267</url>
      <bibkey>das-etal-2020-kafk-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.267</doi>
      <pwccode url="https://github.com/cozek/OffensEval2020-code" additional="false">cozek/OffensEval2020-code</pwccode>
    </paper>
    <paper id="268">
      <title><fixed-case>KDELAB</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: A System for Estimating Aggression of Tweets Using Two Layers of <fixed-case>BERT</fixed-case> Features</title>
      <author><first>Keisuke</first><last>Hanahata</last></author>
      <author><first>Masaki</first><last>Aono</last></author>
      <pages>2030–2034</pages>
      <abstract>In recent years, with the development of social network services and video distribution services, there has been a sharp increase in offensive posts. In this paper, we present our approach for detecting hate speech in tweets defined in the SemEval- 2020 Task 12. Our system precise classification by using features extracted from two different layers of a pre-trained model, the BERT-large, and ensemble them.</abstract>
      <url hash="121d8dff">2020.semeval-1.268</url>
      <bibkey>hanahata-aono-2020-kdelab</bibkey>
      <doi>10.18653/v1/2020.semeval-1.268</doi>
    </paper>
    <paper id="269">
      <title><fixed-case>KEIS</fixed-case>@<fixed-case>JUST</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Identifying Multilingual Offensive Tweets Using Weighted Ensemble and Fine-Tuned <fixed-case>BERT</fixed-case></title>
      <author><first>Saja</first><last>Tawalbeh</last></author>
      <author><first>Mahmoud</first><last>Hammad</last></author>
      <author><first>Mohammad</first><last>AL-Smadi</last></author>
      <pages>2035–2044</pages>
      <abstract>This research presents our team KEIS@JUST participation at SemEval-2020 Task 12 which represents shared task on multilingual offensive language. We participated in all the provided languages for all subtasks except sub-task-A for the English language. Two main approaches have been developed the first is performed to tackle both languages Arabic and English, a weighted ensemble consists of Bi-GRU and CNN followed by Gaussian noise and global pooling layer multiplied by weights to improve the overall performance. The second is performed for other languages, a transfer learning from BERT beside the recurrent neural networks such as Bi-LSTM and Bi-GRU followed by a global average pooling layer. Word embedding and contextual embedding have been used as features, moreover, data augmentation has been used only for the Arabic language.</abstract>
      <url hash="a3a4f53d">2020.semeval-1.269</url>
      <bibkey>tawalbeh-etal-2020-keis</bibkey>
      <doi>10.18653/v1/2020.semeval-1.269</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="270">
      <title><fixed-case>KS</fixed-case>@<fixed-case>LTH</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Fine-tuning Multi- and Monolingual Transformer Models for Offensive Language Detection</title>
      <author><first>Kasper</first><last>Socha</last></author>
      <pages>2045–2053</pages>
      <abstract>This paper describes the KS@LTH system for SemEval-2020 Task 12 OffensEval2: Multilingual Offensive Language Identification in Social Media. We compare mono- and multilingual models based on fine-tuning pre-trained transformer models for offensive language identification in Arabic, Greek, English and Turkish. For Danish, we explore the possibility of fine-tuning a model pre-trained on a similar language, Swedish, and additionally also cross-lingual training together with English.</abstract>
      <url hash="630b32e7">2020.semeval-1.270</url>
      <bibkey>socha-2020-ks</bibkey>
      <doi>10.18653/v1/2020.semeval-1.270</doi>
    </paper>
    <paper id="271">
      <title><fixed-case>KUISAIL</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: <fixed-case>BERT</fixed-case>-<fixed-case>CNN</fixed-case> for Offensive Speech Identification in Social Media</title>
      <author><first>Ali</first><last>Safaya</last></author>
      <author><first>Moutasem</first><last>Abdullatif</last></author>
      <author><first>Deniz</first><last>Yuret</last></author>
      <pages>2054–2059</pages>
      <abstract>In this paper, we describe our approach to utilize pre-trained BERT models with Convolutional Neural Networks for sub-task A of the Multilingual Offensive Language Identification shared task (OffensEval 2020), which is a part of the SemEval 2020. We show that combining CNN with BERT is better than using BERT on its own, and we emphasize the importance of utilizing pre-trained language models for downstream tasks. Our system, ranked 4th with macro averaged F1-Score of 0.897 in Arabic, 4th with score of 0.843 in Greek, and 3rd with score of 0.814 in Turkish. Additionally, we present ArabicBERT, a set of pre-trained transformer language models for Arabic that we share with the community.</abstract>
      <url hash="893a8027">2020.semeval-1.271</url>
      <bibkey>safaya-etal-2020-kuisail</bibkey>
      <doi>10.18653/v1/2020.semeval-1.271</doi>
      <pwccode url="https://github.com/alisafaya/OffensEval2020" additional="false">alisafaya/OffensEval2020</pwccode>
    </paper>
    <paper id="272">
      <title>Kungfupanda at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: <fixed-case>BERT</fixed-case>-Based Multi-<fixed-case>T</fixed-case>ask<fixed-case>L</fixed-case>earning for Offensive Language Detection</title>
      <author><first>Wenliang</first><last>Dai</last></author>
      <author><first>Tiezheng</first><last>Yu</last></author>
      <author><first>Zihan</first><last>Liu</last></author>
      <author><first>Pascale</first><last>Fung</last></author>
      <pages>2060–2066</pages>
      <abstract>Nowadays, offensive content in social media has become a serious problem, and automatically detecting offensive language is an essential task. In this paper, we build an offensive language detection system, which combines multi-task learning with BERT-based models. Using a pre-trained language model such as BERT, we can effectively learn the representations for noisy text in social media. Besides, to boost the performance of offensive language detection, we leverage the supervision signals from other related tasks. In the OffensEval-2020 competition, our model achieves 91.51% F1 score in English Sub-task A, which is comparable to the first place (92.23%F1). An empirical analysis is provided to explain the effectiveness of our approaches.</abstract>
      <url hash="85a075ae">2020.semeval-1.272</url>
      <bibkey>dai-etal-2020-kungfupanda</bibkey>
      <doi>10.18653/v1/2020.semeval-1.272</doi>
      <pwccode url="https://github.com/wenliangdai/multi-task-offensive-language-detection" additional="false">wenliangdai/multi-task-offensive-language-detection</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="273">
      <title>Lee at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: A <fixed-case>BERT</fixed-case> Model Based on the Maximum Self-ensemble Strategy for Identifying Offensive Language</title>
      <author><first>Junyi</first><last>Li</last></author>
      <author><first>Xiaobing</first><last>Zhou</last></author>
      <author><first>Zichen</first><last>Zhang</last></author>
      <pages>2067–2072</pages>
      <abstract>This article describes the system submitted to SemEval 2020 Task 12: OffensEval 2020. This task aims to identify and classify offensive languages in different languages on social media. We only participate in the English part of subtask A, which aims to identify offensive languages in English. To solve this task, we propose a BERT model system based on the transform mechanism, and use the maximum self-ensemble to improve model performance. Our model achieved a macro F1 score of 0.913(ranked 13/82) in subtask A.</abstract>
      <url hash="30f9cbdf">2020.semeval-1.273</url>
      <bibkey>li-etal-2020-lee-semeval</bibkey>
      <doi>10.18653/v1/2020.semeval-1.273</doi>
    </paper>
    <paper id="274">
      <title><fixed-case>LIIR</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: A Cross-Lingual Augmentation Approach for Multilingual Offensive Language Identification</title>
      <author><first>Erfan</first><last>Ghadery</last></author>
      <author><first>Marie-Francine</first><last>Moens</last></author>
      <pages>2073–2079</pages>
      <abstract>This paper presents our system entitled ‘LIIR’ for SemEval-2020 Task 12 on Multilingual Offensive Language Identification in Social Media (OffensEval 2). We have participated in sub-task A for English, Danish, Greek, Arabic, and Turkish languages. We adapt and fine-tune the BERT and Multilingual Bert models made available by Google AI for English and non-English languages respectively. For the English language, we use a combination of two fine-tuned BERT models. For other languages we propose a cross-lingual augmentation approach in order to enrich training data and we use Multilingual BERT to obtain sentence representations.</abstract>
      <url hash="2541f3e5">2020.semeval-1.274</url>
      <bibkey>ghadery-moens-2020-liir</bibkey>
      <doi>10.18653/v1/2020.semeval-1.274</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="275">
      <title><fixed-case>LISAC</fixed-case> <fixed-case>FSDM</fixed-case>-<fixed-case>USMBA</fixed-case> Team at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Overcoming <fixed-case>A</fixed-case>ra<fixed-case>BERT</fixed-case>’s pretrain-finetune discrepancy for <fixed-case>A</fixed-case>rabic offensive language identification</title>
      <author><first>Hamza</first><last>Alami</last></author>
      <author><first>Said</first><last>Ouatik El Alaoui</last></author>
      <author><first>Abdessamad</first><last>Benlahbib</last></author>
      <author><first>Noureddine</first><last>En-nahnahi</last></author>
      <pages>2080–2085</pages>
      <abstract>AraBERT is an Arabic version of the state-of-the-art Bidirectional Encoder Representations from Transformers (BERT) model. The latter has achieved good performance in a variety of Natural Language Processing (NLP) tasks. In this paper, we propose an effective AraBERT embeddings-based method for dealing with offensive Arabic language in Twitter. First, we pre-process tweets by handling emojis and including their Arabic meanings. To overcome the pretrain-finetune discrepancy, we substitute each detected emojis by the special token [MASK] into both fine tuning and inference phases. Then, we represent tweets tokens by applying AraBERT model. Finally, we feed the tweet representation into a sigmoid function to decide whether a tweet is offensive or not. The proposed method achieved the best results on OffensEval 2020: Arabic task and reached a macro F1 score equal to 90.17%.</abstract>
      <url hash="0ec3d976">2020.semeval-1.275</url>
      <bibkey>alami-etal-2020-lisac</bibkey>
      <doi>10.18653/v1/2020.semeval-1.275</doi>
    </paper>
    <paper id="276">
      <title><fixed-case>NAYEL</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: <fixed-case>TF</fixed-case>/<fixed-case>IDF</fixed-case>-Based Approach for Automatic Offensive Language Detection in <fixed-case>A</fixed-case>rabic Tweets</title>
      <author><first>Hamada</first><last>Nayel</last></author>
      <pages>2086–2089</pages>
      <abstract>In this paper, we present the system submitted to “SemEval-2020 Task 12”. The proposed system aims at automatically identify the Offensive Language in Arabic Tweets. A machine learning based approach has been used to design our system. We implemented a linear classifier with Stochastic Gradient Descent (SGD) as optimization algorithm. Our model reported 84.20%, 81.82% f1-score on development set and test set respectively. The best performed system and the system in the last rank reported 90.17% and 44.51% f1-score on test set respectively.</abstract>
      <url hash="074800bc">2020.semeval-1.276</url>
      <bibkey>nayel-2020-nayel</bibkey>
      <doi>10.18653/v1/2020.semeval-1.276</doi>
    </paper>
    <paper id="277">
      <title><fixed-case>NLP</fixed-case>_<fixed-case>P</fixed-case>assau at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Multilingual Neural Network for Offensive Language Detection in <fixed-case>E</fixed-case>nglish, <fixed-case>D</fixed-case>anish and <fixed-case>T</fixed-case>urkish</title>
      <author><first>Omar</first><last>Hussein</last></author>
      <author><first>Hachem</first><last>Sfar</last></author>
      <author><first>Jelena</first><last>Mitrović</last></author>
      <author><first>Michael</first><last>Granitzer</last></author>
      <pages>2090–2097</pages>
      <abstract>This paper describes a neural network (NN) model that was used for participating in the OffensEval, Task 12 of the SemEval 2020 workshop. The aim of this task is to identify offensive speech in social media, particularly in tweets. The model we used, C-BiGRU, is composed of a Convolutional Neural Network (CNN) along with a bidirectional Recurrent Neural Network (RNN). A multidimensional numerical representation (embedding) for each of the words in the tweets that were used by the model were determined using fastText. This allowed for using a dataset of labeled tweets to train the model on detecting combinations of words that may convey an offensive meaning. This model was used in the sub-task A of the English, Turkish and Danish competitions of the workshop, achieving F1 scores of 90.88%, 76.76% and 76.70%, respectively.</abstract>
      <url hash="7cbecf17">2020.semeval-1.277</url>
      <bibkey>hussein-etal-2020-nlp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.277</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="278">
      <title>nlp<fixed-case>UP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12 : A Blazing Fast System for Offensive Language Detection</title>
      <author><first>Ehab</first><last>Hamdy</last></author>
      <author><first>Jelena</first><last>Mitrović</last></author>
      <author><first>Michael</first><last>Granitzer</last></author>
      <pages>2098–2104</pages>
      <abstract>In this paper, we introduce our submission for the SemEval Task 12, sub-tasks A and B for offensive language identification and categorization in English tweets. This year the data set for Task A is significantly larger than in the previous year. Therefore, we have adapted the BlazingText algorithm to extract embedding representation and classify texts after filtering and sanitizing the dataset according to the conventional text patterns on social media. We have gained both advantages of a speedy training process and obtained a good F1 score of 90.88% on the test set. For sub-task B, we opted to fine-tune a Bidirectional Encoder Representation from a Transformer (BERT) to accommodate the limited data for categorizing offensive tweets. We have achieved an F1 score of only 56.86%, but after experimenting with various label assignment thresholds in the pre-processing steps, the F1 score improved to 64%.</abstract>
      <url hash="2b839717">2020.semeval-1.278</url>
      <bibkey>hamdy-etal-2020-nlpup</bibkey>
      <doi>10.18653/v1/2020.semeval-1.278</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="279">
      <title><fixed-case>NTU</fixed-case>_<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Identifying Offensive Tweets Using Hierarchical Multi-Task Learning Approach</title>
      <author><first>Po-Chun</first><last>Chen</last></author>
      <author><first>Hen-Hsen</first><last>Huang</last></author>
      <author><first>Hsin-Hsi</first><last>Chen</last></author>
      <pages>2105–2110</pages>
      <abstract>This paper presents our hierarchical multi-task learning (HMTL) and multi-task learning (MTL) approaches for improving the text encoder in Sub-tasks A, B, and C of Multilingual Offensive Language Identification in Social Media (SemEval-2020 Task 12). We show that using the MTL approach can greatly improve the performance of complex problems, i.e. Sub-tasks B and C. Coupled with a hierarchical approach, the performances are further improved. Overall, our best model, HMTL outperforms the baseline model by 3% and 2% of Macro F-score in Sub-tasks B and C of OffensEval 2020, respectively.</abstract>
      <url hash="ebcf88eb">2020.semeval-1.279</url>
      <bibkey>chen-etal-2020-ntu</bibkey>
      <doi>10.18653/v1/2020.semeval-1.279</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="280">
      <title><fixed-case>PGSG</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: <fixed-case>BERT</fixed-case>-<fixed-case>LSTM</fixed-case> with Tweets’ Pretrained Model and Noisy Student Training Method</title>
      <author><first>Bao-Tran</first><last>Pham-Hong</last></author>
      <author><first>Setu</first><last>Chokshi</last></author>
      <pages>2111–2116</pages>
      <abstract>The paper presents a system developed for the SemEval-2020 competition Task 12 (OffensEval-2): Multilingual Offensive Language Identification in Social Media. We achieve the second place (2nd) in sub-task B: Automatic categorization of offense types and are ranked 55th with a macro F1-score of 90.59 in sub-task A: Offensive language identification. Our solution is using a stack of BERT and LSTM layers, training with the Noisy Student method. Since the tweets data contains a large number of noisy words and slang, we update the vocabulary of the BERT large model pre-trained by the Google AI Language team. We fine-tune the model with tweet sentences provided in the challenge.</abstract>
      <url hash="2a5fd20e">2020.semeval-1.280</url>
      <bibkey>pham-hong-chokshi-2020-pgsg</bibkey>
      <doi>10.18653/v1/2020.semeval-1.280</doi>
    </paper>
    <paper id="281">
      <title>Pin_cod_ at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Injecting Lexicons into Bidirectional Long Short-Term Memory Networks to Detect <fixed-case>T</fixed-case>urkish Offensive Tweets</title>
      <author><first>Pinar</first><last>Arslan</last></author>
      <pages>2117–2122</pages>
      <abstract>This paper describes a system (pin_cod_) built for SemEval 2020 Task 12: OffensEval: Multilingual Offensive Language Identification in Social Media (Zampieri et al., 2020). I present the system based on the architecture of bidirectional long short-term memory networks (BiLSTM) concatenated with lexicon-based features and a social-network specific feature and then followed by two fully connected dense layers for detecting Turkish offensive tweets. The pin cod ’s system achieved a macro F1-score of 0.7496 for Sub-task A - Offensive language identification in Turkish.</abstract>
      <url hash="9dc536ab">2020.semeval-1.281</url>
      <bibkey>arslan-2020-pin</bibkey>
      <doi>10.18653/v1/2020.semeval-1.281</doi>
    </paper>
    <paper id="282">
      <title>problem<fixed-case>C</fixed-case>onquero at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Transformer and Soft Label-based Approaches</title>
      <author><first>Karishma</first><last>Laud</last></author>
      <author><first>Jagriti</first><last>Singh</last></author>
      <author><first>Randeep Kumar</first><last>Sahu</last></author>
      <author><first>Ashutosh</first><last>Modi</last></author>
      <pages>2123–2132</pages>
      <abstract>In this paper, we present various systems submitted by our team problemConquero for SemEval-2020 Shared Task 12 “Multilingual Offensive Language Identification in Social Media”. We participated in all the three sub-tasks of OffensEval-2020, and our final submissions during the evaluation phase included transformer-based approaches and a soft label-based approach. BERT based fine-tuned models were submitted for each language of sub-task A (offensive tweet identification). RoBERTa based fine-tuned model for sub-task B (automatic categorization of offense types) was submitted. We submitted two models for sub-task C (offense target identification), one using soft labels and the other using BERT based fine-tuned model. Our ranks for sub-task A were Greek-19 out of 37, Turkish-22 out of 46, Danish-26 out of 39, Arabic-39 out of 53, and English-20 out of 85. We achieved a rank of 28 out of 43 for sub-task B. Our best rank for sub-task C was 20 out of 39 using BERT based fine-tuned model.</abstract>
      <url hash="1fdf0e6e">2020.semeval-1.282</url>
      <bibkey>laud-etal-2020-problemconquero</bibkey>
      <doi>10.18653/v1/2020.semeval-1.282</doi>
      <pwccode url="https://github.com/karishmaslaud/OffensEval" additional="false">karishmaslaud/OffensEval</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="283">
      <title><fixed-case>S</fixed-case>alam<fixed-case>NET</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Deep Learning Approach for <fixed-case>A</fixed-case>rabic Offensive Language Detection</title>
      <author><first>Fatemah</first><last>Husain</last></author>
      <author><first>Jooyeon</first><last>Lee</last></author>
      <author><first>Sam</first><last>Henry</last></author>
      <author><first>Ozlem</first><last>Uzuner</last></author>
      <pages>2133–2139</pages>
      <abstract>This paper describes SalamNET, an Arabic offensive language detection system that has been submitted to SemEval 2020 shared task 12: Multilingual Offensive Language Identification in Social Media. Our approach focuses on applying multiple deep learning models and conducting in depth error analysis of results to provide system implications for future development considerations. To pursue our goal, a Recurrent Neural Network (RNN), a Gated Recurrent Unit (GRU), and Long-Short Term Memory (LSTM) models with different design architectures have been developed and evaluated. The SalamNET, a Bi-directional Gated Recurrent Unit (Bi-GRU) based model, reports a macro-F1 score of 0.83%</abstract>
      <url hash="af3d59f6">2020.semeval-1.283</url>
      <bibkey>husain-etal-2020-salamnet</bibkey>
      <doi>10.18653/v1/2020.semeval-1.283</doi>
    </paper>
    <paper id="284">
      <title>Smatgrisene at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Offense Detection by <fixed-case>AI</fixed-case> - with a Pinch of Real <fixed-case>I</fixed-case></title>
      <author><first>Peter Juel</first><last>Henrichsen</last></author>
      <author><first>Marianne</first><last>Rathje</last></author>
      <pages>2140–2145</pages>
      <abstract>This paper discusses how ML based classifiers can be enhanced disproportionately by adding small amounts of qualitative linguistic knowledge. As an example we present the Danish classifier Smatgrisene, our contribution to the recent OffensEval Challenge 2020. The classifier was trained on 3000 social media posts annotated for offensiveness, supplemented by rules extracted from the reference work on Danish offensive language (Rathje 2014b). Smatgrisene did surprisingly well in the competition in spite of its extremely simple design, showing an interesting trade-off between technological muscle and linguistic intelligence. Finally, we comment on the perspectives in combining qualitative and quantitative methods for NLP.</abstract>
      <url hash="c91f7724">2020.semeval-1.284</url>
      <bibkey>henrichsen-rathje-2020-smatgrisene</bibkey>
      <doi>10.18653/v1/2020.semeval-1.284</doi>
    </paper>
    <paper id="285">
      <title>Sonal.kumari at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Social Media Multilingual Offensive Text Identification and Categorization Using Neural Network Models</title>
      <author><first>Sonal</first><last>Kumari</last></author>
      <pages>2146–2154</pages>
      <abstract>In this paper, we present our approaches and results for SemEval-2020 Task 12, Multilingual Offensive Language Identification in Social Media (OffensEval 2020). The OffensEval 2020 had three subtasks: A) Identifying the tweets to be offensive (OFF) or non-offensive (NOT) for Arabic, Danish, English, Greek, and Turkish languages, B) Detecting if the offensive tweet is targeted (TIN) or untargeted (UNT) for the English language, and C) Categorizing the offensive targeted tweets into three classes, namely: individual (IND), Group (GRP), or Other (OTH) for the English language. We participate in all the subtasks A, B, and C. In our solution, first we use the pre-trained BERT model for all subtasks, A, B, and C and then we apply the BiLSTM model with attention mechanism (Attn-BiLSTM) for the same. Our result demonstrates that the pre-trained model is not giving good results for all types of languages and is compute and memory intensive whereas the Attn-BiLSTM model is fast and gives good accuracy with fewer resources. The Attn-BiLSTM model is giving better accuracy for Arabic and Greek where the pre-trained model is not able to capture the complete context of these languages due to lower vocab-size.</abstract>
      <url hash="c5930894">2020.semeval-1.285</url>
      <bibkey>kumari-2020-sonal</bibkey>
      <doi>10.18653/v1/2020.semeval-1.285</doi>
    </paper>
    <paper id="286">
      <title>Ssn_nlp at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val 2020 Task 12: Offense Target Identification in Social Media Using Traditional and Deep Machine Learning Approaches</title>
      <author><first>Thenmozhi</first><last>D.</last></author>
      <author><first>Nandhinee</first><last>P.r.</last></author>
      <author><first>Arunima</first><last>S.</last></author>
      <author><first>Amlan</first><last>Sengupta</last></author>
      <pages>2155–2160</pages>
      <abstract>Offensive language identification (OLI) in user generated text is automatic detection of any profanity, insult, obscenity, racism or vulgarity that is addressed towards an individual or a group. Due to immense growth and usage of social media, it has an extensive reach and impact on the society. OLI is helpful for hate speech detection, flame detection and cyber bullying, hence it is used to avoid abuse and hurts. In this paper, we present state of the art machine learning approaches for OLI. We follow several approaches which include classifiers like Naive Bayes, Support Vector Machine(SVM) and deep learning approaches like Recurrent Neural Network(RNN) and Masked LM (MLM). The approaches are evaluated on the OffensEval@SemEval2020 dataset and our team ssn_nlp submitted runs for the third task of OffensEval shared task. The best run of ssn_nlp that uses BERT (Bidirectional Encoder Representations from Transformers) for the purpose of training the OLI model obtained F1 score as 0.61. The model performs with an accuracy of 0.80 and an evaluation loss of 1.0828. The model has a precision rate of 0.72 and a recall rate of 0.58.</abstract>
      <url hash="87bd8267">2020.semeval-1.286</url>
      <bibkey>d-etal-2020-ssn</bibkey>
      <doi>10.18653/v1/2020.semeval-1.286</doi>
    </paper>
    <paper id="287">
      <title><fixed-case>SSN</fixed-case>_<fixed-case>NLP</fixed-case>_<fixed-case>MLRG</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Offensive Language Identification in <fixed-case>E</fixed-case>nglish, <fixed-case>D</fixed-case>anish, <fixed-case>G</fixed-case>reek Using <fixed-case>BERT</fixed-case> and Machine Learning Approach</title>
      <author><first>A</first><last>Kalaivani</last></author>
      <author><first>Thenmozhi</first><last>D.</last></author>
      <pages>2161–2170</pages>
      <abstract>Offensive language identification is to detect the hurtful tweets, derogatory comments, swear words on social media. As an emerging growth of social media communication, offensive language detection has received more attention in the last years; we focus to perform the task on English, Danish and Greek. We have investigated which can be effect more on pre-trained models BERT (Bidirectional Encoder Representation from Transformer) and Machine Learning Approaches. Our investigation shows the difference performance between the three languages and to identify the best performance is evaluated by the classification algorithms. In the shared task SemEval-2020, our team SSN_NLP_MLRG submitted for three languages that are Subtasks A, B, C in English, Subtask A in Danish and Subtask A in Greek. Our team SSN_NLP_MLRG obtained the F1 Scores as 0.90, 0.61, 0.52 for the Subtasks A, B, C in English, 0.56 for the Subtask A in Danish and 0.67 for the Subtask A in Greek respectively.</abstract>
      <url hash="d7f35faf">2020.semeval-1.287</url>
      <bibkey>kalaivani-d-2020-ssn</bibkey>
      <doi>10.18653/v1/2020.semeval-1.287</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="288">
      <title><fixed-case>SU</fixed-case>-<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Offensive Language <fixed-case>I</fixed-case>dentifi<fixed-case>C</fixed-case>ation in <fixed-case>T</fixed-case>urkish Tweets</title>
      <author><first>Anil</first><last>Ozdemir</last></author>
      <author><first>Reyyan</first><last>Yeniterzi</last></author>
      <pages>2171–2176</pages>
      <abstract>This paper summarizes our group’s efforts in the offensive language identification shared task, which is organized as part of the International Workshop on Semantic Evaluation (Sem-Eval2020). Our final submission system is an ensemble of three different models, (1) CNN-LSTM, (2) BiLSTM-Attention and (3) BERT. Word embeddings, which were pre-trained on tweets, are used while training the first two models. BERTurk, which is the first BERT model for Turkish, is also explored. Our final submitted approach ranked as the second best model in the Turkish sub-task.</abstract>
      <url hash="cdfd991a">2020.semeval-1.288</url>
      <bibkey>ozdemir-yeniterzi-2020-su</bibkey>
      <doi>10.18653/v1/2020.semeval-1.288</doi>
    </paper>
    <paper id="289">
      <title><fixed-case>TAC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Ensembling Approach for Multilingual Offensive Language Identification in Social Media</title>
      <author><first>Talha</first><last>Anwar</last></author>
      <author><first>Omer</first><last>Baig</last></author>
      <pages>2177–2182</pages>
      <abstract>Usage of offensive language on social media is getting more common these days, and there is a need of a mechanism to detect it and control it. This paper deals with offensive language detection in five different languages; English, Arabic, Danish, Greek and Turkish. We presented an almost similar ensemble pipeline comprised of machine learning and deep learning models for all five languages. Three machine learning and four deep learning models were used in the ensemble. In the OffensEval-2020 competition our model achieved F1-score of 0.85, 0.74, 0.68, 0.81, and 0.9 for Arabic, Turkish, Danish, Greek and English language tasks respectively.</abstract>
      <url hash="9b3b6acd">2020.semeval-1.289</url>
      <bibkey>anwar-baig-2020-tac</bibkey>
      <doi>10.18653/v1/2020.semeval-1.289</doi>
      <pwccode url="https://github.com/talhaanwarch/offenseeval2020" additional="false">talhaanwarch/offenseeval2020</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="290">
      <title>Team Rouges at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Cross-lingual Inductive Transfer to Detect Offensive Language</title>
      <author><first>Tanvi</first><last>Dadu</last></author>
      <author><first>Kartikey</first><last>Pant</last></author>
      <pages>2183–2189</pages>
      <abstract>With the growing use of social media and its availability, many instances of the use of offensive language have been observed across multiple languages and domains. This phenomenon has given rise to the growing need to detect the offensive language used in social media cross-lingually. In OffensEval 2020, the organizers have released the multilingual Offensive Language Identification Dataset (mOLID), which contains tweets in five different languages, to detect offensive language. In this work, we introduce a cross-lingual inductive approach to identify the offensive language in tweets using the contextual word embedding XLM-RoBERTa (XLM-R). We show that our model performs competitively on all five languages, obtaining the fourth position in the English task with an F1-score of 0.919 and eighth position in the Turkish task with an F1-score of 0.781. Further experimentation proves that our model works competitively in a zero-shot learning environment, and is extensible to other languages.</abstract>
      <url hash="b4478ca7">2020.semeval-1.290</url>
      <bibkey>dadu-pant-2020-team</bibkey>
      <doi>10.18653/v1/2020.semeval-1.290</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/xnli">XNLI</pwcdataset>
    </paper>
    <paper id="291">
      <title><fixed-case>TECHSSN</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Offensive Language Detection Using <fixed-case>BERT</fixed-case> Embeddings</title>
      <author><first>Rajalakshmi</first><last>Sivanaiah</last></author>
      <author><first>Angel</first><last>Suseelan</last></author>
      <author><first>S Milton</first><last>Rajendram</last></author>
      <author><first>Mirnalinee</first><last>T.t.</last></author>
      <pages>2190–2196</pages>
      <abstract>This paper describes the work of identifying the presence of offensive language in social media posts and categorizing a post as targeted to a particular person or not. The work developed by team TECHSSN for solving the Multilingual Offensive Language Identification in Social Media (Task 12) in SemEval-2020 involves the use of deep learning models with BERT embeddings. The dataset is preprocessed and given to a Bidirectional Encoder Representations from Transformers (BERT) model with pretrained weight vectors. The model is retrained and the weights are learned for the offensive language dataset. We have developed a system with the English language dataset. The results are better when compared to the model we developed in SemEval-2019 Task6.</abstract>
      <url hash="9f09b59e">2020.semeval-1.291</url>
      <bibkey>sivanaiah-etal-2020-techssn</bibkey>
      <doi>10.18653/v1/2020.semeval-1.291</doi>
    </paper>
    <paper id="292">
      <title><fixed-case>T</fixed-case>he<fixed-case>N</fixed-case>orth at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Hate Speech Detection Using <fixed-case>R</fixed-case>o<fixed-case>BERT</fixed-case>a</title>
      <author><first>Pedro</first><last>Alonso</last></author>
      <author><first>Rajkumar</first><last>Saini</last></author>
      <author><first>György</first><last>Kovacs</last></author>
      <pages>2197–2202</pages>
      <abstract>Hate speech detection on social media platforms is crucial as it helps to avoid severe situations, and severe harm to marginalized people and groups. The application of Natural Language Processing(NLP) and Deep Learning has garnered encouraging results in the task of hate speech detection. The expression of hate, however is varied and ever evolving. Thus, it is important for better detection systems to adapt to this variance. Because of this, researchers keep on collecting data and regularly come up with hate speech detection competitions. In this paper, we discuss our entry to one such competition, namely the English version of sub-task A for the OffensEval competition. Our contribution can be perceived through our results, which were first a F1-score of 0.9089, and with further refinements described here climb up to0.9166. It serves to give more support to our hypothesis that one of the variants of BERT (Devlin et al., 2018), namely RoBERTa can successfully differentiate between offensive and not-offensive tweets, given some preprocessing steps (also outlined here).</abstract>
      <url hash="645d9028">2020.semeval-1.292</url>
      <bibkey>alonso-etal-2020-thenorth</bibkey>
      <doi>10.18653/v1/2020.semeval-1.292</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="293">
      <title><fixed-case>UJNLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Detecting Offensive Language Using Bidirectional Transformers</title>
      <author><first>Yinnan</first><last>Yao</last></author>
      <author><first>Nan</first><last>Su</last></author>
      <author><first>Kun</first><last>Ma</last></author>
      <pages>2203–2208</pages>
      <abstract>In this paper, we built several pre-trained models to participate SemEval-2020 Task 12: Multilingual Offensive Language Identification in Social Media. In the common task of Offensive Language Identification in Social Media, pre-trained models such as Bidirectional Encoder Representation from Transformer (BERT) have achieved good results. We preprocess the dataset by the language habits of users in social network. Considering the data imbalance in OffensEval, we screened the newly provided machine annotation samples to construct a new dataset. We use the dataset to fine-tune the Robustly Optimized BERT Pretraining Approach (RoBERTa). For the English subtask B, we adopted the method of adding Auxiliary Sentences (AS) to transform the single-sentence classification task into a relationship recognition task between sentences. Our team UJNLP wins the ranking 16th of 85 in English subtask A (Offensive language identification).</abstract>
      <url hash="7bb22ff9">2020.semeval-1.293</url>
      <bibkey>yao-etal-2020-ujnlp</bibkey>
      <doi>10.18653/v1/2020.semeval-1.293</doi>
      <pwccode url="https://github.com/yaoyinnan/offenseval" additional="false">yaoyinnan/offenseval</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="294">
      <title><fixed-case>UNT</fixed-case> Linguistics at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Linear <fixed-case>SVC</fixed-case> with Pre-trained Word Embeddings as Document Vectors and Targeted Linguistic Features</title>
      <author><first>Jared</first><last>Fromknecht</last></author>
      <author><first>Alexis</first><last>Palmer</last></author>
      <pages>2209–2215</pages>
      <abstract>This paper outlines our approach to Tasks A &amp; B for the English Language track of SemEval-2020 Task 12: OffensEval 2: Multilingual Offensive Language Identification in Social Media. We use a Linear SVM with document vectors computed from pre-trained word embeddings, and we explore the effectiveness of lexical, part of speech, dependency, and named entity (NE) features. We manually annotate a subset of the training data, which we use for error analysis and to tune a threshold for mapping training confidence values to labels. While document vectors are consistently the most informative features for both tasks, testing on the development set suggests that dependency features are an effective addition for Task A, and NE features for Task B.</abstract>
      <url hash="b2077be1">2020.semeval-1.294</url>
      <bibkey>fromknecht-palmer-2020-unt</bibkey>
      <doi>10.18653/v1/2020.semeval-1.294</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="295">
      <title><fixed-case>U</fixed-case>o<fixed-case>B</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Boosting <fixed-case>BERT</fixed-case> with Corpus Level Information</title>
      <author><first>Wah Meng</first><last>Lim</last></author>
      <author><first>Harish</first><last>Tayyar Madabushi</last></author>
      <pages>2216–2221</pages>
      <abstract>Pre-trained language model word representation, such as BERT, have been extremely successful in several Natural Language Processing tasks significantly improving on the state-of-the-art. This can largely be attributed to their ability to better capture semantic information contained within a sentence. Several tasks, however, can benefit from information available at a corpus level, such as Term Frequency-Inverse Document Frequency (TF-IDF). In this work we test the effectiveness of integrating this information with BERT on the task of identifying abuse on social media and show that integrating this information with BERT does indeed significantly improve performance. We participate in Sub-Task A (abuse detection) wherein we achieve a score within two points of the top performing team and in Sub-Task B (target detection) wherein we are ranked 4 of the 44 participating teams.</abstract>
      <url hash="709f5882">2020.semeval-1.295</url>
      <bibkey>lim-tayyar-madabushi-2020-uob</bibkey>
      <doi>10.18653/v1/2020.semeval-1.295</doi>
    </paper>
    <paper id="296">
      <title><fixed-case>UPB</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Multilingual Offensive Language Detection on Social Media by Fine-tuning a Variety of <fixed-case>BERT</fixed-case>-based Models</title>
      <author><first>Mircea-Adrian</first><last>Tanase</last></author>
      <author><first>Dumitru-Clementin</first><last>Cercel</last></author>
      <author><first>Costin</first><last>Chiru</last></author>
      <pages>2222–2231</pages>
      <abstract>Offensive language detection is one of the most challenging problem in the natural language processing field, being imposed by the rising presence of this phenomenon in online social media. This paper describes our Transformer-based solutions for identifying offensive language on Twitter in five languages (i.e., English, Arabic, Danish, Greek, and Turkish), which was employed in Subtask A of the Offenseval 2020 shared task. Several neural architectures (i.e., BERT, mBERT, Roberta, XLM-Roberta, and ALBERT), pre-trained using both single-language and multilingual corpora, were fine-tuned and compared using multiple combinations of datasets. Finally, the highest-scoring models were used for our submissions in the competition, which ranked our team 21st of 85, 28th of 53, 19th of 39, 16th of 37, and 10th of 46 for English, Arabic, Danish, Greek, and Turkish, respectively.</abstract>
      <url hash="1840b0e9">2020.semeval-1.296</url>
      <bibkey>tanase-etal-2020-upb</bibkey>
      <doi>10.18653/v1/2020.semeval-1.296</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/hate-speech-and-offensive-language">Hate Speech and Offensive Language</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="297">
      <title><fixed-case>UTFPR</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val 2020 Task 12: Identifying Offensive Tweets with Lightweight Ensembles</title>
      <author><first>Marcos Aurélio Hermogenes</first><last>Boriola</last></author>
      <author><first>Gustavo Henrique</first><last>Paetzold</last></author>
      <pages>2232–2236</pages>
      <abstract>Offensive language is a common issue on social media platforms nowadays. In an effort to address this issue, the SemEval 2020 event held the OffensEval 2020 shared task where the participants were challenged to develop systems that identify and classify offensive language in tweets. In this paper, we present a system that uses an Ensemble model stacking a BOW model and a CNN model that led us to place 29th in the ranking for English sub-task A.</abstract>
      <url hash="f0f42fb7">2020.semeval-1.297</url>
      <bibkey>boriola-paetzold-2020-utfpr</bibkey>
      <doi>10.18653/v1/2020.semeval-1.297</doi>
    </paper>
    <paper id="298">
      <title><fixed-case>WOLI</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: <fixed-case>A</fixed-case>rabic Offensive Language Identification on Different <fixed-case>T</fixed-case>witter Datasets</title>
      <author><first>Yasser</first><last>Otiefy</last></author>
      <author><first>Ahmed</first><last>Abdelmalek</last></author>
      <author><first>Islam</first><last>El Hosary</last></author>
      <pages>2237–2243</pages>
      <abstract>Communicating through social platforms has become one of the principal means of personal communications and interactions. Unfortunately, healthy communication is often interfered by offensive language that can have damaging effects on the users. A key to fight offensive language on social media is the existence of an automatic offensive language detection system. This paper presents the results and the main findings of SemEval-2020, Task 12 OffensEval Sub-task A Zampieri et al. (2020), on Identifying and categorising Offensive Language in Social Media. The task was based on the Arabic OffensEval dataset Mubarak et al. (2020). In this paper, we describe the system submitted by WideBot AI Lab for the shared task which ranked 10th out of 52 participants with Macro-F1 86.9% on the golden dataset under CodaLab username “yasserotiefy”. We experimented with various models and the best model is a linear SVM in which we use a combination of both character and word n-grams. We also introduced a neural network approach that enhanced the predictive ability of our system that includes CNN, highway network, Bi-LSTM, and attention layers.</abstract>
      <url hash="eb5efa1a">2020.semeval-1.298</url>
      <bibkey>otiefy-etal-2020-woli</bibkey>
      <doi>10.18653/v1/2020.semeval-1.298</doi>
    </paper>
    <paper id="299">
      <title><fixed-case>XD</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Ensemble Approach to Offensive Language Identification in Social Media Using Transformer Encoders</title>
      <author><first>Xiangjue</first><last>Dong</last></author>
      <author><first>Jinho D.</first><last>Choi</last></author>
      <pages>2244–2250</pages>
      <abstract>This paper presents six document classification models using the latest transformer encoders and a high-performing ensemble model for a task of offensive language identification in social media. For the individual models, deep transformer layers are applied to perform multi-head attentions. For the ensemble model, the utterance representations taken from those individual models are concatenated and fed into a linear decoder to make the final decisions. Our ensemble model outperforms the individual models and shows up to 8.6% improvement over the individual models on the development set. On the test set, it achieves macro-F1 of 90.9% and becomes one of the high performing systems among 85 participants in the sub-task A of this shared task. Our analysis shows that although the ensemble model significantly improves the accuracy on the development set, the improvement is not as evident on the test set.</abstract>
      <url hash="537aca91">2020.semeval-1.299</url>
      <bibkey>dong-choi-2020-xd</bibkey>
      <doi>10.18653/v1/2020.semeval-1.299</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="300">
      <title><fixed-case>YNU</fixed-case>_oxz at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2020 Task 12: Bidirectional <fixed-case>GRU</fixed-case> with Capsule for Identifying Multilingual Offensive Language</title>
      <author><first>Xiaozhi</first><last>Ou</last></author>
      <author><first>Hongling</first><last>Li</last></author>
      <pages>2251–2257</pages>
      <abstract>This article describes the system submitted to SemEval-2020 Task 12 OffensEval 2: Multilingual Offensive Language Recognition in Social Media. The task is to classify offensive language in social media. The shared task contains five languages (English, Greek, Arabic, Danish, and Turkish) and three subtasks. We only participated in subtask A of English to identify offensive language. To solve this task, we proposed a system based on a Bidirectional Gated Recurrent Unit (Bi-GRU) with a Capsule model. Finally, we used the K-fold approach for ensemble. Our model achieved a Macro-average F1 score of 0.90969 (ranked 27/85) in subtask A.</abstract>
      <url hash="7a6fc82e">2020.semeval-1.300</url>
      <bibkey>ou-li-2020-ynu-oxz</bibkey>
      <doi>10.18653/v1/2020.semeval-1.300</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/hate-speech-and-offensive-language">Hate Speech and Offensive Language</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
  </volume>
</collection>
