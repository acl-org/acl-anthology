<?xml version='1.0' encoding='UTF-8'?>
<collection id="2020.nlp4convai">
  <volume id="1" ingest-date="2020-06-21">
    <meta>
      <booktitle>Proceedings of the 2nd Workshop on Natural Language Processing for Conversational AI</booktitle>
      <editor><first>Tsung-Hsien</first><last>Wen</last></editor>
      <editor><first>Asli</first><last>Celikyilmaz</last></editor>
      <editor><first>Zhou</first><last>Yu</last></editor>
      <editor><first>Alexandros</first><last>Papangelis</last></editor>
      <editor><first>Mihail</first><last>Eric</last></editor>
      <editor><first>Anuj</first><last>Kumar</last></editor>
      <editor><first>Iñigo</first><last>Casanueva</last></editor>
      <editor><first>Rushin</first><last>Shah</last></editor>
      <publisher>Association for Computational Linguistics</publisher>
      <address>Online</address>
      <month>July</month>
      <year>2020</year>
      <url hash="ce634d6f">2020.nlp4convai-1</url>
      <venue>nlp4convai</venue>
    </meta>
    <frontmatter>
      <url hash="a9c1804c">2020.nlp4convai-1.0</url>
      <bibkey>nlp4convai-2020-natural</bibkey>
    </frontmatter>
    <paper id="1">
      <title>Using Alternate Representations of Text for Natural Language Understanding</title>
      <author><first>Venkat</first><last>Varada</last></author>
      <author><first>Charith</first><last>Peris</last></author>
      <author><first>Yangsook</first><last>Park</last></author>
      <author><first>Christopher</first><last>Dipersio</last></author>
      <pages>1–10</pages>
      <abstract>One of the core components of voice assistants is the Natural Language Understanding (NLU) model. Its ability to accurately classify the user’s request (or “intent”) and recognize named entities in an utterance is pivotal to the success of these assistants. NLU models can be challenged in some languages by code-switching or morphological and orthographic variations. This work explores the possibility of improving the accuracy of NLU models for Indic languages via the use of alternate representations of input text for NLU, specifically ISO-15919 and IndicSOUNDEX, a custom SOUNDEX designed to work for Indic languages. We used a deep neural network based model to incorporate the information from alternate representations into the NLU model. We show that using alternate representations significantly improves the overall performance of NLU models when training data is limited.</abstract>
      <url hash="e22d6756">2020.nlp4convai-1.1</url>
      <doi>10.18653/v1/2020.nlp4convai-1.1</doi>
      <video href="http://slideslive.com/38929631"/>
      <bibkey>varada-etal-2020-using</bibkey>
    </paper>
    <paper id="2">
      <title>On Incorporating Structural Information to improve Dialogue Response Generation</title>
      <author><first>Nikita</first><last>Moghe</last></author>
      <author><first>Priyesh</first><last>Vijayan</last></author>
      <author><first>Balaraman</first><last>Ravindran</last></author>
      <author><first>Mitesh M.</first><last>Khapra</last></author>
      <pages>11–24</pages>
      <abstract>We consider the task of generating dialogue responses from background knowledge comprising of domain specific resources. Specifically, given a conversation around a movie, the task is to generate the next response based on background knowledge about the movie such as the plot, review, Reddit comments etc. This requires capturing structural, sequential and semantic information from the conversation context and the background resources. We propose a new architecture that uses the ability of BERT to capture deep contextualized representations in conjunction with explicit structure and sequence information. More specifically, we use (i) Graph Convolutional Networks (GCNs) to capture structural information, (ii) LSTMs to capture sequential information and (iii) BERT for the deep contextualized representations that capture semantic information. We analyze the proposed architecture extensively. To this end, we propose a plug-and-play Semantics-Sequences-Structures (SSS) framework which allows us to effectively combine such linguistic information. Through a series of experiments we make some interesting observations. First, we observe that the popular adaptation of the GCN model for NLP tasks where structural information (GCNs) was added on top of sequential information (LSTMs) performs poorly on our task. This leads us to explore interesting ways of combining semantic and structural information to improve the performance. Second, we observe that while BERT already outperforms other deep contextualized representations such as ELMo, it still benefits from the additional structural information explicitly added using GCNs. This is a bit surprising given the recent claims that BERT already captures structural information. Lastly, the proposed SSS framework gives an improvement of 7.95% on BLUE score over the baseline.</abstract>
      <url hash="da7464a7">2020.nlp4convai-1.2</url>
      <doi>10.18653/v1/2020.nlp4convai-1.2</doi>
      <video href="http://slideslive.com/38929628"/>
      <bibkey>moghe-etal-2020-incorporating</bibkey>
      <pwccode url="https://github.com/nikitacs16/horovod_gcn_pointer_generator" additional="false">nikitacs16/horovod_gcn_pointer_generator</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/holl-e">Holl-E</pwcdataset>
    </paper>
    <paper id="3">
      <title><fixed-case>C</fixed-case>opy<fixed-case>BERT</fixed-case>: A Unified Approach to Question Generation with Self-Attention</title>
      <author><first>Stalin</first><last>Varanasi</last></author>
      <author><first>Saadullah</first><last>Amin</last></author>
      <author><first>Guenter</first><last>Neumann</last></author>
      <pages>25–31</pages>
      <abstract>Contextualized word embeddings provide better initialization for neural networks that deal with various natural language understanding (NLU) tasks including Question Answering (QA) and more recently, Question Generation(QG). Apart from providing meaningful word representations, pre-trained transformer models (Vaswani et al., 2017), such as BERT (Devlin et al., 2019) also provide self-attentions which encode syntactic information that can be probed for dependency parsing (Hewitt and Manning, 2019) and POStagging (Coenen et al., 2019). In this paper, we show that the information from selfattentions of BERT are useful for language modeling of questions conditioned on paragraph and answer phrases. To control the attention span, we use semi-diagonal mask and utilize a shared model for encoding and decoding, unlike sequence-to-sequence. We further employ copy-mechanism over self-attentions to acheive state-of-the-art results for Question Generation on SQuAD v1.1 (Rajpurkar et al., 2016).</abstract>
      <url hash="7edb9138">2020.nlp4convai-1.3</url>
      <doi>10.18653/v1/2020.nlp4convai-1.3</doi>
      <video href="http://slideslive.com/38929640"/>
      <bibkey>varanasi-etal-2020-copybert</bibkey>
    </paper>
    <paper id="4">
      <title>How to Tame Your Data: Data Augmentation for Dialog State Tracking</title>
      <author><first>Adam</first><last>Summerville</last></author>
      <author><first>Jordan</first><last>Hashemi</last></author>
      <author><first>James</first><last>Ryan</last></author>
      <author><first>William</first><last>Ferguson</last></author>
      <pages>32–37</pages>
      <abstract>Dialog State Tracking (DST) is a problem space in which the effective vocabulary is practically limitless. For example, the domain of possible movie titles or restaurant names is bound only by the limits of language. As such, DST systems often encounter out-of-vocabulary words at inference time that were never encountered during training. To combat this issue, we present a targeted data augmentation process, by which a practitioner observes the types of errors made on held-out evaluation data, and then modifies the training data with additional corpora to increase the vocabulary size at training time. Using this with a RoBERTa-based Transformer architecture, we achieve state-of-the-art results in comparison to systems that only mask trouble slots with special tokens. Additionally, we present a data-representation scheme for seamlessly retargeting DST architectures to new domains.</abstract>
      <url hash="31dafe5a">2020.nlp4convai-1.4</url>
      <doi>10.18653/v1/2020.nlp4convai-1.4</doi>
      <video href="http://slideslive.com/38929634"/>
      <bibkey>summerville-etal-2020-tame</bibkey>
    </paper>
    <paper id="5">
      <title>Efficient Intent Detection with Dual Sentence Encoders</title>
      <author><first>Iñigo</first><last>Casanueva</last></author>
      <author><first>Tadas</first><last>Temčinas</last></author>
      <author><first>Daniela</first><last>Gerz</last></author>
      <author><first>Matthew</first><last>Henderson</last></author>
      <author><first>Ivan</first><last>Vulić</last></author>
      <pages>38–45</pages>
      <abstract>Building conversational systems in new domains and with added functionality requires resource-efficient models that work under low-data regimes (i.e., in few-shot setups). Motivated by these requirements, we introduce intent detection methods backed by pretrained dual sentence encoders such as USE and ConveRT. We demonstrate the usefulness and wide applicability of the proposed intent detectors, showing that: 1) they outperform intent detectors based on fine-tuning the full BERT-Large model or using BERT as a fixed black-box encoder on three diverse intent detection data sets; 2) the gains are especially pronounced in few-shot setups (i.e., with only 10 or 30 annotated examples per intent); 3) our intent detectors can be trained in a matter of minutes on a single CPU; and 4) they are stable across different hyperparameter settings. In hope of facilitating and democratizing research focused on intention detection, we release our code, as well as a new challenging single-domain intent detection dataset comprising 13,083 annotated examples over 77 intents.</abstract>
      <url hash="c3636fef">2020.nlp4convai-1.5</url>
      <doi>10.18653/v1/2020.nlp4convai-1.5</doi>
      <attachment type="Dataset" hash="0666d8ca">2020.nlp4convai-1.5.Dataset.zip</attachment>
      <video href="http://slideslive.com/38929632"/>
      <bibkey>casanueva-etal-2020-efficient</bibkey>
      <pwccode url="" additional="true"/>
      <pwcdataset url="https://paperswithcode.com/dataset/banking77">BANKING77</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/clinc150">CLINC150</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/hwu64">HWU64</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/sgd">SGD</pwcdataset>
    </paper>
    <paper id="6">
      <title>Accelerating Natural Language Understanding in Task-Oriented Dialog</title>
      <author><first>Ojas</first><last>Ahuja</last></author>
      <author><first>Shrey</first><last>Desai</last></author>
      <pages>46–53</pages>
      <abstract>Task-oriented dialog models typically leverage complex neural architectures and large-scale, pre-trained Transformers to achieve state-of-the-art performance on popular natural language understanding benchmarks. However, these models frequently have in excess of tens of millions of parameters, making them impossible to deploy on-device where resource-efficiency is a major concern. In this work, we show that a simple convolutional model compressed with structured pruning achieves largely comparable results to BERT on ATIS and Snips, with under 100K parameters. Moreover, we perform acceleration experiments on CPUs, where we observe our multi-task model predicts intents and slots nearly 63x faster than even DistilBERT.</abstract>
      <url hash="686fcd1b">2020.nlp4convai-1.6</url>
      <doi>10.18653/v1/2020.nlp4convai-1.6</doi>
      <bibkey>ahuja-desai-2020-accelerating</bibkey>
      <pwccode url="https://github.com/oja/pruned-nlu" additional="false">oja/pruned-nlu</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/atis">ATIS</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/snips">SNIPS</pwcdataset>
    </paper>
    <paper id="7">
      <title><fixed-case>DLGN</fixed-case>et: A Transformer-based Model for Dialogue Response Generation</title>
      <author><first>Olabiyi</first><last>Oluwatobi</last></author>
      <author><first>Erik</first><last>Mueller</last></author>
      <pages>54–62</pages>
      <abstract>Neural dialogue models, despite their successes, still suffer from lack of relevance, diversity, and in many cases coherence in their generated responses. On the other hand, transformer-based models such as GPT-2 have demonstrated an excellent ability to capture long-range structures in language modeling tasks. In this paper, we present DLGNet, a transformer-based model for dialogue modeling. We specifically examine the use of DLGNet for multi-turn dialogue response generation. In our experiments, we evaluate DLGNet on the open-domain Movie Triples dataset and the closed-domain Ubuntu Dialogue dataset. DLGNet models, although trained with only the maximum likelihood objective, achieve significant improvements over state-of-the-art multi-turn dialogue models. They also produce best performance to date on the two datasets based on several metrics, including BLEU, ROUGE, and distinct n-gram. Our analysis shows that the performance improvement is mostly due to the combination of (1) the long-range transformer architecture with (2) the injection of random informative paddings. Other contributing factors include the joint modeling of dialogue context and response, and the 100% tokenization coverage from the byte pair encoding (BPE).</abstract>
      <url hash="d97b5a99">2020.nlp4convai-1.7</url>
      <doi>10.18653/v1/2020.nlp4convai-1.7</doi>
      <video href="http://slideslive.com/38929636"/>
      <bibkey>oluwatobi-mueller-2020-dlgnet</bibkey>
    </paper>
    <paper id="8">
      <title>Data Augmentation for Training Dialog Models Robust to Speech Recognition Errors</title>
      <author><first>Longshaokan</first><last>Wang</last></author>
      <author><first>Maryam</first><last>Fazel-Zarandi</last></author>
      <author><first>Aditya</first><last>Tiwari</last></author>
      <author><first>Spyros</first><last>Matsoukas</last></author>
      <author><first>Lazaros</first><last>Polymenakos</last></author>
      <pages>63–70</pages>
      <abstract>Speech-based virtual assistants, such as Amazon Alexa, Google assistant, and Apple Siri, typically convert users’ audio signals to text data through automatic speech recognition (ASR) and feed the text to downstream dialog models for natural language understanding and response generation. The ASR output is error-prone; however, the downstream dialog models are often trained on error-free text data, making them sensitive to ASR errors during inference time. To bridge the gap and make dialog models more robust to ASR errors, we leverage an ASR error simulator to inject noise into the error-free text data, and subsequently train the dialog models with the augmented data. Compared to other approaches for handling ASR errors, such as using ASR lattice or end-to-end methods, our data augmentation approach does not require any modification to the ASR or downstream dialog models; our approach also does not introduce any additional latency during inference time. We perform extensive experiments on benchmark data and show that our approach improves the performance of downstream dialog models in the presence of ASR errors, and it is particularly effective in the low-resource situations where there are constraints on model size or the training data is scarce.</abstract>
      <url hash="e4c00489">2020.nlp4convai-1.8</url>
      <doi>10.18653/v1/2020.nlp4convai-1.8</doi>
      <attachment type="Dataset" hash="aa8868d4">2020.nlp4convai-1.8.Dataset.zip</attachment>
      <video href="http://slideslive.com/38929639"/>
      <bibkey>wang-etal-2020-data</bibkey>
    </paper>
    <paper id="9">
      <title>Automating Template Creation for Ranking-Based Dialogue Models</title>
      <author><first>Jingxiang</first><last>Chen</last></author>
      <author><first>Heba</first><last>Elfardy</last></author>
      <author><first>Simi</first><last>Wang</last></author>
      <author><first>Andrea</first><last>Kahn</last></author>
      <author><first>Jared</first><last>Kramer</last></author>
      <pages>71–78</pages>
      <abstract>Dialogue response generation models that use template ranking rather than direct sequence generation allow model developers to limit generated responses to pre-approved messages. However, manually creating templates is time-consuming and requires domain expertise. To alleviate this problem, we explore automating the process of creating dialogue templates by using unsupervised methods to cluster historical utterances and selecting representative utterances from each cluster. Specifically, we propose an end-to-end model called Deep Sentence Encoder Clustering (DSEC) that uses an auto-encoder structure to jointly learn the utterance representation and construct template clusters. We compare this method to a random baseline that randomly assigns templates to clusters as well as a strong baseline that performs the sentence encoding and the utterance clustering sequentially. To evaluate the performance of the proposed method, we perform an automatic evaluation with two annotated customer service datasets to assess clustering effectiveness, and a human-in-the-loop experiment using a live customer service application to measure the acceptance rate of the generated templates. DSEC performs best in the automatic evaluation, beats both the sequential and random baselines on most metrics in the human-in-the-loop experiment, and shows promising results when compared to gold/manually created templates.</abstract>
      <url hash="e2fc267c">2020.nlp4convai-1.9</url>
      <attachment type="Software" hash="d3cfb0f6">2020.nlp4convai-1.9.Software.txt</attachment>
      <doi>10.18653/v1/2020.nlp4convai-1.9</doi>
      <attachment type="Software" hash="b5003fb1">2020.nlp4convai-1.9.Software.zip</attachment>
      <video href="http://slideslive.com/38929630"/>
      <bibkey>chen-etal-2020-automating</bibkey>
    </paper>
    <paper id="10">
      <title>From Machine Reading Comprehension to Dialogue State Tracking: Bridging the Gap</title>
      <author><first>Shuyang</first><last>Gao</last></author>
      <author><first>Sanchit</first><last>Agarwal</last></author>
      <author><first>Di</first><last>Jin</last></author>
      <author><first>Tagyoung</first><last>Chung</last></author>
      <author><first>Dilek</first><last>Hakkani-Tur</last></author>
      <pages>79–89</pages>
      <abstract>Dialogue state tracking (DST) is at the heart of task-oriented dialogue systems. However, the scarcity of labeled data is an obstacle to building accurate and robust state tracking systems that work across a variety of domains. Existing approaches generally require some dialogue data with state information and their ability to generalize to unknown domains is limited. In this paper, we propose using machine reading comprehension (RC) in state tracking from two perspectives: model architectures and datasets. We divide the slot types in dialogue state into categorical or extractive to borrow the advantages from both multiple-choice and span-based reading comprehension models. Our method achieves near the current state-of-the-art in joint goal accuracy on MultiWOZ 2.1 given full training data. More importantly, by leveraging machine reading comprehension datasets, our method outperforms the existing approaches by many a large margin in few-shot scenarios when the availability of in-domain data is limited. Lastly, even without any state tracking data, i.e., zero-shot scenario, our proposed approach achieves greater than 90% average slot accuracy in 12 out of 30 slots in MultiWOZ 2.1.</abstract>
      <url hash="624d6e71">2020.nlp4convai-1.10</url>
      <doi>10.18653/v1/2020.nlp4convai-1.10</doi>
      <video href="http://slideslive.com/38929633"/>
      <bibkey>gao-etal-2020-machine</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/dream">DREAM</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/mrqa-2019">MRQA</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/squad">SQuAD</pwcdataset>
    </paper>
    <paper id="11">
      <title>Improving Slot Filling by Utilizing Contextual Information</title>
      <author><first>Amir</first><last>Pouran Ben Veyseh</last></author>
      <author><first>Franck</first><last>Dernoncourt</last></author>
      <author><first>Thien Huu</first><last>Nguyen</last></author>
      <pages>90–95</pages>
      <abstract>Slot Filling (SF) is one of the sub-tasks of Spoken Language Understanding (SLU) which aims to extract semantic constituents from a given natural language utterance. It is formulated as a sequence labeling task. Recently, it has been shown that contextual information is vital for this task. However, existing models employ contextual information in a restricted manner, e.g., using self-attention. Such methods fail to distinguish the effects of the context on the word representation and the word label. To address this issue, in this paper, we propose a novel method to incorporate the contextual information in two different levels, i.e., representation level and task-specific (i.e., label) level. Our extensive experiments on three benchmark datasets on SF show the effectiveness of our model leading to new state-of-the-art results on all three benchmark datasets for the task of SF.</abstract>
      <url hash="d466cdb4">2020.nlp4convai-1.11</url>
      <doi>10.18653/v1/2020.nlp4convai-1.11</doi>
      <video href="http://slideslive.com/38929627"/>
      <bibkey>pouran-ben-veyseh-etal-2020-improving</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/atis">ATIS</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/snips">SNIPS</pwcdataset>
    </paper>
    <paper id="12">
      <title>Learning to Classify Intents and Slot Labels Given a Handful of Examples</title>
      <author><first>Jason</first><last>Krone</last></author>
      <author><first>Yi</first><last>Zhang</last></author>
      <author><first>Mona</first><last>Diab</last></author>
      <pages>96–108</pages>
      <abstract>Intent classification (IC) and slot filling (SF) are core components in most goal-oriented dialogue systems. Current IC/SF models perform poorly when the number of training examples per class is small. We propose a new few-shot learning task, few-shot IC/SF, to study and improve the performance of IC and SF models on classes not seen at training time in ultra low resource scenarios. We establish a few-shot IC/SF benchmark by defining few-shot splits for three public IC/SF datasets, ATIS, TOP, and Snips. We show that two popular few-shot learning algorithms, model agnostic meta learning (MAML) and prototypical networks, outperform a fine-tuning baseline on this benchmark. Prototypical networks achieves significant gains in IC performance on the ATIS and TOP datasets, while both prototypical networks and MAML outperform the baseline with respect to SF on all three datasets. In addition, we demonstrate that joint training as well as the use of pre-trained language models, ELMo and BERT in our case, are complementary to these few-shot learning methods and yield further gains.</abstract>
      <url hash="03b39705">2020.nlp4convai-1.12</url>
      <doi>10.18653/v1/2020.nlp4convai-1.12</doi>
      <video href="http://slideslive.com/38929638"/>
      <bibkey>krone-etal-2020-learning</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/atis">ATIS</pwcdataset>
    </paper>
    <paper id="13">
      <title><fixed-case>M</fixed-case>ulti<fixed-case>WOZ</fixed-case> 2.2 : A Dialogue Dataset with Additional Annotation Corrections and State Tracking Baselines</title>
      <author><first>Xiaoxue</first><last>Zang</last></author>
      <author><first>Abhinav</first><last>Rastogi</last></author>
      <author><first>Srinivas</first><last>Sunkara</last></author>
      <author><first>Raghav</first><last>Gupta</last></author>
      <author><first>Jianguo</first><last>Zhang</last></author>
      <author><first>Jindong</first><last>Chen</last></author>
      <pages>109–117</pages>
      <abstract>MultiWOZ is a well-known task-oriented dialogue dataset containing over 10,000 annotated dialogues spanning 8 domains. It is extensively used as a benchmark for dialogue state tracking. However, recent works have reported presence of substantial noise in the dialogue state annotations. MultiWOZ 2.1 identified and fixed many of these erroneous annotations and user utterances, resulting in an improved version of this dataset. This work introduces MultiWOZ 2.2, which is a yet another improved version of this dataset. Firstly, we identify and fix dialogue state annotation errors across 17.3% of the utterances on top of MultiWOZ 2.1. Secondly, we redefine the ontology by disallowing vocabularies of slots with a large number of possible values (e.g., restaurant name, time of booking). In addition, we introduce slot span annotations for these slots to standardize them across recent models, which previously used custom string matching heuristics to generate them. We also benchmark a few state of the art dialogue state tracking models on the corrected dataset to facilitate comparison for future work. In the end, we discuss best practices for dialogue data collection that can help avoid annotation errors.</abstract>
      <url hash="5dc5d275">2020.nlp4convai-1.13</url>
      <doi>10.18653/v1/2020.nlp4convai-1.13</doi>
      <video href="http://slideslive.com/38929641"/>
      <bibkey>zang-etal-2020-multiwoz</bibkey>
      <pwccode url="https://github.com/budzianowski/multiwoz" additional="false">budzianowski/multiwoz</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/100doh">100DOH</pwcdataset>
    </paper>
    <paper id="14">
      <title>Sketch-Fill-A-<fixed-case>R</fixed-case>: A Persona-Grounded Chit-Chat Generation Framework</title>
      <author><first>Michael</first><last>Shum</last></author>
      <author><first>Stephan</first><last>Zheng</last></author>
      <author><first>Wojciech</first><last>Kryscinski</last></author>
      <author><first>Caiming</first><last>Xiong</last></author>
      <author><first>Richard</first><last>Socher</last></author>
      <pages>118–131</pages>
      <abstract>Human-like chit-chat conversation requires agents to generate responses that are fluent, engaging and consistent. We propose Sketch- Fill-A-R, a framework that uses a persona-memory to generate chit-chat responses in three phases. First, it generates dynamic sketch responses with open slots. Second, it generates candidate responses by filling slots with parts of its stored persona traits. Lastly, it ranks and selects the final response via a language model score. Sketch-Fill-A-R outperforms a state-of-the-art baseline both quantitatively (10-point lower perplexity) and qualitatively (preferred by 55% in head-to-head single-turn studies and 20% higher in consistency in multi-turn user studies) on the Persona-Chat dataset. Finally, we extensively analyze Sketch-Fill-A-R’s responses and human feedback, and show it is more consistent and engaging by using more relevant responses and questions.</abstract>
      <url hash="f8c437b4">2020.nlp4convai-1.14</url>
      <doi>10.18653/v1/2020.nlp4convai-1.14</doi>
      <video href="http://slideslive.com/38929629"/>
      <bibkey>shum-etal-2020-sketch</bibkey>
    </paper>
    <paper id="15">
      <title>Probing Neural Dialog Models for Conversational Understanding</title>
      <author><first>Abdelrhman</first><last>Saleh</last></author>
      <author><first>Tovly</first><last>Deutsch</last></author>
      <author><first>Stephen</first><last>Casper</last></author>
      <author><first>Yonatan</first><last>Belinkov</last></author>
      <author><first>Stuart</first><last>Shieber</last></author>
      <pages>132–143</pages>
      <abstract>The predominant approach to open-domain dialog generation relies on end-to-end training of neural models on chat datasets. However, this approach provides little insight as to what these models learn (or do not learn) about engaging in dialog. In this study, we analyze the internal representations learned by neural open-domain dialog systems and evaluate the quality of these representations for learning basic conversational skills. Our results suggest that standard open-domain dialog systems struggle with answering questions, inferring contradiction, and determining the topic of conversation, among other tasks. We also find that the dyadic, turn-taking nature of dialog is not fully leveraged by these models. By exploring these limitations, we highlight the need for additional research into architectures and training methods that can better capture high-level information about dialog.</abstract>
      <url hash="9360d36d">2020.nlp4convai-1.15</url>
      <doi>10.18653/v1/2020.nlp4convai-1.15</doi>
      <video href="http://slideslive.com/38929635"/>
      <bibkey>saleh-etal-2020-probing</bibkey>
      <pwccode url="https://github.com/AbdulSaleh/dialog-probing" additional="false">AbdulSaleh/dialog-probing</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/dailydialog">DailyDialog</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/glue">GLUE</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/sgd">SGD</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/snips">SNIPS</pwcdataset>
    </paper>
  </volume>
</collection>
