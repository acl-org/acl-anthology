<?xml version='1.0' encoding='UTF-8'?>
<collection id="2020.iwpt">
  <volume id="1" ingest-date="2020-06-21">
    <meta>
      <booktitle>Proceedings of the 16th International Conference on Parsing Technologies and the IWPT 2020 Shared Task on Parsing into Enhanced Universal Dependencies</booktitle>
      <editor><first>Gosse</first><last>Bouma</last></editor>
      <editor><first>Yuji</first><last>Matsumoto</last></editor>
      <editor><first>Stephan</first><last>Oepen</last></editor>
      <editor><first>Kenji</first><last>Sagae</last></editor>
      <editor><first>Djamé</first><last>Seddah</last></editor>
      <editor><first>Weiwei</first><last>Sun</last></editor>
      <editor><first>Anders</first><last>Søgaard</last></editor>
      <editor><first>Reut</first><last>Tsarfaty</last></editor>
      <editor><first>Dan</first><last>Zeman</last></editor>
      <publisher>Association for Computational Linguistics</publisher>
      <address>Online</address>
      <month>July</month>
      <year>2020</year>
      <url hash="fe3f84b1">2020.iwpt-1</url>
      <venue>iwpt</venue>
    </meta>
    <frontmatter>
      <url hash="93260931">2020.iwpt-1.0</url>
      <bibkey>iwpt-2020-international</bibkey>
    </frontmatter>
    <paper id="1">
      <title>Syntactic Parsing in Humans and Machines</title>
      <author><first>Paola</first><last>Merlo</last></author>
      <pages>1</pages>
      <abstract>To process the syntactic structures of a language in ways that are compatible with human expectations, we need computational representations of lexical and syntactic properties that form the basis of human knowledge of words and sentences. Recent neural-network-based and distributed semantics techniques have developed systems of considerable practical success and impressive performance. As has been advocated by many, however, such systems still lack human-like properties. In particular, linguistic, psycholinguistic and neuroscientific investigations have shown that human processing of sentences is sensitive to structure and unbounded relations. In the spirit of better understanding the structure building and long-distance properties of neural networks, I will present an overview of recent results on agreement and island effects in syntax in several languages. While certain sets of results in the literature indicate that neural language models exhibit long-distance agreement abilities, other finer-grained investigation of how these effects are calculated indicates that that the similarity spaces they define do not correlate with human experimental results on intervention similarity in long-distance dependencies. This opens the way to reflections on how to better match the syntactic properties of natural languages in the representations of neural models.</abstract>
      <url hash="c81e0f9b">2020.iwpt-1.1</url>
      <doi>10.18653/v1/2020.iwpt-1.1</doi>
      <video href="http://slideslive.com/38929668"/>
      <bibkey>merlo-2020-syntactic</bibkey>
    </paper>
    <paper id="2">
      <title>Distilling Neural Networks for Greener and Faster Dependency Parsing</title>
      <author><first>Mark</first><last>Anderson</last></author>
      <author><first>Carlos</first><last>Gómez-Rodríguez</last></author>
      <pages>2–13</pages>
      <abstract>The carbon footprint of natural language processing research has been increasing in recent years due to its reliance on large and inefficient neural network implementations. Distillation is a network compression technique which attempts to impart knowledge from a large model to a smaller one. We use teacher-student distillation to improve the efficiency of the Biaffine dependency parser which obtains state-of-the-art performance with respect to accuracy and parsing speed (Dozat and Manning, 2017). When distilling to 20% of the original model’s trainable parameters, we only observe an average decrease of ∼1 point for both UAS and LAS across a number of diverse Universal Dependency treebanks while being 2.30x (1.19x) faster than the baseline model on CPU (GPU) at inference time. We also observe a small increase in performance when compressing to 80% for some treebanks. Finally, through distillation we attain a parser which is not only faster but also more accurate than the fastest modern parser on the Penn Treebank.</abstract>
      <url hash="bfc33d7b">2020.iwpt-1.2</url>
      <doi>10.18653/v1/2020.iwpt-1.2</doi>
      <video href="http://slideslive.com/38929669"/>
      <bibkey>anderson-gomez-rodriguez-2020-distilling</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/penn-treebank">Penn Treebank</pwcdataset>
    </paper>
    <paper id="3">
      <title>End-to-End Negation Resolution as Graph Parsing</title>
      <author><first>Robin</first><last>Kurtz</last></author>
      <author><first>Stephan</first><last>Oepen</last></author>
      <author><first>Marco</first><last>Kuhlmann</last></author>
      <pages>14–24</pages>
      <abstract>We present a neural end-to-end architecture for negation resolution based on a formulation of the task as a graph parsing problem. Our approach allows for the straightforward inclusion of many types of graph-structured features without the need for representation-specific heuristics. In our experiments, we specifically gauge the usefulness of syntactic information for negation resolution. Despite the conceptual simplicity of our architecture, we achieve state-of-the-art results on the Conan Doyle benchmark dataset, including a new top result for our best model.</abstract>
      <url hash="fa457fff">2020.iwpt-1.3</url>
      <doi>10.18653/v1/2020.iwpt-1.3</doi>
      <video href="http://slideslive.com/38929670"/>
      <bibkey>kurtz-etal-2020-end</bibkey>
    </paper>
    <paper id="4">
      <title>Integrating Graph-Based and Transition-Based Dependency Parsers in the Deep Contextualized Era</title>
      <author><first>Agnieszka</first><last>Falenska</last></author>
      <author><first>Anders</first><last>Björkelund</last></author>
      <author><first>Jonas</first><last>Kuhn</last></author>
      <pages>25–39</pages>
      <abstract>Graph-based and transition-based dependency parsers used to have different strengths and weaknesses. Therefore, combining the outputs of parsers from both paradigms used to be the standard approach to improve or analyze their performance. However, with the recent adoption of deep contextualized word representations, the chief weakness of graph-based models, i.e., their limited scope of features, has been mitigated. Through two popular combination techniques – blending and stacking – we demonstrate that the remaining diversity in the parsing models is reduced below the level of models trained with different random seeds. Thus, an integration no longer leads to increased accuracy. When both parsers depend on BiLSTMs, the graph-based architecture has a consistent advantage. This advantage stems from globally-trained BiLSTM representations, which capture more distant look-ahead syntactic relations. Such representations can be exploited through multi-task learning, which improves the transition-based parser, especially on treebanks with a high ratio of right-headed dependencies.</abstract>
      <url hash="aa774c67">2020.iwpt-1.4</url>
      <doi>10.18653/v1/2020.iwpt-1.4</doi>
      <video href="http://slideslive.com/38929671"/>
      <bibkey>falenska-etal-2020-integrating</bibkey>
    </paper>
    <paper id="5">
      <title>Semi-supervised Parsing with a Variational Autoencoding Parser</title>
      <author><first>Xiao</first><last>Zhang</last></author>
      <author><first>Dan</first><last>Goldwasser</last></author>
      <pages>40–47</pages>
      <abstract>We propose an end-to-end variational autoencoding parsing (VAP) model for semi-supervised graph-based projective dependency parsing. It encodes the input using continuous latent variables in a sequential manner by deep neural networks (DNN) that can utilize the contextual information, and reconstruct the input using a generative model. The VAP model admits a unified structure with different loss functions for labeled and unlabeled data with shared parameters. We conducted experiments on the WSJ data sets, showing the proposed model can use the unlabeled data to increase the performance on a limited amount of labeled data, on a par with a recently proposed semi-supervised parser with faster inference.</abstract>
      <url hash="e7d65401">2020.iwpt-1.5</url>
      <doi>10.18653/v1/2020.iwpt-1.5</doi>
      <video href="http://slideslive.com/38929672"/>
      <bibkey>zhang-goldwasser-2020-semi</bibkey>
    </paper>
    <paper id="6">
      <title>Memory-bounded Neural Incremental Parsing for Psycholinguistic Prediction</title>
      <author><first>Lifeng</first><last>Jin</last></author>
      <author><first>William</first><last>Schuler</last></author>
      <pages>48–61</pages>
      <abstract>Syntactic surprisal has been shown to have an effect on human sentence processing, and can be predicted from prefix probabilities of generative incremental parsers. Recent state-of-the-art incremental generative neural parsers are able to produce accurate parses and surprisal values but have unbounded stack memory, which may be used by the neural parser to maintain explicit in-order representations of all previously parsed words, inconsistent with results of human memory experiments. In contrast, humans seem to have a bounded working memory, demonstrated by inhibited performance on word recall in multi-clause sentences (Bransford and Franks, 1971), and on center-embedded sentences (Miller and Isard,1964). Bounded statistical parsers exist, but are less accurate than neural parsers in predict-ing reading times. This paper describes a neural incremental generative parser that is able to provide accurate surprisal estimates and can be constrained to use a bounded stack. Results show that the accuracy gains of neural parsers can be reliably extended to psycholinguistic modeling without risk of distortion due to un-bounded working memory.</abstract>
      <url hash="039410fa">2020.iwpt-1.6</url>
      <doi>10.18653/v1/2020.iwpt-1.6</doi>
      <video href="http://slideslive.com/38929673"/>
      <bibkey>jin-schuler-2020-memory</bibkey>
    </paper>
    <paper id="7">
      <title>Obfuscation for Privacy-preserving Syntactic Parsing</title>
      <author><first>Zhifeng</first><last>Hu</last></author>
      <author><first>Serhii</first><last>Havrylov</last></author>
      <author><first>Ivan</first><last>Titov</last></author>
      <author><first>Shay B.</first><last>Cohen</last></author>
      <pages>62–72</pages>
      <abstract>The goal of homomorphic encryption is to encrypt data such that another party can operate on it without being explicitly exposed to the content of the original data. We introduce an idea for a privacy-preserving transformation on natural language data, inspired by homomorphic encryption. Our primary tool is <i>obfuscation</i>, relying on the properties of natural language. Specifically, a given English text is obfuscated using a neural model that aims to preserve the syntactic relationships of the original sentence so that the obfuscated sentence can be parsed instead of the original one. The model works at the word level, and learns to obfuscate each word separately by changing it into a new word that has a similar syntactic role. The text obfuscated by our model leads to better performance on three syntactic parsers (two dependency and one constituency parsers) in comparison to an upper-bound random substitution baseline. More specifically, the results demonstrate that as more terms are obfuscated (by their part of speech), the substitution upper bound significantly degrades, while the neural model maintains a relatively high performing parser. All of this is done without much sacrifice of privacy compared to the random substitution upper bound. We also further analyze the results, and discover that the substituted words have similar syntactic properties, but different semantic content, compared to the original words.</abstract>
      <url hash="3d25adb8">2020.iwpt-1.7</url>
      <doi>10.18653/v1/2020.iwpt-1.7</doi>
      <video href="http://slideslive.com/38929674"/>
      <bibkey>hu-etal-2020-obfuscation</bibkey>
      <pwccode url="https://github.com/ichn-hu/Parsing-Obfuscation" additional="false">ichn-hu/Parsing-Obfuscation</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/penn-treebank">Penn Treebank</pwcdataset>
    </paper>
    <paper id="8">
      <title>Tensors over Semirings for Latent-Variable Weighted Logic Programs</title>
      <author><first>Esma</first><last>Balkir</last></author>
      <author><first>Daniel</first><last>Gildea</last></author>
      <author><first>Shay B.</first><last>Cohen</last></author>
      <pages>73–90</pages>
      <abstract>Semiring parsing is an elegant framework for describing parsers by using semiring weighted logic programs. In this paper we present a generalization of this concept: latent-variable semiring parsing. With our framework, any semiring weighted logic program can be latentified by transforming weights from scalar values of a semiring to rank-n arrays, or tensors, of semiring values, allowing the modelling of latent-variable models within the semiring parsing framework. Semiring is too strong a notion when dealing with tensors, and we have to resort to a weaker structure: a partial semiring. We prove that this generalization preserves all the desired properties of the original semiring framework while strictly increasing its expressiveness.</abstract>
      <url hash="36981a2b">2020.iwpt-1.8</url>
      <doi>10.18653/v1/2020.iwpt-1.8</doi>
      <attachment type="Dataset" hash="322b1060">2020.iwpt-1.8.Dataset.pdf</attachment>
      <video href="http://slideslive.com/38929675"/>
      <bibkey>balkir-etal-2020-tensors</bibkey>
    </paper>
    <paper id="9">
      <title>Advances in Using Grammars with Latent Annotations for Discontinuous Parsing</title>
      <author><first>Kilian</first><last>Gebhardt</last></author>
      <pages>91–97</pages>
      <abstract>We present new experiments that transfer techniques from Probabilistic Context-free Grammars with Latent Annotations (PCFG-LA) to two grammar formalisms for discontinuous parsing: linear context-free rewriting systems and hybrid grammars. In particular, Dirichlet priors during EM training, ensemble models, and a new nonterminal scheme for hybrid grammars are evaluated. We find that our grammars are more accurate than previous approaches based on discontinuous grammar formalisms and early instances of the discriminative models but inferior to recent discriminative parsers.</abstract>
      <url hash="c8021491">2020.iwpt-1.9</url>
      <doi>10.18653/v1/2020.iwpt-1.9</doi>
      <video href="http://slideslive.com/38929676"/>
      <bibkey>gebhardt-2020-advances</bibkey>
    </paper>
    <paper id="10">
      <title>Lexicalization of Probabilistic Linear Context-free Rewriting Systems</title>
      <author><first>Richard</first><last>Mörbitz</last></author>
      <author><first>Thomas</first><last>Ruprecht</last></author>
      <pages>98–104</pages>
      <abstract>In the field of constituent parsing, probabilistic grammar formalisms have been studied to model the syntactic structure of natural language. More recently, approaches utilizing neural models gained lots of traction in this field, as they achieved accurate results at high speed. We aim for a symbiosis between probabilistic linear context-free rewriting systems (PLCFRS) as a probabilistic grammar formalism and neural models to get the best of both worlds: the interpretability of grammars, and the speed and accuracy of neural models. To combine these two, we consider the approach of supertagging that requires lexicalized grammar formalisms. Here, we present a procedure which turns any PLCFRS G into an equivalent lexicalized PLCFRS G’. The derivation trees in G’ are then mapped to equivalent derivations in G. Our construction for G’ preserves the probability assignment and does not increase parsing complexity compared to G.</abstract>
      <url hash="2fbe79e3">2020.iwpt-1.10</url>
      <doi>10.18653/v1/2020.iwpt-1.10</doi>
      <video href="http://slideslive.com/38929677"/>
      <bibkey>morbitz-ruprecht-2020-lexicalization</bibkey>
    </paper>
    <paper id="11">
      <title>Self-Training for Unsupervised Parsing with <fixed-case>PRPN</fixed-case></title>
      <author><first>Anhad</first><last>Mohananey</last></author>
      <author><first>Katharina</first><last>Kann</last></author>
      <author><first>Samuel R.</first><last>Bowman</last></author>
      <pages>105–110</pages>
      <abstract>Neural unsupervised parsing (UP) models learn to parse without access to syntactic annotations, while being optimized for another task like language modeling. In this work, we propose self-training for neural UP models: we leverage aggregated annotations predicted by copies of our model as supervision for future copies. To be able to use our model’s predictions during training, we extend a recent neural UP architecture, the PRPN (Shen et al., 2018a), such that it can be trained in a semi-supervised fashion. We then add examples with parses predicted by our model to our unlabeled UP training data. Our self-trained model outperforms the PRPN by 8.1% F1 and the previous state of the art by 1.6% F1. In addition, we show that our architecture can also be helpful for semi-supervised parsing in ultra-low-resource settings.</abstract>
      <url hash="e557f12f">2020.iwpt-1.11</url>
      <doi>10.18653/v1/2020.iwpt-1.11</doi>
      <video href="http://slideslive.com/38929678"/>
      <bibkey>mohananey-etal-2020-self</bibkey>
    </paper>
    <paper id="12">
      <title>Span-Based <fixed-case>LCFRS</fixed-case>-2 Parsing</title>
      <author><first>Miloš</first><last>Stanojević</last></author>
      <author><first>Mark</first><last>Steedman</last></author>
      <pages>111–121</pages>
      <abstract>The earliest models for discontinuous constituency parsers used mildly context-sensitive grammars, but the fashion has changed in recent years to grammar-less transition-based parsers that use strong neural probabilistic models to greedily predict transitions. We argue that grammar-based approaches still have something to contribute on top of what is offered by transition-based parsers. Concretely, by using a grammar formalism to restrict the space of possible trees we can use dynamic programming parsing algorithms for exact search for the most probable tree. Previous chart-based parsers for discontinuous formalisms used probabilistically weak generative models. We instead use a span-based discriminative neural model that preserves the dynamic programming properties of the chart parsers. Our parser does not use an explicit grammar, but it does use explicit grammar formalism constraints: we generate only trees that are within the LCFRS-2 formalism. These properties allow us to construct a new parsing algorithm that runs in lower worst-case time complexity of O(l nˆ4 +nˆ6), where <tex-math>n</tex-math> is the sentence length and <tex-math>l</tex-math> is the number of unique non-terminal labels. This parser is efficient in practice, provides best results among chart-based parsers, and is competitive with the best transition based parsers. We also show that the main bottleneck for further improvement in performance is in the restriction of fan-out to degree 2. We show that well-nestedness is helpful in speeding up parsing, but lowers accuracy.</abstract>
      <url hash="5e18690b">2020.iwpt-1.12</url>
      <doi>10.18653/v1/2020.iwpt-1.12</doi>
      <video href="http://slideslive.com/38929679"/>
      <bibkey>stanojevic-steedman-2020-span</bibkey>
    </paper>
    <paper id="13">
      <title>Analysis of the <fixed-case>P</fixed-case>enn <fixed-case>K</fixed-case>orean <fixed-case>U</fixed-case>niversal <fixed-case>D</fixed-case>ependency Treebank (<fixed-case>PKT</fixed-case>-<fixed-case>UD</fixed-case>): Manual Revision to Build Robust Parsing Model in <fixed-case>K</fixed-case>orean</title>
      <author><first>Tae Hwan</first><last>Oh</last></author>
      <author><first>Ji Yoon</first><last>Han</last></author>
      <author><first>Hyonsu</first><last>Choe</last></author>
      <author><first>Seokwon</first><last>Park</last></author>
      <author><first>Han</first><last>He</last></author>
      <author><first>Jinho D.</first><last>Choi</last></author>
      <author><first>Na-Rae</first><last>Han</last></author>
      <author><first>Jena D.</first><last>Hwang</last></author>
      <author><first>Hansaem</first><last>Kim</last></author>
      <pages>122–131</pages>
      <abstract>In this paper, we first open on important issues regarding the Penn Korean Universal Treebank (PKT-UD) and address these issues by revising the entire corpus manually with the aim of producing cleaner UD annotations that are more faithful to Korean grammar. For compatibility to the rest of UD corpora, we follow the UDv2 guidelines, and extensively revise the part-of-speech tags and the dependency relations to reflect morphological features and flexible word- order aspects in Korean. The original and the revised versions of PKT-UD are experimented with transformer-based parsing models using biaffine attention. The parsing model trained on the revised corpus shows a significant improvement of 3.0% in labeled attachment score over the model trained on the previous corpus. Our error analysis demonstrates that this revision allows the parsing model to learn relations more robustly, reducing several critical errors that used to be made by the previous model.</abstract>
      <url hash="7cfa71b1">2020.iwpt-1.13</url>
      <doi>10.18653/v1/2020.iwpt-1.13</doi>
      <video href="http://slideslive.com/38929680"/>
      <bibkey>oh-etal-2020-analysis</bibkey>
    </paper>
    <paper id="14">
      <title>Statistical Deep Parsing for <fixed-case>S</fixed-case>panish Using Neural Networks</title>
      <author><first>Luis</first><last>Chiruzzo</last></author>
      <author><first>Dina</first><last>Wonsever</last></author>
      <pages>132–144</pages>
      <abstract>This paper presents the development of a deep parser for Spanish that uses a HPSG grammar and returns trees that contain both syntactic and semantic information. The parsing process uses a top-down approach implemented using LSTM neural networks, and achieves good performance results in terms of syntactic constituency and dependency metrics, and also SRL. We describe the grammar, corpus and implementation of the parser. Our process outperforms a CKY baseline and other Spanish parsers in terms of global metrics and also for some specific Spanish phenomena, such as clitics reduplication and relative referents.</abstract>
      <url hash="c98d9a23">2020.iwpt-1.14</url>
      <doi>10.18653/v1/2020.iwpt-1.14</doi>
      <video href="http://slideslive.com/38929681"/>
      <bibkey>chiruzzo-wonsever-2020-statistical</bibkey>
    </paper>
    <paper id="15">
      <title>The Importance of Category Labels in Grammar Induction with Child-directed Utterances</title>
      <author><first>Lifeng</first><last>Jin</last></author>
      <author><first>William</first><last>Schuler</last></author>
      <pages>145–150</pages>
      <abstract>Recent progress in grammar induction has shown that grammar induction is possible without explicit assumptions of language specific knowledge. However, evaluation of induced grammars usually has ignored phrasal labels, an essential part of a grammar. Experiments in this work using a labeled evaluation metric, RH, show that linguistically motivated predictions about grammar sparsity and use of categories can only be revealed through labeled evaluation. Furthermore, depth-bounding as an implementation of human memory constraints in grammar inducers is still effective with labeled evaluation on multilingual transcribed child-directed utterances.</abstract>
      <url hash="be26af14">2020.iwpt-1.15</url>
      <doi>10.18653/v1/2020.iwpt-1.15</doi>
      <video href="http://slideslive.com/38929682"/>
      <bibkey>jin-schuler-2020-importance</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/penn-treebank">Penn Treebank</pwcdataset>
    </paper>
    <paper id="16">
      <title>Overview of the <fixed-case>IWPT</fixed-case> 2020 Shared Task on Parsing into Enhanced <fixed-case>U</fixed-case>niversal <fixed-case>D</fixed-case>ependencies</title>
      <author><first>Gosse</first><last>Bouma</last></author>
      <author><first>Djamé</first><last>Seddah</last></author>
      <author><first>Daniel</first><last>Zeman</last></author>
      <pages>151–161</pages>
      <abstract>This overview introduces the task of parsing into enhanced universal dependencies, describes the datasets used for training and evaluation, and evaluation metrics. We outline various approaches and discuss the results of the shared task.</abstract>
      <url hash="50d0fde5">2020.iwpt-1.16</url>
      <doi>10.18653/v1/2020.iwpt-1.16</doi>
      <video href="http://slideslive.com/38929683"/>
      <bibkey>bouma-etal-2020-overview</bibkey>
    </paper>
    <paper id="17">
      <title><fixed-case>T</fixed-case>urku Enhanced Parser Pipeline: From Raw Text to Enhanced Graphs in the <fixed-case>IWPT</fixed-case> 2020 Shared Task</title>
      <author><first>Jenna</first><last>Kanerva</last></author>
      <author><first>Filip</first><last>Ginter</last></author>
      <author><first>Sampo</first><last>Pyysalo</last></author>
      <pages>162–173</pages>
      <abstract>We present the approach of the TurkuNLP group to the IWPT 2020 shared task on Multilingual Parsing into Enhanced Universal Dependencies. The task involves 28 treebanks in 17 different languages and requires parsers to generate graph structures extending on the basic dependency trees. Our approach combines language-specific BERT models, the UDify parser, neural sequence-to-sequence lemmatization and a graph transformation approach encoding the enhanced structure into a dependency tree. Our submission averaged 84.5% ELAS, ranking first in the shared task. We make all methods and resources developed for this study freely available under open licenses from https://turkunlp.org.</abstract>
      <url hash="39b78e8e">2020.iwpt-1.17</url>
      <doi>10.18653/v1/2020.iwpt-1.17</doi>
      <video href="http://slideslive.com/38929684"/>
      <bibkey>kanerva-etal-2020-turku</bibkey>
    </paper>
    <paper id="18">
      <title>Hybrid Enhanced <fixed-case>U</fixed-case>niversal <fixed-case>D</fixed-case>ependencies Parsing</title>
      <author><first>Johannes</first><last>Heinecke</last></author>
      <pages>174–180</pages>
      <abstract>This paper describes our system to predict enhanced dependencies for Universal Dependencies (UD) treebanks, which ranked 2nd in the Shared Task on Enhanced Dependency Parsing with an average ELAS of 82.60%. Our system uses a hybrid two-step approach. First, we use a graph-based parser to extract a basic syntactic dependency tree. Then, we use a set of linguistic rules which generate the enhanced dependencies for the syntactic tree. The application of these rules is optimized using a classifier which predicts their suitability in the given context. A key advantage of this approach is its language independence, as rules rely solely on dependency trees and UPOS tags which are shared across all languages.</abstract>
      <url hash="c3f4a24e">2020.iwpt-1.18</url>
      <doi>10.18653/v1/2020.iwpt-1.18</doi>
      <video href="http://slideslive.com/38929685"/>
      <bibkey>heinecke-2020-hybrid</bibkey>
    </paper>
    <paper id="19">
      <title>Adaptation of Multilingual Transformer Encoder for Robust Enhanced <fixed-case>U</fixed-case>niversal <fixed-case>D</fixed-case>ependency Parsing</title>
      <author><first>Han</first><last>He</last></author>
      <author><first>Jinho D.</first><last>Choi</last></author>
      <pages>181–191</pages>
      <abstract>This paper presents our enhanced dependency parsing approach using transformer encoders, coupled with a simple yet powerful ensemble algorithm that takes advantage of both tree and graph dependency parsing. Two types of transformer encoders are compared, a multilingual encoder and language-specific encoders. Our dependency tree parsing (DTP) approach generates only primary dependencies to form trees whereas our dependency graph parsing (DGP) approach handles both primary and secondary dependencies to form graphs. Since DGP does not guarantee the generated graphs are acyclic, the ensemble algorithm is designed to add secondary arcs predicted by DGP to primary arcs predicted by DTP. Our results show that models using the multilingual encoder outperform ones using the language specific encoders for most languages. The ensemble models generally show higher labeled attachment score on enhanced dependencies (ELAS) than the DTP and DGP models. As the result, our best models rank the third place on the macro-average ELAS over 17 languages.</abstract>
      <url hash="4beeb14f">2020.iwpt-1.19</url>
      <doi>10.18653/v1/2020.iwpt-1.19</doi>
      <video href="http://slideslive.com/38929686"/>
      <bibkey>he-choi-2020-adaptation</bibkey>
    </paper>
    <paper id="20">
      <title>Efficient <fixed-case>EUD</fixed-case> Parsing</title>
      <author><first>Mathieu</first><last>Dehouck</last></author>
      <author><first>Mark</first><last>Anderson</last></author>
      <author><first>Carlos</first><last>Gómez-Rodríguez</last></author>
      <pages>192–205</pages>
      <abstract>We present the system submission from the FASTPARSE team for the EUD Shared Task at IWPT 2020. We engaged with the task by focusing on efficiency. For this we considered training costs and inference efficiency. Our models are a combination of distilled neural dependency parsers and a rule-based system that projects UD trees into EUD graphs. We obtained an average ELAS of 74.04 for our official submission, ranking 4th overall.</abstract>
      <url hash="b70301a6">2020.iwpt-1.20</url>
      <doi>10.18653/v1/2020.iwpt-1.20</doi>
      <video href="http://slideslive.com/38929687"/>
      <bibkey>dehouck-etal-2020-efficient</bibkey>
    </paper>
    <paper id="21">
      <title>Linear Neural Parsing and Hybrid Enhancement for Enhanced <fixed-case>U</fixed-case>niversal <fixed-case>D</fixed-case>ependencies</title>
      <author><first>Giuseppe</first><last>Attardi</last></author>
      <author><first>Daniele</first><last>Sartiano</last></author>
      <author><first>Maria</first><last>Simi</last></author>
      <pages>206–214</pages>
      <abstract>To accomplish the shared task on dependency parsing we explore the use of a linear transition-based neural dependency parser as well as a combination of three of them by means of a linear tree combination algorithm. We train separate models for each language on the shared task data. We compare our base parser with two biaffine parsers and also present an ensemble combination of all five parsers, which achieves an average UAS 1.88 point lower than the top official submission. For producing the enhanced dependencies, we exploit a hybrid approach, coupling an algorithmic graph transformation of the dependency tree with predictions made by a multitask machine learning model.</abstract>
      <url hash="cab821b1">2020.iwpt-1.21</url>
      <doi>10.18653/v1/2020.iwpt-1.21</doi>
      <video href="http://slideslive.com/38929688"/>
      <bibkey>attardi-etal-2020-linear</bibkey>
    </paper>
    <paper id="22">
      <title>Enhanced <fixed-case>U</fixed-case>niversal <fixed-case>D</fixed-case>ependency Parsing with Second-Order Inference and Mixture of Training Data</title>
      <author><first>Xinyu</first><last>Wang</last></author>
      <author><first>Yong</first><last>Jiang</last></author>
      <author><first>Kewei</first><last>Tu</last></author>
      <pages>215–220</pages>
      <abstract>This paper presents the system used in our submission to the <i>IWPT 2020 Shared Task</i>. Our system is a graph-based parser with second-order inference. For the low-resource Tamil corpora, we specially mixed the training data of Tamil with other languages and significantly improved the performance of Tamil. Due to our misunderstanding of the submission requirements, we submitted graphs that are not connected, which makes our system only rank <b>6th</b> over 10 teams. However, after we fixed this problem, our system is 0.6 ELAS higher than the team that ranked <b>1st</b> in the official results.</abstract>
      <url hash="f86777c9">2020.iwpt-1.22</url>
      <doi>10.18653/v1/2020.iwpt-1.22</doi>
      <video href="http://slideslive.com/38929689"/>
      <bibkey>wang-etal-2020-enhanced</bibkey>
      <pwccode url="https://github.com/Alibaba-NLP/MultilangStructureKD" additional="false">Alibaba-NLP/MultilangStructureKD</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/universal-dependencies">Universal Dependencies</pwcdataset>
    </paper>
    <paper id="23">
      <title>How Much of Enhanced <fixed-case>UD</fixed-case> Is Contained in <fixed-case>UD</fixed-case>?</title>
      <author><first>Adam</first><last>Ek</last></author>
      <author><first>Jean-Philippe</first><last>Bernardy</last></author>
      <pages>221–226</pages>
      <abstract>In this paper, we present the submission of team CLASP to the IWPT 2020 Shared Task on parsing enhanced universal dependencies. We develop a tree-to-graph transformation algorithm based on dependency patterns. This algorithm can transform gold UD trees to EUD graphs with an ELAS score of 81.55 and a EULAS score of 96.70. These results show that much of the information needed to construct EUD graphs from UD trees are present in the UD trees. Coupled with a standard UD parser, the method applies to the official test data and yields and ELAS score of 67.85 and a EULAS score is 80.18.</abstract>
      <url hash="f2527a0f">2020.iwpt-1.23</url>
      <doi>10.18653/v1/2020.iwpt-1.23</doi>
      <video href="http://slideslive.com/38929690"/>
      <bibkey>ek-bernardy-2020-much</bibkey>
    </paper>
    <paper id="24">
      <title>The <fixed-case>ADAPT</fixed-case> Enhanced Dependency Parser at the <fixed-case>IWPT</fixed-case> 2020 Shared Task</title>
      <author><first>James</first><last>Barry</last></author>
      <author><first>Joachim</first><last>Wagner</last></author>
      <author><first>Jennifer</first><last>Foster</last></author>
      <pages>227–235</pages>
      <abstract>We describe the ADAPT system for the 2020 IWPT Shared Task on parsing enhanced Universal Dependencies in 17 languages. We implement a pipeline approach using UDPipe and UDPipe-future to provide initial levels of annotation. The enhanced dependency graph is either produced by a graph-based semantic dependency parser or is built from the basic tree using a small set of heuristics. Our results show that, for the majority of languages, a semantic dependency parser can be successfully applied to the task of parsing enhanced dependencies. Unfortunately, we did not ensure a connected graph as part of our pipeline approach and our competition submission relied on a last-minute fix to pass the validation script which harmed our official evaluation scores significantly. Our submission ranked eighth in the official evaluation with a macro-averaged coarse ELAS F1 of 67.23 and a treebank average of 67.49. We later implemented our own graph-connecting fix which resulted in a score of 79.53 (language average) or 79.76 (treebank average), which would have placed fourth in the competition evaluation.</abstract>
      <url hash="6ac08351">2020.iwpt-1.24</url>
      <doi>10.18653/v1/2020.iwpt-1.24</doi>
      <video href="http://slideslive.com/38929691"/>
      <bibkey>barry-etal-2020-adapt</bibkey>
      <pwccode url="https://github.com/jowagner/ud-combination" additional="true">jowagner/ud-combination</pwccode>
    </paper>
    <paper id="25">
      <title><fixed-case>K</fixed-case>øpsala: Transition-Based Graph Parsing via Efficient Training and Effective Encoding</title>
      <author><first>Daniel</first><last>Hershcovich</last></author>
      <author><first>Miryam</first><last>de Lhoneux</last></author>
      <author><first>Artur</first><last>Kulmizev</last></author>
      <author><first>Elham</first><last>Pejhan</last></author>
      <author><first>Joakim</first><last>Nivre</last></author>
      <pages>236–244</pages>
      <abstract>We present Køpsala, the Copenhagen-Uppsala system for the Enhanced Universal Dependencies Shared Task at IWPT 2020. Our system is a pipeline consisting of off-the-shelf models for everything but enhanced graph parsing, and for the latter, a transition-based graph parser adapted from Che et al. (2019). We train a single enhanced parser model per language, using gold sentence splitting and tokenization for training, and rely only on tokenized surface forms and multilingual BERT for encoding. While a bug introduced just before submission resulted in a severe drop in precision, its post-submission fix would bring us to 4th place in the official ranking, according to average ELAS. Our parser demonstrates that a unified pipeline is effective for both Meaning Representation Parsing and Enhanced Universal Dependencies.</abstract>
      <url hash="8fb8309c">2020.iwpt-1.25</url>
      <doi>10.18653/v1/2020.iwpt-1.25</doi>
      <video href="http://slideslive.com/38929692"/>
      <bibkey>hershcovich-etal-2020-kopsala</bibkey>
    </paper>
    <paper id="26">
      <title><fixed-case>R</fixed-case>obert<fixed-case>NLP</fixed-case> at the <fixed-case>IWPT</fixed-case> 2020 Shared Task: Surprisingly Simple Enhanced <fixed-case>UD</fixed-case> Parsing for <fixed-case>E</fixed-case>nglish</title>
      <author><first>Stefan</first><last>Grünewald</last></author>
      <author><first>Annemarie</first><last>Friedrich</last></author>
      <pages>245–252</pages>
      <abstract>This paper presents our system at the IWPT 2020 Shared Task on Parsing into Enhanced Universal Dependencies. Using a biaffine classifier architecture (Dozat and Manning, 2017) which operates directly on finetuned RoBERTa embeddings, our parser generates enhanced UD graphs by predicting the best dependency label (or absence of a dependency) for each pair of tokens in the sentence. We address label sparsity issues by replacing lexical items in relations with placeholders at prediction time, later retrieving them from the parse in a rule-based fashion. In addition, we ensure structural graph constraints using a simple set of heuristics. On the English blind test data, our system achieves a very high parsing accuracy, ranking 1st out of 10 with an ELAS F1 score of 88.94%.</abstract>
      <url hash="bea0a90e">2020.iwpt-1.26</url>
      <doi>10.18653/v1/2020.iwpt-1.26</doi>
      <video href="http://slideslive.com/38929693"/>
      <bibkey>grunewald-friedrich-2020-robertnlp</bibkey>
    </paper>
  </volume>
</collection>
