<?xml version='1.0' encoding='UTF-8'?>
<collection id="1984.bcs">
  <volume id="1" ingest-date="2021-09-12">
    <meta>
      <booktitle>Proceedings of the International Conference on Methodology and Techniques of Machine Translation: Processing from words to language</booktitle>
      <address>Cranfield University, UK</address>
      <month>February 13-15</month>
      <year>1984</year>
      <venue>bcs</venue>
    </meta>
    <frontmatter>
      <url hash="37554abe">1984.bcs-1.0</url>
      <bibkey>bcs-1984-international</bibkey>
    </frontmatter>
    <paper id="1">
      <title>Generations of <fixed-case>MT</fixed-case> systems: historical review and perspectives for the future</title>
      <author><first>Peter</first><last>Toma</last></author>
      <bibkey>toma-1984-generations</bibkey>
    </paper>
    <paper id="2">
      <title>A basic survey of practical machine translation</title>
      <author><first>Veronica</first><last>Lawson</last></author>
      <url hash="ef8be9ee">1984.bcs-1.2</url>
      <bibkey>lawson-1984-basic</bibkey>
    </paper>
    <paper id="3">
      <title>Methods of linguistic analysis in machine translation</title>
      <author><first>John</first><last>Hutchins</last></author>
      <url hash="39f1870b">1984.bcs-1.3</url>
      <bibkey>hutchins-1984-methods</bibkey>
    </paper>
    <paper id="4">
      <title>Machine translation from designers to users: management problems and solutions</title>
      <author><first>Benoit</first><last>Thou√Æn</last></author>
      <url hash="a36465b9">1984.bcs-1.4</url>
      <abstract>Today Machine Translation (MT) systems are at best unique combinations of mathematical, linguistic and algorithmic theories, and of the absence of any theory of translation. In most instances, be it or not because of the complexity of the theories and models involved, managers and translators have been kept out, or kept themselves out, of MTsystems design and development. However, they are the ones who have to use and manage such systems (if they ever become operational), cope with their development and operational costs and, with the help of such strange tools, achieve objectives of better communication. Clearly, since designers and users of operational MT systems are quite separate groups, it is not less than a transfer of technology that must occur for managers and translators, who are MT-wise developing professionals, to inherit the so-called achievements of developed computational linguistics theories. Most of those technology transfer problems resemble the ones managers are faced with when a new computerized information system is implemented in its operational and user environment: system and acceptance testing, possible strategies of implementations, conversion from old (manual) to new system, training, resistance to change, operation per se, including file and data-base maintenance, on-going evaluation and improvement of the system, etc. The paper will briefly overview these problems as they arise in an MT environment. Problems are interesting, but solutions are even more so. With examples mainly from the North-American experience, the paper will discuss original strategies that render easier the access of users to MT technology: early involvement of users in the development process, incorporation into existing operation environment, incorporation into a total document design and production system, total service by a translation firm making the system fully transparent to end-users, layered software structure, micro-computer implementation, direct connection and use through existing computer networks, and more ideas that will have emerged or been implemented by the time of the Conference.</abstract>
      <bibkey>thouin-1984-machine</bibkey>
    </paper>
    <paper id="5">
      <title>The difficulty of developing logical algorithms for the machine translation of natural language</title>
      <author><first>Ian M.</first><last>Pigott</last></author>
      <url hash="0e746276">1984.bcs-1.5</url>
      <abstract>In studying machine translation software design, computer experts and linguists have traditionally concentrated on a number of phenomena deemed to present special problems and thus require particular attention. Among the favourites in this connection are morphological analysis, prepositional dependencies and the establishment of antecedents. These and similar subjects have been dealt with at great length in the numerous papers written over the years to demonstrate the necessity of adding one or more specific processing features to the software under design or pilot development. Experience in the practical upgrading of operational systems has however tended to reveal a surprising variety of quite different problems and has shown that the fears of designers and theorists are frequently unfounded. Indeed, in tailoring a system for use by translators, many quite unexpected types of error emerge which, in the absence of sufficiently comprehensive studies, have to be eliminated largely on the basis of trial and error. The paper presents several examples of translation problems of this type and explains how difficult it can be to formalize their resolution in computer programs. Special reference is made to the English-French version of Systran, under development at the European Commission in Luxembourg. Explanations are given of the identification of error types, the human effort involved in their study, and the testing procedures used to check the validity of the action taken to reduce their occurrence in routine translation work. Finally, a number of suggestions are made for those working on design aspects of new systems in the hope that by paying lessattention to problems which have already been solved, efforts can be concentrated on the specific areas which continue to cause frustration for those required to correct or use machine translations in practice.</abstract>
      <bibkey>pigott-1984-difficulty</bibkey>
    </paper>
    <paper id="6">
      <title>The nature of proof in machine translation</title>
      <author><first>Margaret</first><last>Masterman</last></author>
      <bibkey>masterman-1984-nature</bibkey>
    </paper>
    <paper id="7">
      <title>A frequency-mode device to assist in the machine translation of natural languages</title>
      <author><first>Bill</first><last>Williams</last></author>
      <bibkey>williams-1984-frequency</bibkey>
    </paper>
    <paper id="8">
      <title>Machine-aided translation and lexical strategies</title>
      <author><first>Frank</first><last>Knowles</last></author>
      <url hash="47ea656e">1984.bcs-1.8</url>
      <bibkey>knowles-1984-machine</bibkey>
      <abstract>The context of this paper is that of a translator wishing to develop dictionaries for the purposes of machine-aided translation (MAT). A description is given of the ways in which lexical items in running text are statistically "patterned", depending on whether these so-called "types" are left unaltered as they are extracted from the text or whether they are immediately mapped onto the corresponding dictionary look-up form ("lemma") for the purpose of statistical analysis. It is obvious, of course, that for translation purposes it is necessary to establish appropriate entry-points into the MAT dictionary, but this is a secondary problem. There are two dimensions which can assist the machine-assisted translator to a considerable extent. One such factor is any degree of homogeneity the greater, the better in the texts he wishes to process. Translators specialising in certain subject areas and types of discourse are at an advantage if they wish to use an MAT system. The second factor is that of the so-called "multi-word unit". Although all languages have multi-word units, which are semantically atomic, they are particularly important in English, and even more so in English technical terminology. Frequency studies of multi-word units, although they generate large listings of types, can be very useful for MAT. The machine-assisted translator is faced with the need to view his work as consisting of two distinct modes: dictionary elaboration and text transaction. The second mode, of course, provides important feed-back to guide the first. One thing is clear: the translator must be his own lexicographer to a great extent, at least until the time when software houses realise the commercial value of such "static" data as general bi-lingual high-frequency dictionaries ana the potential "constellation" of carefully designed and delineated bi-lingual glossaries of technical terminology!</abstract>
    </paper>
    <paper id="9">
      <title>Searching single-word and multi-word dictionaries</title>
      <author><first>Francis J.</first><last>Smith</last></author>
      <author><first>K.</first><last>Devine</last></author>
      <author><first>P.</first><last>Craig</last></author>
      <url hash="85783960">1984.bcs-1.9</url>
      <bibkey>smith-etal-1984-searching</bibkey>
    </paper>
    <paper id="10">
      <title>A new dictionary structure for bi-directional <fixed-case>MT</fixed-case> system</title>
      <author><first>Shiu-chang</first><last>Loh</last></author>
      <author><first>Luan</first><last>Kong</last></author>
      <author><first>Hing-sum</first><last>Hung</last></author>
      <url hash="45d41844">1984.bcs-1.10</url>
      <abstract>The importance and structure of MT-dictionary were discussed extensively by many researchers in machine, translation in the past. These structures were mainly concerned with MT-dictionaries for one-way translation systems. In the present paper, a new dictionary structure for bi-directional machine translation is being introduced. The new structure is being tested for Chinese-English as well as English-Chinese machine translation.</abstract>
      <bibkey>loh-etal-1984-new</bibkey>
    </paper>
    <paper id="11">
      <title>Changes and improvements to the <fixed-case>E</fixed-case>uropean Commisssion‚Äôs Systran system 1976/84</title>
      <author><first>Peter J.</first><last>Wheeler</last></author>
      <url hash="5221cfbb">1984.bcs-1.11</url>
      <bibkey>wheeler-1984-changes</bibkey>
    </paper>
    <paper id="12">
      <title>Automatic integrated dictionary systems</title>
      <author><first>J.</first><last>Jelinek</last></author>
      <author><first>J.</first><last>Hawgood</last></author>
      <url hash="38d0d747">1984.bcs-1.12</url>
      <bibkey>jelinek-hawgood-1984-automatic</bibkey>
    </paper>
    <paper id="13">
      <title>A software system for describing a grammar of machine translation: <fixed-case>GRADE</fixed-case></title>
      <author><first>Jun-ichi</first><last>Nakamura</last></author>
      <author><first>Makoto</first><last>Nagao</last></author>
      <abstract>A new software system for describing a grammar of a machine translation system has been developed. This software system is called GRADE (GRAmmar DEscriber). GRADE has the following features: 1. GRADE allows a grammar writer to divide a whole grammar into several parts. Each part of the grammar is called a subgrammar. A subgrammar describes a step of the translation process. A whole grammar is then described by a network of sub-grammars. This network is called a subgrammar network. A subgrammar network allows a grammar writer to control the process of the translation precisely. When a subgrammar network in the analysis phase consists of a subgrammar for a noun-phrase (SG1) and a subgrammar for a verb-phase (SG2) in this sequence, the subgrammar network first applies SG1 to an input sentence, then applies SG2 to the result of an application of SG1, thus getting a syntactic structure for the input sentence. 2. A subgrammar consists of a set of rewriting rules. Rewriting rules in a subgrammar are applied for an input sentence in an appropriate order, which is specified in the description of the subgrammar. A rewriting rule transforms a tree structure into another tree structure. Rewriting rules use a powerful pattern matching algorithm to test their applicability to a tree structure. For example, a grammar writer can write a pattern that recognizes and parses an arbitrary numbers of sub-trees. Each node of a tree-structure has a list of pairs of a property name and a property value. A node can express a category name, a semantic marker, flags to control the translation process, and various other information. This tree-to-tree transformation operation by GRADE allows a grammar writer to describe all the processes of analysis, transfer and generation of a machine translation system with this uniform description capability of GRADE. 3. A subgrammar network or a subgrammar can be written in an entry of the dictionaries for a machine translation system. A subgrammar network or a subgrammar written in a dictionary entry is called a dictionary rule, which is specific for a word. When an input sentence contains a word which has a dictionary rule, it is applied to an input sentence at an appropriate point of a translation process. It can express more precise processing appropriate for that specific word that a general Subgrammar Network or Subgrammar. it also allows grammar writers to adjust a machine translation system to a specific domain easily. 4. GRADE is written in LISP. GRADE is implemented on FACOM M-382 and Symbolics 3600. GRADE is used in the machine translation system between Japanese and English. The project was started by the Japanese government in 1982. The effectiveness of GRADE has been demonstrated in the project.</abstract>
      <url hash="c9b1916c">1984.bcs-1.13</url>
      <bibkey>nakamura-nagao-1984-software</bibkey>
    </paper>
    <paper id="14">
      <title>A micro-computer program for checking translation at sentence level</title>
      <author><first>Brian</first><last>Farrington</last></author>
      <url hash="7496d495">1984.bcs-1.14</url>
      <bibkey>farrington-1984-micro</bibkey>
    </paper>
    <paper id="15">
      <title><fixed-case>SYNICS</fixed-case> ‚Äì a tool for translating natural language syntax</title>
      <author><first>M.</first><last>Roberts</last></author>
      <author><first>E. A.</first><last>Edmonds</last></author>
      <url hash="fee60283">1984.bcs-1.15</url>
      <bibkey>roberts-edmonds-1984-synics</bibkey>
    </paper>
    <paper id="16">
      <title>Production of sentences: a general algorithm and a case study</title>
      <author><first>Giovanni</first><last>Adorni</last></author>
      <author><first>Lina</first><last>Massone</last></author>
      <url hash="663cf1a3">1984.bcs-1.16</url>
      <abstract>In this paper a procedure for the production of sentences is described, producing written sentences in a particular language starting from formal representations of their meaning. After a brief description of the internal representation used, the algorithm is presented, and some results and future trends are discussed.</abstract>
      <bibkey>adorni-massone-1984-production</bibkey>
    </paper>
    <paper id="17">
      <title>The generation of <fixed-case>C</fixed-case>hinese sentences from semantic representations of <fixed-case>E</fixed-case>nglish sentences</title>
      <author><first>Xiuming</first><last>Huang</last></author>
      <url hash="c911461f">1984.bcs-1.17</url>
      <abstract>The paper describes the CASSEX package, a parser which takes as input English sentences and produces semantic representations of them, and gives an account of the generation procedure which translates these semantic representations into Chinese sentences.</abstract>
      <bibkey>huang-1984-generation</bibkey>
    </paper>
    <paper id="18">
      <title>Machine translation of <fixed-case>E</fixed-case>nglish into <fixed-case>P</fixed-case>ersian</title>
      <author><first>Homayoun</first><last>Eman</last></author>
      <author><first>Douglas</first><last>Clarke</last></author>
      <bibkey>eman-clarke-1984-machine</bibkey>
    </paper>
    <paper id="19">
      <title>Machine translation with post editing versus a three-level integrated translator aid system</title>
      <author><first>Alan K.</first><last>Melby</last></author>
      <url hash="f593e45b">1984.bcs-1.19</url>
      <abstract>The standard design for a computer-assisted translation system consists of data entry of source text, machine translation, and post editing (i.e. revision) of raw machine translation. This paper discusses this standard design and presents an alternative three-level design consisting of word processing integrated with terminology aids, simple source text processing, and a link to an off-line machine translation system. Advantages of the new design are discussed.</abstract>
      <bibkey>melby-1984-machine</bibkey>
    </paper>
    <paper id="20">
      <title>The grammatical tagging of unrestricted <fixed-case>E</fixed-case>nglish text</title>
      <author><first>Roger</first><last>Garside</last></author>
      <author><first>Geoffrey</first><last>Leach</last></author>
      <author><first>Eric</first><last>Atwell</last></author>
      <url hash="e9a37088">1984.bcs-1.20</url>
      <bibkey>garside-etal-1984-grammatical</bibkey>
    </paper>
    <paper id="21">
      <title>How to boldly split infinitives</title>
      <author><first>Raphael</first><last>Mankin</last></author>
      <url hash="351539f9">1984.bcs-1.21</url>
      <bibkey>mankin-1984-boldly</bibkey>
    </paper>
    <paper id="22">
      <title>What is the language of memory?</title>
      <author><first>Peter Nwoye O.</first><last>Mbaeyi</last></author>
      <url hash="29499180">1984.bcs-1.22</url>
      <abstract>This paper outlines the mutual beneficial analogies between the structural dynamics of memory and machine translation, both of which are extensively dependent on fundamental pattern recognition problems. Basically, both processes are faced with a similarly structured problem namely, the problem of condensing large quantities of data into intelligently interpretable smaller volumes (comprised of basic "information clusters"). For machine translation, the alphabets and words of a language (that make up an essay) define these data, while the multiplicities of physico-chemical objects of sensory perception constitute, amongst others, the data compression problem facing the memory functions of the brain. For the neural systems (underlying the memory functions of the brain) recent advancements in generalized quantum theoretical methods provide some bases. While these foundations will not be discussed here in any detail, they are used to define the components of a language compatible with memory dynamics. Essentially, these culminate in associative (quantum) logical problems with analogical counterparts in linguistics and the use of compartmentalization cum associative logic in essay interpretations. For purposes of computational linguistics, this paper makes these analogies precise (on quantitative analytical basis), with emphasis on discrete recursive generation of larger structures, and equivalents of coding and decoding for machine translation process.</abstract>
      <bibkey>mbaeyi-1984-language</bibkey>
    </paper>
    <paper id="23">
      <title>Application of <fixed-case>SYSTRAN</fixed-case> for translation of nuclear technology texts at the Nuclear Center of Karlsruhe</title>
      <author><first>F. W. A.</first><last>Habermann</last></author>
      <url hash="e4361fd5">1984.bcs-1.23</url>
      <abstract>Four years ago the Nuclear Center of Karlsruhe has commenced to apply the Systran MT Program for the translation of nuclear technology texts from French into English. During this period the Systran program has been updated several times and about 8000 entries have been made in the stem dictionary to adapt the MT program to the special field. This resulted in substantial improvement of the quality of translated texts. Quantitative judgement of this quality could be achieved by repeated statistical analysis of some representative sample texts. The results of these analyses are shown and commented.</abstract>
      <bibkey>habermann-1984-application</bibkey>
    </paper>
    <paper id="24">
      <title>A generalized computer-assisted language translation model: <fixed-case>E</fixed-case>nglish to <fixed-case>A</fixed-case>rabic ‚Äì problems and solutions</title>
      <author><first>Mamdouh</first><last>Ibrahim</last></author>
      <bibkey>ibrahim-1984-generalized</bibkey>
    </paper>
    <paper id="25">
      <title>Robust processing in machine translation</title>
      <author><first>Doug</first><last>Arnold</last></author>
      <author><first>Rod</first><last>Johnson</last></author>
      <url hash="2769e940">1984.bcs-1.25</url>
      <abstract>We attempt to develop a general theory of robust processing for natural language, and especially Machine Translation purposes. That is, a general characterization of methods by which processes can be made resistant to malfunctioning of various kinds. We distinguish three sources of malfunction: (a) deviant inputs, (b) deviant outputs, and (c) deviant pairings of input and output, and describe the assumptions that guide our discussion (sections 1 and 2). We classify existing approaches to (a)and (b)-robustness, noting that not only do such approaches fail to provide a solution to (c)-type problems, but that the natural consequence of these solutions is to make (c)-type malfunctions harder to detect (section 3) In the final section (4) we outline possible solutions to (c)-type malfunctions.</abstract>
      <bibkey>arnold-johnson-1984-robust-processing</bibkey>
    </paper>
    <paper id="26">
      <title>Development of <fixed-case>E</fixed-case>nglish-<fixed-case>S</fixed-case>panish machine translation</title>
      <author><first>Marjorie</first><last>Le√≥n</last></author>
      <url hash="d86b74ea">1984.bcs-1.26</url>
      <bibkey>leon-1984-development</bibkey>
    </paper>
    <paper id="27">
      <title>Control and data structures in the <fixed-case>MT</fixed-case> system <fixed-case>SUSY</fixed-case>-<fixed-case>E</fixed-case></title>
      <author><first>Heinz Dieter</first><last>Maas</last></author>
      <url hash="07756b63">1984.bcs-1.27</url>
      <abstract>The MT system SUSY-E which has been developed since 1972 in the Sonderforschungsbereich "Elektronische Sprachforschung" of the University of the Saar can be divided into three major subsystems: background, dictionary and kernel systems. The background system represents the interface to implementers, linguists and users. The dictionary system supports the construction and maintenance of the different dictionaries and provides the description of the dictionary entries. The proper translation processes are carried out by the use of the kernel systems containing the linguistic knowledge in different representational schemes and allowing for syntactico-semantic analysis and generation of texts. The most elaborate kernel system of SUSY-E is SUSY which has been constantly developed and tested in the past ten years. Apart from SUSY there exist several new "prototypes" which in their architecture show considerable differences between themselves and especially with regard to SUSY. These new approaches are called SUSY-II systems.</abstract>
      <bibkey>maas-1984-control</bibkey>
    </paper>
    <paper id="28">
      <title>The <fixed-case>LOGOS</fixed-case> system</title>
      <author><first>Glenn</first><last>Ransier</last></author>
      <bibkey>ransier-1984-logos</bibkey>
    </paper>
    <paper id="29">
      <title><fixed-case>TECM</fixed-case> ‚Äì translation of <fixed-case>E</fixed-case>nglish into <fixed-case>C</fixed-case>hinese on a micro</title>
      <author><first>Liu</first><last>Shiao-shu</last></author>
      <url hash="331418ce">1984.bcs-1.29</url>
      <bibkey>shiao-shu-1984-tecm</bibkey>
    </paper>
    <paper id="30">
      <title>Notes on interactive translation</title>
      <author><first>Deryle</first><last>Lonsdale</last></author>
      <url hash="c5046684">1984.bcs-1.30</url>
      <bibkey>lonsdale-1984-notes</bibkey>
    </paper>
    <paper id="31">
      <title>Recent <fixed-case>C</fixed-case>anadian experience in machine translation</title>
      <author><first>Elliott</first><last>Macklovitch</last></author>
      <url hash="e6f9263a">1984.bcs-1.31</url>
      <bibkey>macklovitch-1984-recent</bibkey>
    </paper>
    <paper id="32">
      <title>Machine translation in the <fixed-case>USSR</fixed-case></title>
      <author><first>Yu. N.</first><last>Marchuk</last></author>
      <url hash="21bb949b">1984.bcs-1.32</url>
      <bibkey>marchuk-1984-machine</bibkey>
    </paper>
    <paper id="33">
      <title><fixed-case>AMPAR</fixed-case> and <fixed-case>NERPA</fixed-case> systems of machine translation: some specific features of software and technology</title>
      <author><first>B. D.</first><last>Tikhomirov</last></author>
      <url hash="d09600c0">1984.bcs-1.33</url>
      <bibkey>tikhomirov-1984-ampar</bibkey>
    </paper>
    <paper id="34">
      <title>Distributed language translation, another <fixed-case>MT</fixed-case> system</title>
      <author><first>A. P. M.</first><last>Witkam</last></author>
      <url hash="ea90d55b">1984.bcs-1.34</url>
      <bibkey>witkam-1984-distributed</bibkey>
    </paper>
    <paper id="35">
      <title>Speech input and output technology</title>
      <author><first>Raj</first><last>Gunawardana</last></author>
      <bibkey>gunawardana-1984-speech</bibkey>
    </paper>
    <paper id="36">
      <title>Language or information: a new role for the translator</title>
      <author><first>Birgit</first><last>Rommel</last></author>
      <url hash="1346791b">1984.bcs-1.36</url>
      <bibkey>rommel-1984-language</bibkey>
    </paper>
  </volume>
</collection>
