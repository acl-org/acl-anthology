<?xml version='1.0' encoding='UTF-8'?>
<collection id="2020.sdp">
  <volume id="1" ingest-date="2020-11-06">
    <meta>
      <booktitle>Proceedings of the First Workshop on Scholarly Document Processing</booktitle>
      <editor><first>Muthu Kumar</first><last>Chandrasekaran</last></editor>
      <editor><first>Anita</first><last>de Waard</last></editor>
      <editor><first>Guy</first><last>Feigenblat</last></editor>
      <editor><first>Dayne</first><last>Freitag</last></editor>
      <editor><first>Tirthankar</first><last>Ghosal</last></editor>
      <editor><first>Eduard</first><last>Hovy</last></editor>
      <editor><first>Petr</first><last>Knoth</last></editor>
      <editor><first>David</first><last>Konopnicki</last></editor>
      <editor><first>Philipp</first><last>Mayr</last></editor>
      <editor><first>Robert M.</first><last>Patton</last></editor>
      <editor><first>Michal</first><last>Shmueli-Scheuer</last></editor>
      <publisher>Association for Computational Linguistics</publisher>
      <address>Online</address>
      <month>November</month>
      <year>2020</year>
      <venue>sdp</venue>
    </meta>
    <frontmatter>
      <url hash="a32476e4">2020.sdp-1.0</url>
      <bibkey>sdp-2020-scholarly</bibkey>
    </frontmatter>
    <paper id="1">
      <title>Overview of the First Workshop on Scholarly Document Processing (<fixed-case>SDP</fixed-case>)</title>
      <author><first>Muthu Kumar</first><last>Chandrasekaran</last></author>
      <author><first>Guy</first><last>Feigenblat</last></author>
      <author><first>Dayne</first><last>Freitag</last></author>
      <author><first>Tirthankar</first><last>Ghosal</last></author>
      <author><first>Eduard</first><last>Hovy</last></author>
      <author><first>Philipp</first><last>Mayr</last></author>
      <author><first>Michal</first><last>Shmueli-Scheuer</last></author>
      <author><first>Anita</first><last>de Waard</last></author>
      <pages>1–6</pages>
      <abstract>Next to keeping up with the growing literature in their own and related fields, scholars increasingly also need to rebut pseudo-science and disinformation. To address these challenges, computational work on enhancing search, summarization, and analysis of scholarly documents has flourished. However, the various strands of research on scholarly document processing remain fragmented. To reach to the broader NLP and AI/ML community, pool distributed efforts and enable shared access to published research, we held the 1st Workshop on Scholarly Document Processing at EMNLP 2020 as a virtual event. The SDP workshop consisted of a research track (including a poster session), two invited talks and three Shared Tasks (CL-SciSumm, Lay-Summ and LongSumm), geared towards easier access to scientific methods and results. <b>Website</b>: <url>https://ornlcda.github.io/SDProc</url>
      </abstract>
      <url hash="4e49b742">2020.sdp-1.1</url>
      <doi>10.18653/v1/2020.sdp-1.1</doi>
      <bibkey>chandrasekaran-etal-2020-overview</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/scisummnet">ScisummNet</pwcdataset>
    </paper>
    <paper id="2">
      <title>The future of ar<fixed-case>X</fixed-case>iv and knowledge discovery in open science</title>
      <author><first>Steinn</first><last>Sigurdsson</last></author>
      <pages>7–9</pages>
      <abstract>arXiv, the preprint server for the physical and mathematical sciences, is in its third decade of operation. As the flow of new, open access research increases inexorably, the challenges to keep up with and discover research content also become greater. I will discuss the status and future of arXiv, and possibilities and plans to make more effective use of the research database to enhance ongoing research efforts.</abstract>
      <url hash="5babaa19">2020.sdp-1.2</url>
      <doi>10.18653/v1/2020.sdp-1.2</doi>
      <bibkey>sigurdsson-2020-future</bibkey>
    </paper>
    <paper id="3">
      <title>Acknowledgement Entity Recognition in <fixed-case>CORD</fixed-case>-19 Papers</title>
      <author><first>Jian</first><last>Wu</last></author>
      <author><first>Pei</first><last>Wang</last></author>
      <author><first>Xin</first><last>Wei</last></author>
      <author><first>Sarah</first><last>Rajtmajer</last></author>
      <author><first>C. Lee</first><last>Giles</last></author>
      <author><first>Christopher</first><last>Griffin</last></author>
      <pages>10–19</pages>
      <abstract>Acknowledgements are ubiquitous in scholarly papers. Existing acknowledgement entity recognition methods assume all named entities are acknowledged. Here, we examine the nuances between acknowledged and named entities by analyzing sentence structure. We develop an acknowledgement extraction system, AckExtract based on open-source text mining software and evaluate our method using manually labeled data. AckExtract uses the PDF of a scholarly paper as input and outputs acknowledgement entities. Results show an overall performance of F_1=0.92. We built a supplementary database by linking CORD-19 papers with acknowledgement entities extracted by AckExtract including persons and organizations and find that only up to 50–60% of named entities are actually acknowledged. We further analyze chronological trends of acknowledgement entities in CORD-19 papers. All codes and labeled data are publicly available at https://github.com/lamps-lab/ackextract.</abstract>
      <url hash="dc7c6b4d">2020.sdp-1.3</url>
      <doi>10.18653/v1/2020.sdp-1.3</doi>
      <video href="https://slideslive.com/38940712"/>
      <bibkey>wu-etal-2020-acknowledgement</bibkey>
      <pwccode url="https://github.com/lamps-lab/ackextract" additional="false">lamps-lab/ackextract</pwccode>
    </paper>
    <paper id="4">
      <title>A Smart System to Generate and Validate Question Answer Pairs for <fixed-case>COVID</fixed-case>-19 Literature</title>
      <author><first>Rohan</first><last>Bhambhoria</last></author>
      <author><first>Luna</first><last>Feng</last></author>
      <author><first>Dawn</first><last>Sepehr</last></author>
      <author><first>John</first><last>Chen</last></author>
      <author><first>Conner</first><last>Cowling</last></author>
      <author><first>Sedef</first><last>Kocak</last></author>
      <author><first>Elham</first><last>Dolatabadi</last></author>
      <pages>20–30</pages>
      <abstract>Automatically generating question answer (QA) pairs from the rapidly growing coronavirus-related literature is of great value to the medical community. Creating high quality QA pairs would allow researchers to build models to address scientific queries for answers which are not readily available in support of the ongoing fight against the pandemic. QA pair generation is, however, a very tedious and time consuming task requiring domain expertise for annotation and evaluation. In this paper we present our contribution in addressing some of the challenges of building a QA system without gold data. We first present a method to create QA pairs from a large semi-structured dataset through the use of transformer and rule-based models. Next, we propose a means of engaging subject matter experts (SMEs) for annotating the QA pairs through the usage of a web application. Finally, we demonstrate some experiments showcasing the effectiveness of leveraging active learning in designing a high performing model with a substantially lower annotation effort from the domain experts.</abstract>
      <url hash="ea0cf890">2020.sdp-1.4</url>
      <doi>10.18653/v1/2020.sdp-1.4</doi>
      <video href="https://slideslive.com/38940713"/>
      <bibkey>bhambhoria-etal-2020-smart</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/bioasq">BioASQ</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/cord-19">CORD-19</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/pubmedqa">PubMedQA</pwcdataset>
    </paper>
    <paper id="5">
      <title>Covidex: Neural Ranking Models and Keyword Search Infrastructure for the <fixed-case>COVID</fixed-case>-19 Open Research Dataset</title>
      <author><first>Edwin</first><last>Zhang</last></author>
      <author><first>Nikhil</first><last>Gupta</last></author>
      <author><first>Raphael</first><last>Tang</last></author>
      <author><first>Xiao</first><last>Han</last></author>
      <author><first>Ronak</first><last>Pradeep</last></author>
      <author><first>Kuang</first><last>Lu</last></author>
      <author><first>Yue</first><last>Zhang</last></author>
      <author><first>Rodrigo</first><last>Nogueira</last></author>
      <author><first>Kyunghyun</first><last>Cho</last></author>
      <author><first>Hui</first><last>Fang</last></author>
      <author><first>Jimmy</first><last>Lin</last></author>
      <pages>31–41</pages>
      <abstract>We present Covidex, a search engine that exploits the latest neural ranking models to provide information access to the COVID-19 Open Research Dataset curated by the Allen Institute for AI. Our system has been online and serving users since late March 2020. The Covidex is the user application component of our three-pronged strategy to develop technologies for helping domain experts tackle the ongoing global pandemic. In addition, we provide robust and easy-to-use keyword search infrastructure that exploits mature fusion-based methods as well as standalone neural ranking models that can be incorporated into other applications. These techniques have been evaluated in the multi-round TREC-COVID challenge: Our infrastructure and baselines have been adopted by many participants, including some of the best systems. In round 3, we submitted the highest-scoring run that took advantage of previous training data and the second-highest fully automatic run. In rounds 4 and 5, we submitted the highest-scoring fully automatic runs.</abstract>
      <url hash="b5b0c3d7">2020.sdp-1.5</url>
      <doi>10.18653/v1/2020.sdp-1.5</doi>
      <video href="https://slideslive.com/38940714"/>
      <bibkey>zhang-etal-2020-covidex</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/ms-marco">MS MARCO</pwcdataset>
    </paper>
    <paper id="6">
      <title>The impact of preprint servers in the formation of novel ideas</title>
      <author><first>Swarup</first><last>Satish</last></author>
      <author><first>Zonghai</first><last>Yao</last></author>
      <author><first>Andrew</first><last>Drozdov</last></author>
      <author><first>Boris</first><last>Veytsman</last></author>
      <pages>42–55</pages>
      <abstract>We study whether novel ideas in biomedical literature appear first in preprints or traditional journals. We develop a Bayesian method to estimate the time of appearance for a phrase in the literature, and apply it to a number of phrases, both automatically extracted and suggested by experts. We see that presently most phrases appear first in the traditional journals, but there is a number of phrases with the first appearance on preprint servers. A comparison of the general composition of texts from bioRxiv and traditional journals shows a growing trend of bioRxiv being predictive of traditional journals. We discuss the application of the method for related problems.</abstract>
      <url hash="f498b529">2020.sdp-1.6</url>
      <doi>10.18653/v1/2020.sdp-1.6</doi>
      <video href="https://slideslive.com/38940715"/>
      <bibkey>satish-etal-2020-impact</bibkey>
      <pwccode url="https://github.com/seasonyao/biorxivimpact" additional="false">seasonyao/biorxivimpact</pwccode>
    </paper>
    <paper id="7">
      <title>Effective distributed representations for academic expert search</title>
      <author><first>Mark</first><last>Berger</last></author>
      <author><first>Jakub</first><last>Zavrel</last></author>
      <author><first>Paul</first><last>Groth</last></author>
      <pages>56–71</pages>
      <abstract>Expert search aims to find and rank experts based on a user’s query. In academia, retrieving experts is an efficient way to navigate through a large amount of academic knowledge. Here, we study how different distributed representations of academic papers (i.e. embeddings) impact academic expert retrieval. We use the Microsoft Academic Graph dataset and experiment with different configurations of a document-centric voting model for retrieval. In particular, we explore the impact of the use of contextualized embeddings on search performance. We also present results for paper embeddings that incorporate citation information through retrofitting. Additionally, experiments are conducted using different techniques for assigning author weights based on author order. We observe that using contextual embeddings produced by a transformer model trained for sentence similarity tasks produces the most effective paper representations for document-centric expert retrieval. However, retrofitting the paper embeddings and using elaborate author contribution weighting strategies did not improve retrieval performance.</abstract>
      <url hash="b792b177">2020.sdp-1.7</url>
      <doi>10.18653/v1/2020.sdp-1.7</doi>
      <video href="https://slideslive.com/38940716"/>
      <bibkey>berger-etal-2020-effective</bibkey>
      <pwccode url="https://github.com/mabergerx/SDP500_expert_search" additional="false">mabergerx/SDP500_expert_search</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/microsoft-academic-graph">Microsoft Academic Graph</pwcdataset>
    </paper>
    <paper id="8">
      <title>Learning <fixed-case>CNF</fixed-case> Blocking for Large-scale Author Name Disambiguation</title>
      <author><first>Kunho</first><last>Kim</last></author>
      <author><first>Athar</first><last>Sefid</last></author>
      <author><first>C. Lee</first><last>Giles</last></author>
      <pages>72–80</pages>
      <abstract>Author name disambiguation (AND) algorithms identify a unique author entity record from all similar or same publication records in scholarly or similar databases. Typically, a clustering method is used that requires calculation of similarities between each possible record pair. However, the total number of pairs grows quadratically with the size of the author database making such clustering difficult for millions of records. One remedy is a blocking function that reduces the number of pairwise similarity calculations. Here, we introduce a new way of learning blocking schemes by using a conjunctive normal form (CNF) in contrast to the disjunctive normal form (DNF). We demonstrate on PubMed author records that CNF blocking reduces more pairs while preserving high pairs completeness compared to the previous methods that use a DNF and that the computation time is significantly reduced. In addition, we also show how to ensure that the method produces disjoint blocks so that much of the AND algorithm can be efficiently paralleled. Our CNF blocking method is tested on the entire PubMed database of 80 million author mentions and efficiently removes 82.17% of all author record pairs in 10 minutes.</abstract>
      <url hash="e57ce0dd">2020.sdp-1.8</url>
      <doi>10.18653/v1/2020.sdp-1.8</doi>
      <video href="https://slideslive.com/38940717"/>
      <bibkey>kim-etal-2020-learning</bibkey>
    </paper>
    <paper id="9">
      <title>Reconstructing Manual Information Extraction with <fixed-case>DB</fixed-case>-to-Document Backprojection: Experiments in the Life Science Domain</title>
      <author><first>Mark-Christoph</first><last>Müller</last></author>
      <author><first>Sucheta</first><last>Ghosh</last></author>
      <author><first>Maja</first><last>Rey</last></author>
      <author><first>Ulrike</first><last>Wittig</last></author>
      <author><first>Wolfgang</first><last>Müller</last></author>
      <author><first>Michael</first><last>Strube</last></author>
      <pages>81–90</pages>
      <abstract>We introduce a novel scientific document processing task for making previously inaccessible information in printed paper documents available to automatic processing. We describe our data set of scanned documents and data records from the biological database SABIO-RK, provide a definition of the task, and report findings from preliminary experiments. Rigorous evaluation proved challenging due to lack of gold-standard data and a difficult notion of correctness. Qualitative inspection of results, however, showed the feasibility and usefulness of the task</abstract>
      <url hash="0d65a121">2020.sdp-1.9</url>
      <doi>10.18653/v1/2020.sdp-1.9</doi>
      <video href="https://slideslive.com/38940718"/>
      <bibkey>muller-etal-2020-reconstructing</bibkey>
    </paper>
    <paper id="10">
      <title><fixed-case>D</fixed-case>eep<fixed-case>P</fixed-case>aper<fixed-case>C</fixed-case>omposer: A Simple Solution for Training Data Preparation for Parsing Research Papers</title>
      <author><first>Meng</first><last>Ling</last></author>
      <author><first>Jian</first><last>Chen</last></author>
      <pages>91–96</pages>
      <abstract>We present DeepPaperComposer, a simple solution for preparing highly accurate (100%) training data without manual labeling to extract content from scholarly articles using convolutional neural networks (CNNs). We used our approach to generate data and trained CNNs to extract eight categories of both textual (titles, abstracts, headers, figure and table captions, and other texts) and non-textural content (figures and tables) from 30 years of IEEE VIS conference papers, of which a third were scanned bitmap PDFs. We curated this dataset and named it VISpaper-3K. We then showed our initial benchmark performance using VISpaper-3K over itself and CS-150 using YOLOv3 and Faster-RCNN. We open-source DeepPaperComposer of our training data generation and released the resulting annotation data VISpaper-3K to promote re-producible research.</abstract>
      <url hash="4de2b873">2020.sdp-1.10</url>
      <doi>10.18653/v1/2020.sdp-1.10</doi>
      <video href="https://slideslive.com/38940719"/>
      <bibkey>ling-chen-2020-deeppapercomposer</bibkey>
    </paper>
    <paper id="11">
      <title>Improved Local Citation Recommendation Based on Context Enhanced with Global Information</title>
      <author><first>Zoran</first><last>Medić</last></author>
      <author><first>Jan</first><last>Snajder</last></author>
      <pages>97–103</pages>
      <abstract>Local citation recommendation aims at finding articles relevant for given citation context. While most previous approaches represent context using solely text surrounding the citation, we propose enhancing context representation with global information. Specifically, we include citing article’s title and abstract into context representation. We evaluate our model on datasets with different citation context sizes and demonstrate improvements with globally-enhanced context representations when citation contexts are smaller.</abstract>
      <url hash="5ebeefb9">2020.sdp-1.11</url>
      <doi>10.18653/v1/2020.sdp-1.11</doi>
      <video href="https://slideslive.com/38940720"/>
      <bibkey>medic-snajder-2020-improved</bibkey>
      <pwccode url="https://github.com/zoranmedic/duallcr" additional="false">zoranmedic/duallcr</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/refseer">RefSeer</pwcdataset>
    </paper>
    <paper id="12">
      <title>On the effectiveness of small, discriminatively pre-trained language representation models for biomedical text mining</title>
      <author><first>Ibrahim Burak</first><last>Ozyurt</last></author>
      <pages>104–112</pages>
      <abstract>Neural language representation models such as BERT have recently shown state of the art performance in downstream NLP tasks and bio-medical domain adaptation of BERT (Bio-BERT) has shown same behavior on biomedical text mining tasks. However, due to their large model size and resulting increased computational need, practical application of models such as BERT is challenging making smaller models with comparable performance desirable for real word applications. Recently, a new language transformers based language representation model named ELECTRA is introduced, that makes efficient usage of training data in a generative-discriminative neural model setting that shows performance gains over BERT. These gains are especially impressive for smaller models. Here, we introduce two small ELECTRA based model named Bio-ELECTRA and Bio-ELECTRA++ that are eight times smaller than BERT Base and Bio-BERT and achieves comparable or better performance on biomedical question answering, yes/no question answer classification, question answer candidate ranking and relation extraction tasks. Bio-ELECTRA is pre-trained from scratch on PubMed abstracts using a consumer grade GPU with only 8GB memory. Bio-ELECTRA++ is the further pre-trained version of Bio-ELECTRA trained on a corpus of open access full papers from PubMed Central. While, for biomedical named entity recognition, large BERT Base model outperforms Bio-ELECTRA++, Bio-ELECTRA and ELECTRA-Small++, with hyperparameter tuning Bio-ELECTRA++ achieves results comparable to BERT.</abstract>
      <url hash="88c8db38">2020.sdp-1.12</url>
      <doi>10.18653/v1/2020.sdp-1.12</doi>
      <video href="https://slideslive.com/38940735"/>
      <bibkey>ozyurt-2020-effectiveness</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/bioasq">BioASQ</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/ncbi-disease-1">NCBI Disease</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/squad">SQuAD</pwcdataset>
    </paper>
    <paper id="13">
      <title><fixed-case>S</fixed-case>ci<fixed-case>WING</fixed-case>– A Software Toolkit for Scientific Document Processing</title>
      <author><first>Abhinav</first><last>Ramesh Kashyap</last></author>
      <author><first>Min-Yen</first><last>Kan</last></author>
      <pages>113–120</pages>
      <abstract>We introduce SciWING, an open-source soft-ware toolkit which provides access to state-of-the-art pre-trained models for scientific document processing (SDP) tasks, such as citation string parsing, logical structure recovery and citation intent classification. Compared to other toolkits, SciWING follows a full neural pipeline and provides a Python inter-face for SDP. When needed, SciWING provides fine-grained control for rapid experimentation with different models by swapping and stacking different modules. Transfer learning from general and scientific documents specific pre-trained transformers (i.e., BERT, SciBERT, etc.) can be performed. SciWING incorporates ready-to-use web and terminal-based applications and demonstrations to aid adoption and development. The toolkit is available from http://sciwing.io and the demos are available at http://rebrand.ly/sciwing-demo.</abstract>
      <url hash="ca89a186">2020.sdp-1.13</url>
      <doi>10.18653/v1/2020.sdp-1.13</doi>
      <video href="https://slideslive.com/38940731"/>
      <bibkey>ramesh-kashyap-kan-2020-sciwing</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/semantic-scholar">Semantic Scholar</pwcdataset>
    </paper>
    <paper id="14">
      <title>Multi-task Peer-Review Score Prediction</title>
      <author><first>Jiyi</first><last>Li</last></author>
      <author><first>Ayaka</first><last>Sato</last></author>
      <author><first>Kazuya</first><last>Shimura</last></author>
      <author><first>Fumiyo</first><last>Fukumoto</last></author>
      <pages>121–126</pages>
      <abstract>Automatic prediction on the peer-review aspect scores of academic papers can be a useful assistant tool for both reviewers and authors. To handle the small size of published datasets on the target aspect of scores, we propose a multi-task approach to leverage additional information from other aspects of scores for improving the performance of the target. Because one of the problems of building multi-task models is how to select the proper resources of auxiliary tasks and how to select the proper shared structures. We propose a multi-task shared structure encoding approach which automatically selects good shared network structures as well as good auxiliary resources. The experiments based on peer-review datasets show that our approach is effective and has better performance on the target scores than the single-task method and naive multi-task methods.</abstract>
      <url hash="b5f69f40">2020.sdp-1.14</url>
      <doi>10.18653/v1/2020.sdp-1.14</doi>
      <video href="https://slideslive.com/38940727"/>
      <bibkey>li-etal-2020-multi-task</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/peerread">PeerRead</pwcdataset>
    </paper>
    <paper id="15">
      <title><fixed-case>ERLKG</fixed-case>: Entity Representation Learning and Knowledge Graph based association analysis of <fixed-case>COVID</fixed-case>-19 through mining of unstructured biomedical corpora</title>
      <author><first>Sayantan</first><last>Basu</last></author>
      <author><first>Sinchani</first><last>Chakraborty</last></author>
      <author><first>Atif</first><last>Hassan</last></author>
      <author><first>Sana</first><last>Siddique</last></author>
      <author><first>Ashish</first><last>Anand</last></author>
      <pages>127–137</pages>
      <abstract>We introduce a generic, human-out-of-the-loop pipeline, ERLKG, to perform rapid association analysis of any biomedical entity with other existing entities from a corpora of the same domain. Our pipeline consists of a Knowledge Graph (KG) created from the Open Source CORD-19 dataset by fully automating the procedure of information extraction using SciBERT. The best latent entity representations are then found by benchnmarking different KG embedding techniques on the task of link prediction using a Graph Convolution Network Auto Encoder (GCN-AE). We demonstrate the utility of ERLKG with respect to COVID-19 through multiple qualitative evaluations. Due to the lack of a gold standard, we propose a relatively large intrinsic evaluation dataset for COVID-19 and use it for validating the top two performing KG embedding techniques. We find TransD to be the best performing KG embedding technique with Pearson and Spearman correlation scores of 0.4348 and 0.4570 respectively. We demonstrate that a considerable number of ERLKG’s top protein, chemical and disease predictions are currently in consideration for COVID-19 related research.</abstract>
      <url hash="a7ae7621">2020.sdp-1.15</url>
      <doi>10.18653/v1/2020.sdp-1.15</doi>
      <video href="https://slideslive.com/38940725"/>
      <bibkey>basu-etal-2020-erlkg</bibkey>
      <pwccode url="https://github.com/sayantanbasu05/ERKLG" additional="false">sayantanbasu05/ERKLG</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/bc5cdr">BC5CDR</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/cord-19">CORD-19</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/ncbi-disease-1">NCBI Disease</pwcdataset>
    </paper>
    <paper id="16">
      <title>Towards Grounding of Formulae</title>
      <author><first>Takuto</first><last>Asakura</last></author>
      <author><first>André</first><last>Greiner-Petter</last></author>
      <author><first>Akiko</first><last>Aizawa</last></author>
      <author><first>Yusuke</first><last>Miyao</last></author>
      <pages>138–147</pages>
      <abstract>A large amount of scientific knowledge is represented within mixed forms of natural language texts and mathematical formulae. Therefore, a collaboration of natural language processing and formula analyses, so-called mathematical language processing, is necessary to enable computers to understand and retrieve information from the documents. However, as we will show in this project, a mathematical notation can change its meaning even within the scope of a single paragraph. This flexibility makes it difficult to extract the exact meaning of a mathematical formula. In this project, we will propose a new task direction for grounding mathematical formulae. Particularly, we are addressing the widespread misconception of various research projects in mathematical information retrieval, which presume that mathematical notations have a fixed meaning within a single document. We manually annotated a long scientific paper to illustrate the task concept. Our high inter-annotator agreement shows that the task is well understood for humans. Our results indicate that it is worthwhile to grow the techniques for the proposed task to contribute to the further progress of mathematical language processing.</abstract>
      <url hash="b7dab06f">2020.sdp-1.16</url>
      <doi>10.18653/v1/2020.sdp-1.16</doi>
      <video href="https://slideslive.com/38940733"/>
      <bibkey>asakura-etal-2020-towards</bibkey>
    </paper>
    <paper id="17">
      <title><fixed-case>SC</fixed-case>hu<fixed-case>BERT</fixed-case>: Scholarly Document Chunks with <fixed-case>BERT</fixed-case>-encoding boost Citation Count Prediction.</title>
      <author><first>Thomas</first><last>van Dongen</last></author>
      <author><first>Gideon</first><last>Maillette de Buy Wenniger</last></author>
      <author><first>Lambert</first><last>Schomaker</last></author>
      <pages>148–157</pages>
      <abstract>Predicting the number of citations of scholarly documents is an upcoming task in scholarly document processing. Besides the intrinsic merit of this information, it also has a wider use as an imperfect proxy for quality which has the advantage of being cheaply available for large volumes of scholarly documents. Previous work has dealt with number of citations prediction with relatively small training data sets, or larger datasets but with short, incomplete input text. In this work we leverage the open access ACL Anthology collection in combination with the Semantic Scholar bibliometric database to create a large corpus of scholarly documents with associated citation information and we propose a new citation prediction model called SChuBERT. In our experiments we compare SChuBERT with several state-of-the-art citation prediction models and show that it outperforms previous methods by a large margin. We also show the merit of using more training data and longer input for number of citations prediction.</abstract>
      <url hash="d3a672e1">2020.sdp-1.17</url>
      <doi>10.18653/v1/2020.sdp-1.17</doi>
      <video href="https://slideslive.com/38940730"/>
      <bibkey>van-dongen-etal-2020-schubert</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/peerread">PeerRead</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/s2orc">S2ORC</pwcdataset>
    </paper>
    <paper id="18">
      <title>Structure-Tags Improve Text Classification for Scholarly Document Quality Prediction</title>
      <author><first>Gideon</first><last>Maillette de Buy Wenniger</last></author>
      <author><first>Thomas</first><last>van Dongen</last></author>
      <author><first>Eleri</first><last>Aedmaa</last></author>
      <author><first>Herbert Teun</first><last>Kruitbosch</last></author>
      <author><first>Edwin A.</first><last>Valentijn</last></author>
      <author><first>Lambert</first><last>Schomaker</last></author>
      <pages>158–167</pages>
      <abstract>Training recurrent neural networks on long texts, in particular scholarly documents, causes problems for learning. While hierarchical attention networks (HANs) are effective in solving these problems, they still lose important information about the structure of the text. To tackle these problems, we propose the use of HANs combined with structure-tags which mark the role of sentences in the document. Adding tags to sentences, marking them as corresponding to title, abstract or main body text, yields improvements over the state-of-the-art for scholarly document quality prediction. The proposed system is applied to the task of accept/reject prediction on the PeerRead dataset and compared against a recent BiLSTM-based model and joint textual+visual model as well as against plain HANs. Compared to plain HANs, accuracy increases on all three domains.On the computation and language domain our new model works best overall, and increases accuracy 4.7% over the best literature result. We also obtain improvements when introducing the tags for prediction of the number of citations for 88k scientific publications that we compiled from the Allen AI S2ORC dataset. For our HAN-system with structure-tags we reach 28.5% explained variance, an improvement of 1.8% over our reimplementation of the BiLSTM-based model as well as 1.0% improvement over plain HANs.</abstract>
      <url hash="319c81b4">2020.sdp-1.18</url>
      <attachment type="OptionalSupplementaryMaterial" hash="f3ea3b53">2020.sdp-1.18.OptionalSupplementaryMaterial.zip</attachment>
      <doi>10.18653/v1/2020.sdp-1.18</doi>
      <video href="https://slideslive.com/38940732"/>
      <bibkey>maillette-de-buy-wenniger-etal-2020-structure</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/peerread">PeerRead</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/s2orc">S2ORC</pwcdataset>
    </paper>
    <paper id="19">
      <title>Cydex: Neural Search Infrastructure for the Scholarly Literature</title>
      <author><first>Shane</first><last>Ding</last></author>
      <author><first>Edwin</first><last>Zhang</last></author>
      <author><first>Jimmy</first><last>Lin</last></author>
      <pages>168–173</pages>
      <abstract>Cydex is a platform that provides neural search infrastructure for domain-specific scholarly literature. The platform represents an abstraction of Covidex, our recently developed full-stack open-source search engine for the COVID-19 Open Research Dataset (CORD-19) from AI2. While Covidex takes advantage of the latest best practices for keyword search using the popular Lucene search library as well as state-of-the-art neural ranking models using T5, parts of the system were hard coded to only work with CORD-19. This paper describes our efforts to generalize Covidex into Cydex, which can be applied to scholarly literature in different domains. By decoupling corpus-specific configurations from the frontend implementation, we are able to demonstrate the generality of Cydex on two very different corpora: the ACL Anthology and a collection of hydrology abstracts. Our platform is entirely open source and available at cydex.ai.</abstract>
      <url hash="c028a913">2020.sdp-1.19</url>
      <doi>10.18653/v1/2020.sdp-1.19</doi>
      <video href="https://slideslive.com/38940734"/>
      <bibkey>ding-etal-2020-cydex</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/cord-19">CORD-19</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/trec-covid">TREC-COVID</pwcdataset>
    </paper>
    <paper id="20">
      <title>On the Use of Web Search to Improve Scientific Collections</title>
      <author><first>Krutarth</first><last>Patel</last></author>
      <author><first>Cornelia</first><last>Caragea</last></author>
      <author><first>Sujatha Das</first><last>Gollapalli</last></author>
      <pages>174–183</pages>
      <abstract>Despite the advancements in search engine features, ranking methods, technologies, and the availability of programmable APIs, current-day open-access digital libraries still rely on crawl-based approaches for acquiring their underlying document collections. In this paper, we propose a novel search-driven framework for acquiring documents for such scientific portals. Within our framework, publicly-available research paper titles and author names are used as queries to a Web search engine. We were able to obtain ~267,000 unique research papers through our fully-automated framework using ~76,000 queries, resulting in almost 200,000 more papers than the number of queries. Moreover, through a combination of title and author name search, we were able to recover 78% of the original searched titles.</abstract>
      <url hash="6f0e74f8">2020.sdp-1.20</url>
      <doi>10.18653/v1/2020.sdp-1.20</doi>
      <video href="https://slideslive.com/38940728"/>
      <bibkey>patel-etal-2020-use</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/dblp">DBLP</pwcdataset>
    </paper>
    <paper id="21">
      <title>Scaling Systematic Literature Reviews with Machine Learning Pipelines</title>
      <author><first>Seraphina</first><last>Goldfarb-Tarrant</last></author>
      <author><first>Alexander</first><last>Robertson</last></author>
      <author><first>Jasmina</first><last>Lazic</last></author>
      <author><first>Theodora</first><last>Tsouloufi</last></author>
      <author><first>Louise</first><last>Donnison</last></author>
      <author><first>Karen</first><last>Smyth</last></author>
      <pages>184–195</pages>
      <abstract>Systematic reviews, which entail the extraction of data from large numbers of scientific documents, are an ideal avenue for the application of machine learning. They are vital to many fields of science and philanthropy, but are very time-consuming and require experts. Yet the three main stages of a systematic review are easily done automatically: searching for documents can be done via APIs and scrapers, selection of relevant documents can be done via binary classification, and extraction of data can be done via sequence-labelling classification. Despite the promise of automation for this field, little research exists that examines the various ways to automate each of these tasks. We construct a pipeline that automates each of these aspects, and experiment with many human-time vs. system quality trade-offs. We test the ability of classifiers to work well on small amounts of data and to generalise to data from countries not represented in the training data. We test different types of data extraction with varying difficulty in annotation, and five different neural architectures to do the extraction. We find that we can get surprising accuracy and generalisability of the whole pipeline system with only 2 weeks of human-expert annotation, which is only 15% of the time it takes to do the whole review manually and can be repeated and extended to new data with no additional effort.</abstract>
      <url hash="2240aaf3">2020.sdp-1.21</url>
      <doi>10.18653/v1/2020.sdp-1.21</doi>
      <bibkey>goldfarb-tarrant-etal-2020-scaling</bibkey>
      <pwccode url="https://github.com/seraphinatarrant/systematic_reviews" additional="false">seraphinatarrant/systematic_reviews</pwccode>
    </paper>
    <paper id="22">
      <title>Document-Level Definition Detection in Scholarly Documents: Existing Models, Error Analyses, and Future Directions</title>
      <author><first>Dongyeop</first><last>Kang</last></author>
      <author><first>Andrew</first><last>Head</last></author>
      <author><first>Risham</first><last>Sidhu</last></author>
      <author><first>Kyle</first><last>Lo</last></author>
      <author><first>Daniel</first><last>Weld</last></author>
      <author><first>Marti A.</first><last>Hearst</last></author>
      <pages>196–206</pages>
      <abstract>The task of definition detection is important for scholarly papers, because papers often make use of technical terminology that may be unfamiliar to readers. Despite prior work on definition detection, current approaches are far from being accurate enough to use in realworld applications. In this paper, we first perform in-depth error analysis of the current best performing definition detection system and discover major causes of errors. Based on this analysis, we develop a new definition detection system, HEDDEx, that utilizes syntactic features, transformer encoders, and heuristic filters, and evaluate it on a standard sentence-level benchmark. Because current benchmarks evaluate randomly sampled sentences, we propose an alternative evaluation that assesses every sentence within a document. This allows for evaluating recall in addition to precision. HEDDEx outperforms the leading system on both the sentence-level and the document-level tasks, by 12.7 F1 points and 14.4 F1 points, respectively. We note that performance on the high-recall document-level task is much lower than in the standard evaluation approach, due to the necessity of incorporation of document structure as features. We discuss remaining challenges in document-level definition detection, ideas for improvements, and potential issues for the development of reading aid applications.</abstract>
      <url hash="f37ba031">2020.sdp-1.22</url>
      <attachment type="OptionalSupplementaryMaterial" hash="00000000">2020.sdp-1.22.OptionalSupplementaryMaterial.zip</attachment>
      <doi>10.18653/v1/2020.sdp-1.22</doi>
      <video href="https://slideslive.com/38940724"/>
      <bibkey>kang-etal-2020-document</bibkey>
      <pwccode url="https://github.com/allenai/scholarphi" additional="false">allenai/scholarphi</pwccode>
    </paper>
    <paper id="23">
      <title>A New Neural Search and Insights Platform for Navigating and Organizing <fixed-case>AI</fixed-case> Research</title>
      <author><first>Marzieh</first><last>Fadaee</last></author>
      <author><first>Olga</first><last>Gureenkova</last></author>
      <author><first>Fernando</first><last>Rejon Barrera</last></author>
      <author><first>Carsten</first><last>Schnober</last></author>
      <author><first>Wouter</first><last>Weerkamp</last></author>
      <author><first>Jakub</first><last>Zavrel</last></author>
      <pages>207–213</pages>
      <abstract>To provide AI researchers with modern tools for dealing with the explosive growth of the research literature in their field, we introduce a new platform, AI Research Navigator, that combines classical keyword search with neural retrieval to discover and organize relevant literature. The system provides search at multiple levels of textual granularity, from sentences to aggregations across documents, both in natural language and through navigation in a domain specific Knowledge Graph. We give an overview of the overall architecture of the system and of the components for document analysis, question answering, search, analytics, expert search, and recommendations.</abstract>
      <url hash="23b1319d">2020.sdp-1.23</url>
      <doi>10.18653/v1/2020.sdp-1.23</doi>
      <bibkey>fadaee-etal-2020-new</bibkey>
    </paper>
    <paper id="24">
      <title>Overview and Insights from the Shared Tasks at Scholarly Document Processing 2020: <fixed-case>CL</fixed-case>-<fixed-case>S</fixed-case>ci<fixed-case>S</fixed-case>umm, <fixed-case>L</fixed-case>ay<fixed-case>S</fixed-case>umm and <fixed-case>L</fixed-case>ong<fixed-case>S</fixed-case>umm</title>
      <author><first>Muthu Kumar</first><last>Chandrasekaran</last></author>
      <author><first>Guy</first><last>Feigenblat</last></author>
      <author><first>Eduard</first><last>Hovy</last></author>
      <author><first>Abhilasha</first><last>Ravichander</last></author>
      <author><first>Michal</first><last>Shmueli-Scheuer</last></author>
      <author><first>Anita</first><last>de Waard</last></author>
      <pages>214–224</pages>
      <abstract>We present the results of three Shared Tasks held at the Scholarly Document Processing Workshop at EMNLP2020: CL-SciSumm, LaySumm and LongSumm. We report on each of the tasks, which received 18 submissions in total, with some submissions addressing two or three of the tasks. In summary, the quality and quantity of the submissions show that there is ample interest in scholarly document summarization, and the state of the art in this domain is at a midway point between being an impossible task and one that is fully resolved.</abstract>
      <url hash="30019fc2">2020.sdp-1.24</url>
      <doi>10.18653/v1/2020.sdp-1.24</doi>
      <revision id="1" href="2020.sdp-1.24v1" hash="38d9bf57"/>
      <revision id="2" href="2020.sdp-1.24v2" hash="30019fc2" date="2021-01-01">Added missing reference to DUCS (Chaturvedi et al., 2020).</revision>
      <bibkey>chandrasekaran-etal-2020-overview-insights</bibkey>
    </paper>
    <paper id="25">
      <title><fixed-case>CIST</fixed-case>@<fixed-case>CL</fixed-case>-<fixed-case>S</fixed-case>ci<fixed-case>S</fixed-case>umm 2020, <fixed-case>L</fixed-case>ong<fixed-case>S</fixed-case>umm 2020: Automatic Scientific Document Summarization</title>
      <author><first>Lei</first><last>Li</last></author>
      <author><first>Yang</first><last>Xie</last></author>
      <author><first>Wei</first><last>Liu</last></author>
      <author><first>Yinan</first><last>Liu</last></author>
      <author><first>Yafei</first><last>Jiang</last></author>
      <author><first>Siya</first><last>Qi</last></author>
      <author><first>Xingyuan</first><last>Li</last></author>
      <pages>225–234</pages>
      <abstract>Our system participates in two shared tasks, CL-SciSumm 2020 and LongSumm 2020. In the CL-SciSumm shared task, based on our previous work, we apply more machine learning methods on position features and content features for facet classification in Task1B. And GCN is introduced in Task2 to perform extractive summarization. In the LongSumm shared task, we integrate both the extractive and abstractive summarization ways. Three methods were tested which are T5 Fine-tuning, DPPs Sampling, and GRU-GCN/GAT.</abstract>
      <url hash="5797abf2">2020.sdp-1.25</url>
      <doi>10.18653/v1/2020.sdp-1.25</doi>
      <video href="https://slideslive.com/38940743"/>
      <bibkey>li-etal-2020-cist</bibkey>
    </paper>
    <paper id="26">
      <title><fixed-case>NLP</fixed-case>-<fixed-case>PINGAN</fixed-case>-<fixed-case>TECH</fixed-case> @ <fixed-case>CL</fixed-case>-<fixed-case>S</fixed-case>ci<fixed-case>S</fixed-case>umm 2020</title>
      <author><first>Ling</first><last>Chai</last></author>
      <author><first>Guizhen</first><last>Fu</last></author>
      <author><first>Yuan</first><last>Ni</last></author>
      <pages>235–241</pages>
      <abstract>We focus on systems for TASK1 (TASK 1A and TASK 1B) of CL-SciSumm Shared Task 2020 in this paper. Task 1A is regarded as a binary classification task of sentence pairs. The strategies of domain-specific embedding and special tokens based on language models are proposed. Fusion of contextualized embedding and extra information is further explored in this article. We leverage Sembert to capture the structured semantic information. The joint of BERT-based model and classifiers without neural networks is also exploited. For the Task 1B, a language model with different weights for classes is fine-tuned to accomplish a multi-label classification task. The results show that extra information can improve the identification of cited text spans. The end-to-end trained models outperform models trained with two stages, and the averaged prediction of multi-models is more accurate than an individual one.</abstract>
      <url hash="47945141">2020.sdp-1.26</url>
      <doi>10.18653/v1/2020.sdp-1.26</doi>
      <video href="https://slideslive.com/38941223"/>
      <bibkey>chai-etal-2020-nlp</bibkey>
    </paper>
    <paper id="27">
      <title><fixed-case>IIITBH</fixed-case>-<fixed-case>IITP</fixed-case>@<fixed-case>CL</fixed-case>-<fixed-case>S</fixed-case>ci<fixed-case>S</fixed-case>umm20, <fixed-case>CL</fixed-case>-<fixed-case>L</fixed-case>ay<fixed-case>S</fixed-case>umm20, <fixed-case>L</fixed-case>ong<fixed-case>S</fixed-case>umm20</title>
      <author><first>Saichethan</first><last>Reddy</last></author>
      <author><first>Naveen</first><last>Saini</last></author>
      <author><first>Sriparna</first><last>Saha</last></author>
      <author><first>Pushpak</first><last>Bhattacharyya</last></author>
      <pages>242–250</pages>
      <abstract>In this paper, we present the IIIT Bhagalpur and IIT Patna team’s effort to solve the three shared tasks namely, CL-SciSumm 2020, CL-LaySumm 2020, LongSumm 2020 at SDP 2020. The theme of these tasks is to generate medium-scale, lay and long summaries, respectively, for scientific articles. For the first two tasks, unsupervised systems are developed, while for the third one, we develop a supervised system.The performances of all the systems were evaluated on the associated datasets with the shared tasks in term of well-known ROUGE metric.</abstract>
      <url hash="99701ac1">2020.sdp-1.27</url>
      <doi>10.18653/v1/2020.sdp-1.27</doi>
      <bibkey>reddy-etal-2020-iiitbh</bibkey>
    </paper>
    <paper id="28">
      <title><fixed-case>AUTH</fixed-case> @ <fixed-case>CLS</fixed-case>ci<fixed-case>S</fixed-case>umm 20, <fixed-case>L</fixed-case>ay<fixed-case>S</fixed-case>umm 20, <fixed-case>L</fixed-case>ong<fixed-case>S</fixed-case>umm 20</title>
      <author><first>Alexios</first><last>Gidiotis</last></author>
      <author><first>Stefanos</first><last>Stefanidis</last></author>
      <author><first>Grigorios</first><last>Tsoumakas</last></author>
      <pages>251–260</pages>
      <abstract>We present the systems we submitted for the shared tasks of the Workshop on Scholarly Document Processing at EMNLP 2020. Our approaches to the tasks are focused on exploiting large Transformer models pre-trained on huge corpora and adapting them to the different shared tasks. For tasks 1A and 1B of CL-SciSumm we are using different variants of the BERT model to tackle the tasks of “cited text span” and “facet” identification. For the summarization tasks 2 of CL-SciSumm, LaySumm and LongSumm we make use of different variants of the PEGASUS model, with and without fine-tuning, adapted to the nuances of each one of those particular tasks.</abstract>
      <url hash="718213da">2020.sdp-1.28</url>
      <doi>10.18653/v1/2020.sdp-1.28</doi>
      <video href="https://slideslive.com/38941222"/>
      <bibkey>gidiotis-etal-2020-auth</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/scisummnet">ScisummNet</pwcdataset>
    </paper>
    <paper id="29">
      <title><fixed-case>U</fixed-case>ni<fixed-case>HD</fixed-case>@<fixed-case>CL</fixed-case>-<fixed-case>S</fixed-case>ci<fixed-case>S</fixed-case>umm 2020: Citation Extraction as Search</title>
      <author><first>Dennis</first><last>Aumiller</last></author>
      <author><first>Satya</first><last>Almasian</last></author>
      <author><first>Philip</first><last>Hausner</last></author>
      <author><first>Michael</first><last>Gertz</last></author>
      <pages>261–269</pages>
      <abstract>This work presents the entry by the team from Heidelberg University in the CL-SciSumm 2020 shared task at the Scholarly Document Processing workshop at EMNLP 2020. As in its previous iterations, the task is to highlight relevant parts in a reference paper, depending on a citance text excerpt from a citing paper. We participated in tasks 1A (citation identification) and 1B (citation context classification). Contrary to most previous works, we frame Task 1A as a search relevance problem, and introduce a 2-step re-ranking approach, which consists of a preselection based on BM25 in addition to positional document features, and a top-k re-ranking with BERT. For Task 1B, we follow previous submissions in applying methods that deal well with low resources and imbalanced classes.</abstract>
      <url hash="5c039a1b">2020.sdp-1.29</url>
      <doi>10.18653/v1/2020.sdp-1.29</doi>
      <video href="https://slideslive.com/38941224"/>
      <bibkey>aumiller-etal-2020-unihd</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/scisummnet">ScisummNet</pwcdataset>
    </paper>
    <paper id="30">
      <title><fixed-case>IITP</fixed-case>-<fixed-case>AI</fixed-case>-<fixed-case>NLP</fixed-case>-<fixed-case>ML</fixed-case>@ <fixed-case>CL</fixed-case>-<fixed-case>S</fixed-case>ci<fixed-case>S</fixed-case>umm 2020, <fixed-case>CL</fixed-case>-<fixed-case>L</fixed-case>ay<fixed-case>S</fixed-case>umm 2020, <fixed-case>L</fixed-case>ong<fixed-case>S</fixed-case>umm 2020</title>
      <author><first>Santosh Kumar</first><last>Mishra</last></author>
      <author><first>Harshavardhan</first><last>Kundarapu</last></author>
      <author><first>Naveen</first><last>Saini</last></author>
      <author><first>Sriparna</first><last>Saha</last></author>
      <author><first>Pushpak</first><last>Bhattacharyya</last></author>
      <pages>270–276</pages>
      <abstract>The publication rate of scientific literature increases rapidly, which poses a challenge for researchers to keep themselves updated with new state-of-the-art. Scientific document summarization solves this problem by summarizing the essential fact and findings of the document. In the current paper, we present the participation of IITP-AI-NLP-ML team in three shared tasks, namely, CL-SciSumm 2020, LaySumm 2020, LongSumm 2020, which aims to generate medium, lay, and long summaries of the scientific articles, respectively. To solve CL-SciSumm 2020 and LongSumm 2020 tasks, three well-known clustering techniques are used, and then various sentence scoring functions, including textual entailment, are used to extract the sentences from each cluster for a summary generation. For LaySumm 2020, an encoder-decoder based deep learning model has been utilized. Performances of our developed systems are evaluated in terms of ROUGE measures on the associated datasets with the shared task.</abstract>
      <url hash="9e28cc83">2020.sdp-1.30</url>
      <doi>10.18653/v1/2020.sdp-1.30</doi>
      <bibkey>mishra-etal-2020-iitp</bibkey>
    </paper>
    <paper id="31">
      <title>1<fixed-case>A</fixed-case>-Team / <fixed-case>M</fixed-case>artin-Luther-Universität Halle-Wittenberg@<fixed-case>CLS</fixed-case>ci<fixed-case>S</fixed-case>umm 20</title>
      <author><first>Artur</first><last>Jurk</last></author>
      <author><first>Maik</first><last>Boltze</last></author>
      <author><first>Georg</first><last>Keller</last></author>
      <author><first>Lorna</first><last>Ulbrich</last></author>
      <author><first>Anja</first><last>Fischer</last></author>
      <pages>277–281</pages>
      <abstract>This document demonstrates our groups approach to the CL-SciSumm shared task 2020. There are three tasks in CL-SciSumm 2020. In Task 1a, we apply a Siamese neural network to identify the spans of text in the reference paper best reflecting a citation. In Task 1b, we use a SVM to classify the facet of a citation.</abstract>
      <url hash="e5d4e563">2020.sdp-1.31</url>
      <doi>10.18653/v1/2020.sdp-1.31</doi>
      <bibkey>jurk-etal-2020-1a</bibkey>
    </paper>
    <paper id="32">
      <title>Team <fixed-case>MLU</fixed-case>@<fixed-case>CL</fixed-case>-<fixed-case>S</fixed-case>ci<fixed-case>S</fixed-case>umm20: Methods for Computational Linguistics Scientific Citation Linkage</title>
      <author><first>Rong</first><last>Huang</last></author>
      <author><first>Kseniia</first><last>Krylova</last></author>
      <pages>282–287</pages>
      <abstract>This paper describes our approach to the CL-SciSumm 2020 shared task toward the problem of identifying reference span of the citing article in the referred article. In Task 1a, we apply and compare different methods in combination with similarity scores to identify spans of the reference text for the given citance. In Task 1b, we use a logistic regression to classifying the discourse facets.</abstract>
      <url hash="717d0e75">2020.sdp-1.32</url>
      <doi>10.18653/v1/2020.sdp-1.32</doi>
      <bibkey>huang-krylova-2020-team</bibkey>
    </paper>
    <paper id="33">
      <title><fixed-case>IR</fixed-case>&amp;<fixed-case>TM</fixed-case>-<fixed-case>NJUST</fixed-case>@<fixed-case>CLS</fixed-case>ci<fixed-case>S</fixed-case>umm 20</title>
      <author><first>Heng</first><last>Zhang</last></author>
      <author><first>Lifan</first><last>Liu</last></author>
      <author><first>Ruping</first><last>Wang</last></author>
      <author><first>Shaohu</first><last>Hu</last></author>
      <author><first>Shutian</first><last>Ma</last></author>
      <author><first>Chengzhi</first><last>Zhang</last></author>
      <pages>288–296</pages>
      <abstract>This paper mainly introduces our methods for Task 1A and Task 1B of CL-SciSumm 2020. Task 1A is to identify reference text in reference paper. Traditional machine learning models and MLP model are used. We evaluate the performances of these models and submit the final results from the optimal model. Compared with previous work, we optimize the ratio of positive to negative examples after data sampling. In order to construct features for classification, we calculate similarities between reference text and candidate sentences based on sentence vectors. Accordingly, nine similarities are used, of which eight are chosen from what we used in CL-SciSumm 2019 and a new sentence similarity based on fastText is added. Task 1B is to classify the facets of reference text. Unlike the methods used in CL-SciSumm 2019, we construct inputs of models based on word vectors and add deep learning models for classification this year.</abstract>
      <url hash="fc56da4e">2020.sdp-1.33</url>
      <doi>10.18653/v1/2020.sdp-1.33</doi>
      <bibkey>zhang-etal-2020-ir</bibkey>
    </paper>
    <paper id="34">
      <title><fixed-case>C</fixed-case>ite<fixed-case>QA</fixed-case>@<fixed-case>CLS</fixed-case>ci<fixed-case>S</fixed-case>umm 2020</title>
      <author><first>Anjana</first><last>Umapathy</last></author>
      <author><first>Karthik</first><last>Radhakrishnan</last></author>
      <author><first>Kinjal</first><last>Jain</last></author>
      <author><first>Rahul</first><last>Singh</last></author>
      <pages>297–302</pages>
      <abstract>In academic publications, citations are used to build context for a concept by highlighting relevant aspects from reference papers. Automatically identifying referenced snippets can help researchers swiftly isolate principal contributions of scientific works. In this paper, we exploit the underlying structure of scientific articles to predict reference paper spans and facets corresponding to a citation. We propose two methods to detect citation spans - keyphrase overlap, BERT along with structural priors. We fine-tune FastText embeddings and leverage textual, positional features to predict citation facets.</abstract>
      <url hash="e296e49c">2020.sdp-1.34</url>
      <doi>10.18653/v1/2020.sdp-1.34</doi>
      <video href="https://slideslive.com/38941225"/>
      <bibkey>umapathy-etal-2020-citeqa</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/scisummnet">ScisummNet</pwcdataset>
    </paper>
    <paper id="35">
      <title>Dimsum @<fixed-case>L</fixed-case>ay<fixed-case>S</fixed-case>umm 20</title>
      <author><first>Tiezheng</first><last>Yu</last></author>
      <author><first>Dan</first><last>Su</last></author>
      <author><first>Wenliang</first><last>Dai</last></author>
      <author><first>Pascale</first><last>Fung</last></author>
      <pages>303–309</pages>
      <abstract>Lay summarization aims to generate lay summaries of scientific papers automatically. It is an essential task that can increase the relevance of science for all of society. In this paper, we build a lay summary generation system based on BART model. We leverage sentence labels as extra supervision signals to improve the performance of lay summarization. In the CL-LaySumm 2020 shared task, our model achieves 46.00 Rouge1-F1 score.</abstract>
      <url hash="3542f837">2020.sdp-1.35</url>
      <doi>10.18653/v1/2020.sdp-1.35</doi>
      <video href="https://slideslive.com/38940741"/>
      <bibkey>yu-etal-2020-dimsum</bibkey>
      <pwccode url="https://github.com/TysonYu/Laysumm" additional="false">TysonYu/Laysumm</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/scisummnet">ScisummNet</pwcdataset>
    </paper>
    <paper id="36">
      <title><fixed-case>ARTU</fixed-case> / <fixed-case>TU</fixed-case> <fixed-case>W</fixed-case>ien and Artificial Researcher@ <fixed-case>L</fixed-case>ong<fixed-case>S</fixed-case>umm 20</title>
      <author><first>Alaa</first><last>El-Ebshihy</last></author>
      <author><first>Annisa Maulida</first><last>Ningtyas</last></author>
      <author><first>Linda</first><last>Andersson</last></author>
      <author><first>Florina</first><last>Piroi</last></author>
      <author><first>Andreas</first><last>Rauber</last></author>
      <pages>310–317</pages>
      <abstract>In this paper, we present our approach to solve the LongSumm 2020 Shared Task, at the 1st Workshop on Scholarly Document Processing. The objective of the long summaries task is to generate long summaries that cover salient information in scientific articles. The task is to generate abstractive and extractive summaries of a given scientific article. In the proposed approach, we are inspired by the concept of Argumentative Zoning (AZ) that de- fines the main rhetorical structure in scientific articles. We define two aspects that should be covered in scientific paper summary, namely Claim/Method and Conclusion/Result aspects. We use Solr index to expand the sentences of the paper abstract. We formulate each abstract sentence in a given publication as query to retrieve similar sentences from the text body of the document itself. We utilize a sentence selection algorithm described in previous literature to select sentences for the final summary that covers the two aforementioned aspects.</abstract>
      <url hash="1b9d1bba">2020.sdp-1.36</url>
      <doi>10.18653/v1/2020.sdp-1.36</doi>
      <bibkey>el-ebshihy-etal-2020-artu</bibkey>
    </paper>
    <paper id="37">
      <title>Monash-Summ@<fixed-case>L</fixed-case>ong<fixed-case>S</fixed-case>umm 20 <fixed-case>S</fixed-case>ci<fixed-case>S</fixed-case>umm<fixed-case>P</fixed-case>ip: An Unsupervised Scientific Paper Summarization Pipeline</title>
      <author><first>Jiaxin</first><last>Ju</last></author>
      <author><first>Ming</first><last>Liu</last></author>
      <author><first>Longxiang</first><last>Gao</last></author>
      <author><first>Shirui</first><last>Pan</last></author>
      <pages>318–327</pages>
      <abstract>The Scholarly Document Processing (SDP) workshop is to encourage more efforts on natural language understanding of scientific task. It contains three shared tasks and we participate in the LongSumm shared task. In this paper, we describe our text summarization system, SciSummPip, inspired by SummPip (Zhao et al., 2020) that is an unsupervised text summarization system for multi-document in News domain. Our SciSummPip includes a transformer-based language model SciBERT (Beltagy et al., 2019) for contextual sentence representation, content selection with PageRank (Page et al., 1999), sentence graph construction with both deep and linguistic information, sentence graph clustering and within-graph summary generation. Our work differs from previous method in that content selection and a summary length constraint is applied to adapt to the scientific domain. The experiment results on both training dataset and blind test dataset show the effectiveness of our method, and we empirically verify the robustness of modules used in SciSummPip with BERTScore (Zhang et al., 2019a).</abstract>
      <url hash="448e7dde">2020.sdp-1.37</url>
      <doi>10.18653/v1/2020.sdp-1.37</doi>
      <bibkey>ju-etal-2020-monash</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/talksumm">TalkSumm</pwcdataset>
    </paper>
    <paper id="38">
      <title>Using Pre-Trained Transformer for Better Lay Summarization</title>
      <author><first>Seungwon</first><last>Kim</last></author>
      <pages>328–335</pages>
      <abstract>In this paper, we tack lay summarization tasks, which aim to automatically produce lay summaries for scientific papers, to participate in the first CL-LaySumm 2020 in SDP workshop at EMNLP 2020. We present our approach of using Pre-training with Extracted Gap-sentences for Abstractive Summarization (PEGASUS; Zhang et al., 2019b) to produce the lay summary and combining those with the extractive summarization model using Bidirectional Encoder Representations from Transformers (BERT; Devlin et al., 2018) and readability metrics that measure the readability of the sentence to further improve the quality of the summary. Our model achieves a remarkable performance on ROUGE metrics, demonstrating the produced summary is more readable while it summarizes the main points of the document.</abstract>
      <url hash="c351b158">2020.sdp-1.38</url>
      <doi>10.18653/v1/2020.sdp-1.38</doi>
      <video href="https://slideslive.com/38940740"/>
      <bibkey>kim-2020-using</bibkey>
    </paper>
    <paper id="39">
      <title>Summaformers @ <fixed-case>L</fixed-case>ay<fixed-case>S</fixed-case>umm 20, <fixed-case>L</fixed-case>ong<fixed-case>S</fixed-case>umm 20</title>
      <author><first>Sayar</first><last>Ghosh Roy</last></author>
      <author><first>Nikhil</first><last>Pinnaparaju</last></author>
      <author><first>Risubh</first><last>Jain</last></author>
      <author><first>Manish</first><last>Gupta</last></author>
      <author><first>Vasudeva</first><last>Varma</last></author>
      <pages>336–343</pages>
      <abstract>Automatic text summarization has been widely studied as an important task in natural language processing. Traditionally, various feature engineering and machine learning based systems have been proposed for extractive as well as abstractive text summarization. Recently, deep learning based, specifically Transformer-based systems have been immensely popular. Summarization is a cognitively challenging task – extracting summary worthy sentences is laborious, and expressing semantics in brief when doing abstractive summarization is complicated. In this paper, we specifically look at the problem of summarizing scientific research papers from multiple domains. We differentiate between two types of summaries, namely, (a) LaySumm: A very short summary that captures the essence of the research paper in layman terms restricting overtly specific technical jargon and (b) LongSumm: A much longer detailed summary aimed at providing specific insights into various ideas touched upon in the paper. While leveraging latest Transformer-based models, our systems are simple, intuitive and based on how specific paper sections contribute to human summaries of the two types described above. Evaluations against gold standard summaries using ROUGE metrics prove the effectiveness of our approach. On blind test corpora, our system ranks first and third for the LongSumm and LaySumm tasks respectively.</abstract>
      <url hash="faa24c2a">2020.sdp-1.39</url>
      <doi>10.18653/v1/2020.sdp-1.39</doi>
      <bibkey>ghosh-roy-etal-2020-summaformers</bibkey>
      <pwccode url="https://github.com/sayarghoshroy/Summaformers" additional="false">sayarghoshroy/Summaformers</pwccode>
    </paper>
    <paper id="40">
      <title>Divide and Conquer: From Complexity to Simplicity for Lay Summarization</title>
      <author><first>Rochana</first><last>Chaturvedi</last></author>
      <author><first>Saachi</first><last>.</last></author>
      <author><first>Jaspreet Singh</first><last>Dhani</last></author>
      <author><first>Anurag</first><last>Joshi</last></author>
      <author><first>Ankush</first><last>Khanna</last></author>
      <author><first>Neha</first><last>Tomar</last></author>
      <author><first>Swagata</first><last>Duari</last></author>
      <author><first>Alka</first><last>Khurana</last></author>
      <author><first>Vasudha</first><last>Bhatnagar</last></author>
      <pages>344–355</pages>
      <abstract>We describe our approach for the 1st Computational Linguistics Lay Summary Shared Task CL-LaySumm20. The task is to produce non-technical summaries of scholarly documents. The summary should be within easy grasp of a layman who may not be well versed with the domain of the research article. We propose a two step divide-and-conquer approach. First, we judiciously select segments of the documents that are not overly pedantic and are likely to be of interest to the laity, and over-extract sentences from each segment using an unsupervised network based method. Next, we perform abstractive summarization on these extractions and systematically merge the abstractions. We run ablation studies to establish that each step in our pipeline is critical for improvement in the quality of lay summary. Our approach leverages state-of-the-art pre-trained deep neural network based models as zero-shot learners to achieve high scores on the task.</abstract>
      <url hash="d1fa233a">2020.sdp-1.40</url>
      <attachment type="OptionalSupplementaryMaterial" hash="b1c1bf76">2020.sdp-1.40.OptionalSupplementaryMaterial.zip</attachment>
      <doi>10.18653/v1/2020.sdp-1.40</doi>
      <bibkey>chaturvedi-etal-2020-divide</bibkey>
      <pwccode url="https://github.com/anuragjoshi3519/laysumm20" additional="false">anuragjoshi3519/laysumm20</pwccode>
    </paper>
    <paper id="41">
      <title><fixed-case>GUIR</fixed-case> @ <fixed-case>L</fixed-case>ong<fixed-case>S</fixed-case>umm 2020: Learning to Generate Long Summaries from Scientific Documents</title>
      <author><first>Sajad</first><last>Sotudeh Gharebagh</last></author>
      <author><first>Arman</first><last>Cohan</last></author>
      <author><first>Nazli</first><last>Goharian</last></author>
      <pages>356–361</pages>
      <abstract>This paper presents our methods for the LongSumm 2020: Shared Task on Generating Long Summaries for Scientific Documents, where the task is to generatelong summaries given a set of scientific papers provided by the organizers. We explore 3 main approaches for this task: 1. An extractive approach using a BERT-based summarization model; 2. A two stage model that additionally includes an abstraction step using BART; and 3. A new multi-tasking approach on incorporating document structure into the summarizer. We found that our new multi-tasking approach outperforms the two other methods by large margins. Among 9 participants in the shared task, our best model ranks top according to Rouge-1 score (53.11%) while staying competitive in terms of Rouge-2.</abstract>
      <url hash="038cd276">2020.sdp-1.41</url>
      <doi>10.18653/v1/2020.sdp-1.41</doi>
      <video href="https://slideslive.com/38940737"/>
      <bibkey>sotudeh-gharebagh-etal-2020-guir</bibkey>
    </paper>
  </volume>
</collection>
