<?xml version='1.0' encoding='UTF-8'?>
<collection id="2022.spnlp">
  <volume id="1" ingest-date="2022-05-15">
    <meta>
      <booktitle>Proceedings of the Sixth Workshop on Structured Prediction for NLP</booktitle>
      <editor><first>Andreas</first><last>Vlachos</last></editor>
      <editor><first>Priyanka</first><last>Agrawal</last></editor>
      <editor><first>André</first><last>Martins</last></editor>
      <editor><first>Gerasimos</first><last>Lampouras</last></editor>
      <editor><first>Chunchuan</first><last>Lyu</last></editor>
      <publisher>Association for Computational Linguistics</publisher>
      <address>Dublin, Ireland</address>
      <month>May</month>
      <year>2022</year>
      <url hash="c8707030">2022.spnlp-1</url>
      <venue>spnlp</venue>
    </meta>
    <frontmatter>
      <url hash="65bbd652">2022.spnlp-1.0</url>
      <bibkey>spnlp-2022-structured</bibkey>
    </frontmatter>
    <paper id="1">
      <title>Multilingual Syntax-aware Language Modeling through Dependency Tree Conversion</title>
      <author><first>Shunsuke</first><last>Kando</last></author>
      <author><first>Hiroshi</first><last>Noji</last></author>
      <author><first>Yusuke</first><last>Miyao</last></author>
      <pages>1-10</pages>
      <abstract>Incorporating stronger syntactic biases into neural language models (LMs) is a long-standing goal, but research in this area often focuses on modeling English text, where constituent treebanks are readily available. Extending constituent tree-based LMs to the multilingual setting, where dependency treebanks are more common, is possible via dependency-to-constituency conversion methods. However, this raises the question of which tree formats are best for learning the model, and for which languages. We investigate this question by training recurrent neural network grammars (RNNGs) using various conversion methods, and evaluating them empirically in a multilingual setting. We examine the effect on LM performance across nine conversion methods and five languages through seven types of syntactic tests. On average, the performance of our best model represents a 19 % increase in accuracy over the worst choice across all languages. Our best model shows the advantage over sequential/overparameterized LMs, suggesting the positive effect of syntax injection in a multilingual setting. Our experiments highlight the importance of choosing the right tree formalism, and provide insights into making an informed decision.</abstract>
      <url hash="27e42a42">2022.spnlp-1.1</url>
      <bibkey>kando-etal-2022-multilingual</bibkey>
      <doi>10.18653/v1/2022.spnlp-1.1</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/clams">CLAMS</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/universal-dependencies">Universal Dependencies</pwcdataset>
    </paper>
    <paper id="2">
      <title>Joint Entity and Relation Extraction Based on Table Labeling Using Convolutional Neural Networks</title>
      <author><first>Youmi</first><last>Ma</last></author>
      <author><first>Tatsuya</first><last>Hiraoka</last></author>
      <author><first>Naoaki</first><last>Okazaki</last></author>
      <pages>11-21</pages>
      <abstract>This study introduces a novel approach to the joint extraction of entities and relations by stacking convolutional neural networks (CNNs) on pretrained language models. We adopt table representations to model the entities and relations, casting the entity and relation extraction as a table-labeling problem. Regarding each table as an image and each cell in a table as an image pixel, we apply two-dimensional CNNs to the tables to capture local dependencies and predict the cell labels. The experimental results showed that the performance of the proposed method is comparable to those of current state-of-art systems on the CoNLL04, ACE05, and ADE datasets.Even when freezing pretrained language model parameters, the proposed method showed a stable performance, whereas the compared methods suffered from significant decreases in performance. This observation indicates that the parameters of the pretrained encoder may incorporate dependencies among the entity and relation labels during fine-tuning.</abstract>
      <url hash="6949900b">2022.spnlp-1.2</url>
      <bibkey>ma-etal-2022-joint</bibkey>
      <doi>10.18653/v1/2022.spnlp-1.2</doi>
      <video href="2022.spnlp-1.2.mp4"/>
      <pwccode url="https://github.com/youmima/tablert-cnn" additional="false">youmima/tablert-cnn</pwccode>
    </paper>
    <paper id="3">
      <title><fixed-case>T</fixed-case>emp<fixed-case>C</fixed-case>aps: A Capsule Network-based Embedding Model for Temporal Knowledge Graph Completion</title>
      <author><first>Guirong</first><last>Fu</last></author>
      <author><first>Zhao</first><last>Meng</last></author>
      <author><first>Zhen</first><last>Han</last></author>
      <author><first>Zifeng</first><last>Ding</last></author>
      <author><first>Yunpu</first><last>Ma</last></author>
      <author><first>Matthias</first><last>Schubert</last></author>
      <author><first>Volker</first><last>Tresp</last></author>
      <author><first>Roger</first><last>Wattenhofer</last></author>
      <pages>22-31</pages>
      <abstract>Temporal knowledge graphs store the dynamics of entities and relations during a time period. However, typical temporal knowledge graphs often suffer from incomplete dynamics with missing facts in real-world scenarios. Hence, modeling temporal knowledge graphs to complete the missing facts is important. In this paper, we tackle the temporal knowledge graph completion task by proposing <b>TempCaps</b>, which is a <b>Caps</b>ule network-based embedding model for <b>Temp</b>oral knowledge graph completion. TempCaps models temporal knowledge graphs by introducing a novel dynamic routing aggregator inspired by Capsule Networks. Specifically, TempCaps builds entity embeddings by dynamically routing retrieved temporal relation and neighbor information. Experimental results demonstrate that TempCaps reaches state-of-the-art performance for temporal knowledge graph completion. Additional analysis also shows that TempCaps is efficient.</abstract>
      <url hash="ac76f2b8">2022.spnlp-1.3</url>
      <bibkey>fu-etal-2022-tempcaps</bibkey>
      <doi>10.18653/v1/2022.spnlp-1.3</doi>
      <pwccode url="https://github.com/fuguigui/tempcaps" additional="false">fuguigui/tempcaps</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/icews">ICEWS</pwcdataset>
    </paper>
    <paper id="4">
      <title><fixed-case>S</fixed-case>lot<fixed-case>GAN</fixed-case>: Detecting Mentions in Text via Adversarial Distant Learning</title>
      <author><first>Daniel</first><last>Daza</last></author>
      <author><first>Michael</first><last>Cochez</last></author>
      <author><first>Paul</first><last>Groth</last></author>
      <pages>32-39</pages>
      <abstract>We present SlotGAN, a framework for training a mention detection model that only requires unlabeled text and a gazetteer. It consists of a generator trained to extract spans from an input sentence, and a discriminator trained to determine whether a span comes from the generator, or from the gazetteer.We evaluate the method on English newswire data and compare it against supervised, weakly-supervised, and unsupervised methods. We find that the performance of the method is lower than these baselines, because it tends to generate more and longer spans, and in some cases it relies only on capitalization. In other cases, it generates spans that are valid but differ from the benchmark. When evaluated with metrics based on overlap, we find that SlotGAN performs within 95% of the precision of a supervised method, and 84% of its recall. Our results suggest that the model can generate spans that overlap well, but an additional filtering mechanism is required.</abstract>
      <url hash="f1cb76a4">2022.spnlp-1.4</url>
      <bibkey>daza-etal-2022-slotgan</bibkey>
      <doi>10.18653/v1/2022.spnlp-1.4</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/conll-2003">CoNLL-2003</pwcdataset>
    </paper>
    <paper id="5">
      <title>A Joint Learning Approach for Semi-supervised Neural Topic Modeling</title>
      <author><first>Jeffrey</first><last>Chiu</last></author>
      <author><first>Rajat</first><last>Mittal</last></author>
      <author><first>Neehal</first><last>Tumma</last></author>
      <author><first>Abhishek</first><last>Sharma</last></author>
      <author><first>Finale</first><last>Doshi-Velez</last></author>
      <pages>40-51</pages>
      <abstract>Topic models are some of the most popular ways to represent textual data in an interpret-able manner. Recently, advances in deep generative models, specifically auto-encoding variational Bayes (AEVB), have led to the introduction of unsupervised neural topic models, which leverage deep generative models as opposed to traditional statistics-based topic models. We extend upon these neural topic models by introducing the Label-Indexed Neural Topic Model (LI-NTM), which is, to the extent of our knowledge, the first effective upstream semi-supervised neural topic model. We find that LI-NTM outperforms existing neural topic models in document reconstruction benchmarks, with the most notable results in low labeled data regimes and for data-sets with informative labels; furthermore, our jointly learned classifier outperforms baseline classifiers in ablation studies.</abstract>
      <url hash="3aa971bf">2022.spnlp-1.5</url>
      <bibkey>chiu-etal-2022-joint</bibkey>
      <doi>10.18653/v1/2022.spnlp-1.5</doi>
    </paper>
    <paper id="6">
      <title>Neural String Edit Distance</title>
      <author><first>Jindřich</first><last>Libovický</last></author>
      <author><first>Alexander</first><last>Fraser</last></author>
      <pages>52-66</pages>
      <abstract>We propose the neural string edit distance model for string-pair matching and string transduction based on learnable string edit distance. We modify the original expectation-maximization learned edit distance algorithm into a differentiable loss function, allowing us to integrate it into a neural network providing a contextual representation of the input. We evaluate on cognate detection, transliteration, and grapheme-to-phoneme conversion, and show that we can trade off between performance and interpretability in a single framework. Using contextual representations, which are difficult to interpret, we match the performance of state-of-the-art string-pair matching models. Using static embeddings and a slightly different loss function, we force interpretability, at the expense of an accuracy drop.</abstract>
      <url hash="d2a70555">2022.spnlp-1.6</url>
      <bibkey>libovicky-fraser-2022-neural</bibkey>
      <doi>10.18653/v1/2022.spnlp-1.6</doi>
      <pwccode url="https://github.com/jlibovicky/neural-string-edit-distance" additional="false">jlibovicky/neural-string-edit-distance</pwccode>
    </paper>
    <paper id="7">
      <title>Predicting Attention Sparsity in Transformers</title>
      <author><first>Marcos</first><last>Treviso</last></author>
      <author><first>António</first><last>Góis</last></author>
      <author><first>Patrick</first><last>Fernandes</last></author>
      <author><first>Erick</first><last>Fonseca</last></author>
      <author><first>Andre</first><last>Martins</last></author>
      <pages>67-81</pages>
      <abstract>Transformers’ quadratic complexity with respect to the input sequence length has motivated a body of work on efficient sparse approximations to softmax. An alternative path, used by entmax transformers, consists of having built-in exact sparse attention; however this approach still requires quadratic computation. In this paper, we propose Sparsefinder, a simple model trained to identify the sparsity pattern of entmax attention before computing it. We experiment with three variants of our method, based on distances, quantization, and clustering, on two tasks: machine translation (attention in the decoder) and masked language modeling (encoder-only). Our work provides a new angle to study model efficiency by doing extensive analysis of the tradeoff between the sparsity and recall of the predicted attention graph. This allows for detailed comparison between different models along their Pareto curves, important to guide future benchmarks for sparse attention models.</abstract>
      <url hash="eaefbf81">2022.spnlp-1.7</url>
      <bibkey>treviso-etal-2022-predicting</bibkey>
      <doi>10.18653/v1/2022.spnlp-1.7</doi>
      <pwcdataset url="https://paperswithcode.com/dataset/wikitext-103">WikiText-103</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/wikitext-2">WikiText-2</pwcdataset>
    </paper>
  </volume>
</collection>
